[
    {
        "site": "community",
        "rank": 4,
        "documentId": "fda5eba3f5ac3251c123c5a2e1c3dbb0af771537",
        "title": "How to overwrite Spring Data MongoDB variable to access Platform.sh services",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eIn this tutorial, we’ll cover how you can overwrite \u003ca href=\"https://spring.io/\" rel=\"nofollow noopener\"\u003eSpring\u003c/a\u003e  \u003ca href=\"https://spring.io/projects/spring-data-mongodb\" rel=\"nofollow noopener\"\u003eData MongoDB\u003c/a\u003e configurations to access the services in \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003ePreparation\u003c/h2\u003e\n\u003cp\u003eThis tutorial assumes you have\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eA working Spring Data MongoDB application with Java 8 or higher\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eA text editor of your choice.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e has a \u003ca href=\"https://github.com/platformsh/config-reader-java\" rel=\"nofollow noopener\"\u003eJava configuration-reader\u003c/a\u003e that provides a streamlined and easy to use way to interact with a \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment and its \u003ca href=\"https://docs.platform.sh/configuration/services.html\"\u003eservices\u003c/a\u003e. However, you can also use the application regularly and overwrite those configurations when you deploy your application on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. That is useful when you either already have one app and want to move to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e or keep the default configuration to run locally.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003cp\u003eTo keep the configurations Spring has, by default, the \u003ccode\u003eapplication.properties\u003c/code\u003e file where you can set the settings that you wish on your application. Furthermore, \u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-external-config\" rel=\"nofollow noopener\"\u003ethose settings can be overwritten as external configuration\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eGive a Spring Data MongoDB application that you’re running locally with either an empty or non \u003ccode\u003eapplications.properties\u003c/code\u003e file:\u003c/p\u003e\n\u003cp\u003eYou can overwrite those configurations on the \u003ccode\u003eplatform.app.yaml\u003c/code\u003e the application configuration to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. As shown in the configuration below.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003ename: app\ntype: \"java:11\"\ndisk: 1024\n\nhooks:\n    build: mvn clean install\n\nrelationships:\n  database: 'mongodb:mongodb'\n\n# The configuration of app when it is exposed to the web.\nweb:\n    commands:\n        start:  |\n           export USER=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".database[0].username\"`\n           export PASSWORD=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".database[0].password\"`\n           export HOST=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".database[0].host\"`\n           export DATABASE=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".database[0].path\"`\n           java -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError \\\n           -Dspring.data.mongodb.database=$DATABASE \\\n           -Dspring.data.mongodb.host=$HOST \\\n           -Dspring.data.mongodb.username=$USER \\\n           -Dspring.data.mongodb.password=$PASSWORD \\\n            target/spring-boot.jar --server.port=$PORT\n\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eTherefore, you can have the configuration or just migrate the application that already exists to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://spring.io/\" rel=\"nofollow noopener\"\u003eSpring\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://spring.io/projects/spring-data-mongodb\" rel=\"nofollow noopener\"\u003eSpring Data MongoDB\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html\" rel=\"nofollow noopener\"\u003eSpring Properties\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-external-config\" rel=\"nofollow noopener\"\u003eSpring Externalized Configuration\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/frameworks/spring.html\"\u003eSpring with Platform.sh Configuration Reader\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/java-overwrite-configuration/tree/master/spring-mongodb\" rel=\"nofollow noopener\"\u003eSource code\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-overwrite-spring-data-mongodb-variable-to-access-platform-sh-services/528",
        "relurl": "/t/how-to-overwrite-spring-data-mongodb-variable-to-access-platform-sh-services/528"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "ba3b8c6cf146e8c479811339d69b6cdf41e2c1a4",
        "title": "How to flush the Fastly cache",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eTo purge all cached assets from the CDN layer sitting in front of your site.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cp\u003eYou will need:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTo have \u003ccode\u003eFastly\u003c/code\u003e cache running in front of your site\u003c/li\u003e\n\u003cli\u003eThe ability to run \u003ccode\u003ecurl\u003c/code\u003e from your local terminal,\u003c/li\u003e\n\u003cli\u003eWorking access to the \u003ccode\u003eplatform\u003c/code\u003e command for your project\u003cbr\u003e\nOR\u003c/li\u003e\n\u003cli\u003eRead access to the \u003ccode\u003eVariables\u003c/code\u003e on your project through the web console.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003eFor most Enterprise or Premium plans, The \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e setup team has configured \u003ccode\u003eFastly\u003c/code\u003e CDN for you, and manages it on your behalf with a built-in account. This means you do not have direct administration access using the Fastly web UI, where a ‘Purge’ button can be found.\u003c/p\u003e\n\u003cp\u003eHowever, you have been issued with an “API” key that allows you access to many actions on your account, and you can initiate a purge using this.\u003c/p\u003e\n\u003ch2\u003eTo purge a single page\u003c/h2\u003e\n\u003cp\u003eFastly lets you \u003ca href=\"https://docs.fastly.com/api/purge#purge_3aa1d66ee81dbfed0b03deed0fa16a9a\" rel=\"nofollow noopener\"\u003epurge individual URLs with no authentication\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003ecurl -X PURGE $url\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThat’s it!\u003c/p\u003e\n\u003ch2\u003eTo Purge all\u003c/h2\u003e\n\u003cp\u003eYou need use the API key.\u003c/p\u003e\n\u003cp\u003eAll projects with Fastly configured \u003cem\u003eshould\u003c/em\u003e have had the env:FASTLY_API_TOKEN set in their\u003cbr\u003e\n\u003ccode\u003e/master/settings/variables\u003c/code\u003e\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eSome older dedicated plans do \u003cem\u003enot\u003c/em\u003e have it here, and the API token is instead stored in a text file on the server. If you can’t find the value in the environment variables, check for a file called \u003ccode\u003e/mnt/shared/fastly_tokens.txt\u003c/code\u003e on your server.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003eThis key can be used to construct a \u003ccode\u003epurge_all\u003c/code\u003e API request.\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"https://docs.fastly.com/api/purge#purge_bee5ed1a0cfd541e8b9f970a44718546\" rel=\"nofollow noopener\"\u003eFastly API documentation says\u003c/a\u003e to construct a request like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ePOST /service/SU1Z0isxPaozGVKXdv0eY/purge_all HTTP/1.1\nFastly-Key: YOUR_FASTLY_TOKEN\nAccept: application/json\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSo, from a local CLI, run this sequence to retrieve your keys:\u003cbr\u003e\n(or you can just set the variables to the values you can see in the web console yourself)\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003eFASTLY_SERVICE_ID=$(platform --project=$PROJECTID --environment=master variable:get env:FASTLY_SERVICE_ID --pipe)\nFASTLY_API_TOKEN=$(platform --project=$PROJECTID --environment=master variable:get env:FASTLY_API_TOKEN --pipe)\n# Legacy: If these environment variables do not exist on your installation, try looking for a file called `/mnt/shared/fastly_tokens.txt` instead.\n\nFASTLY_API_URL=\"https://api.fastly.com\"\n    \ncurl -H \"Fastly-Key: $FASTLY_API_TOKEN\" \\\n  -X POST \"${FASTLY_API_URL}/service/${FASTLY_SERVICE_ID}/purge_all\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eeg:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003ecurl -H Fastly-Key: nfDDFUahPwV4wQiJOMbLwJsCBy3Wh4TQ -X POST https://api.fastly.com/service/nOBmPqIK5M71NgZMhLYTZk/purge_all\n\n{\"status\":\"ok\"}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4\u003eVerify it really worked\u003c/h4\u003e\n\u003cp\u003eTo empirically test, you could retrieve a page from your site and see if it looks right \u003cimg src=\"https://community.platform.sh/images/emoji/twitter/slight_smile.png?v=9\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"\u003e  , or immediately make a network request and check the cache headers and dates:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ecurl -I -s $url\n\nHTTP/2 200\n...\ncache-control: max-age=3600, public\nlast-modified: Fri, 06 Mar 2020 01:36:16 GMT\ndate: Fri, 06 Mar 2020 02:26:54 GMT\n...\nvia: 1.1 varnish\nage: 0\nx-served-by: cache-syd10142-SYD, cache-hkg17927-HKG\nx-cache: MISS, MISS\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe \u003ccode\u003ex-served-by\u003c/code\u003e and \u003ccode\u003evia\u003c/code\u003e confirm that a cache is working.\u003cbr\u003e\nUnless someone else has already requested this page just ahead of you, you should see a \u003ccode\u003eMISS\u003c/code\u003e in the \u003ccode\u003ex-cache\u003c/code\u003e.\u003cbr\u003e\nEither way, the \u003ccode\u003eage\u003c/code\u003e (in seconds) should be low, and the \u003ccode\u003edate\u003c/code\u003e should be fresh. Ignore the \u003ccode\u003elast-modified\u003c/code\u003e\u003c/p\u003e\n\u003ch4\u003eVerify via API (just FYI)\u003c/h4\u003e\n\u003cp\u003eTo verify the command ran as expected, you can retrieve a list of the \u003ca href=\"https://docs.fastly.com/api/account#events_78ed310c6d59be709d53ddafbe786699\" rel=\"nofollow noopener\"\u003erecent events\u003c/a\u003e, with a command like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003ecurl -H \"Fastly-Key: $FASTLY_API_TOKEN\"  -X GET \"${FASTLY_API_URL}/events?page[number]=1\u0026amp;page[size]=10\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e…which should return a response including something like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-json\"\u003e    {\n      \"id\": \"miaXP6k1OLwUdOIXcKkiHG\",\n      \"type\": \"event\",\n      \"attributes\": {\n        \"customer_id\": \"rSam6DCAgeyDU7gSoC5pJi\",\n        \"description\": \"Purge all was performed\",\n        \"event_type\": \"service.purge_all\",\n        \"ip\": \"118.173.60.218, 118.173.60.218\",\n        \"metadata\": {},\n        \"service_id\": \"ZknOBmPqIK5M71NgZMhLYT\",\n        \"user_id\": \"TdqCvp120Tm185r3gn4DYR\",\n        \"created_at\": \"2020-03-06T01:35:35Z\",\n        \"admin\": false\n      }\n    },\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eThis is a quick method to flush your CDN cache as needed.\u003c/p\u003e\n\u003cp\u003eThere are many other actions possible through the \u003ca href=\"https://docs.fastly.com/api/\" rel=\"nofollow noopener\"\u003eFastly API\u003c/a\u003e though not all will be available to the account granted with that API key.\u003c/p\u003e\n\u003cp\u003eIf you are using a CMS like Drupal, then a \u003ca href=\"https://www.drupal.org/project/fastly\" rel=\"nofollow noopener\"\u003eFastly module\u003c/a\u003e can be installed to integrate cache management into your CMS. This provides an easier interface to actions like this. This approach also lets the CMS invoke a CDN purge when things change, so is recommended if you need to tune things finer.\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-flush-the-fastly-cache/484",
        "relurl": "/t/how-to-flush-the-fastly-cache/484"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "b36b50ada8f8f87e2781ab63f8b134cc299e82e0",
        "title": "How to Check my Fastly CDN peformance (Cache hit ratio)",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eTo review how effective the cache layer is, you may want to check the “Hit Ratio” of the content it is serving.\u003c/p\u003e\n\u003cp\u003eA busy read-only site with its cache preferences properly configured can be seen to serve percentages in the high 90’s; while if you see a cache ratio down below 60%, the server is probably working pretty hard, and some things can be done - either at the app level, of just in the Response-Headers, to improve cache-ability and responsiveness.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cp\u003eYou will need:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e plan with managed Fastly cache enabled. This usually means an “Enterprise Dedicated” plan.\u003c/li\u003e\n\u003cli\u003eRead access to your hosting server - the ability to ssh in and read a file there.\u003cbr\u003e\nThis is best done by installing and using the \u003ccode\u003eplatform\u003c/code\u003e CLI tool, though plain \u003ccode\u003essh\u003c/code\u003e work as well.\u003c/li\u003e\n\u003cli\u003eAccess to the \u003ccode\u003ecurl\u003c/code\u003e tool. if you don’t have it installed locally, you can use it when ssh-ed in to your instance.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eChallenge\u003c/h2\u003e\n\u003cp\u003eFor managed-CDN plans, \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e looks after your Fastly subscriptions. Which is great, because cache management is hard. But this does mean that you don’t get direct access to some of the reporting tools that Fastly provides.\u003c/p\u003e\n\u003cp\u003eWhile you may not get dashboard access, you do get to use the \u003ca href=\"https://developer.fastly.com/reference/api/\" rel=\"nofollow noopener\"\u003eFastly API\u003c/a\u003e with an access token that’s been attached to your account.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003ch3\u003e1. SSH in to your production instance\u003c/h3\u003e\n\u003cpre\u003e\u003ccode\u003eplatform ssh --environment=production\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Retrieve your API token\u003c/h3\u003e\n\u003cp\u003eThis will have been added to your production instance, conventionally in the location\u003cbr\u003e\n\u003ccode\u003e/mnt/shared/fastly_tokens.txt\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ cat /mnt/shared/fastly_tokens.txt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis should return something like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-nohighlight\"\u003eService: myprojectname\nService ID: C8L8ykr4PCC65vQ8TK97td\nAPI Token: 74919c95e59ec799bc82641811e4e3b4\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSo, save that as variables:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ FASTLY_SERVICE_ID=\"C8L8ykr4PCC65vQ8TK97td\"\n$ FASTLY_API_TOKEN=\"74919c95e59ec799bc82641811e4e3b4\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e3. Use the Fastly API to ask for your statistics\u003c/h3\u003e\n\u003cp\u003eHistorical stats can be retrieved from the \u003ca href=\"https://developer.fastly.com/reference/api/metrics-stats/historical-stats/\" rel=\"nofollow noopener\"\u003e\u003ccode\u003e/stats\u003c/code\u003e endpoint\u003c/a\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ecurl \"https://api.fastly.com/stats/service/${FASTLY_SERVICE_ID}/field/hit_ratio?from=2+days+ago\"  \\\n  -XGET \\\n  -H \"Fastly-Key: ${FASTLY_API_TOKEN}\" \\\n  -H \"Accept: Application/json\" \\\n  -k\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e4. Check the result\u003c/h3\u003e\n\u003cp\u003eIt’s machine-readable, not so much human-readable, but:\u003cbr\u003e\nHopefully you’ll see something like:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e{\n   \"msg\" : null,\n   \"status\" : \"success\",\n   \"data\" : [\n      {\n         \"service_id\" : \"C8L8ykr4PCC65vQ8TK97td\",\n         \"hit_ratio\" : 0.818625522455654,\n         \"start_time\" : 1589846900\n      }\n   ],\n   \"meta\" : {\n      \"to\" : \"2020-05-22 12:21:00 UTC\",\n      \"by\" : \"day\",\n      \"from\" : \"2020-05-24 12:21:00 UTC\",\n      \"region\" : \"all\"\n   }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ethe \u003ccode\u003ehit_ratio\u003c/code\u003e there indicates that 81% of all requests were cacheable, and being returned by the CDN.\u003c/p\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e plans with managed Fastly CDN accounts \u003cem\u003edo\u003c/em\u003e provide you access to an amount of management options, but you have to work through the API to get at them.\u003c/p\u003e\n\u003cp\u003eThis example gives you the recent “hit ratio”, but there are \u003ca href=\"https://developer.fastly.com/reference/api/metrics-stats/historical-stats/\" rel=\"nofollow noopener\"\u003eother stats available\u003c/a\u003e also, that can be retrieved in a similar way.\u003c/p\u003e\n\u003cp\u003eSee also \u003ca href=\"https://community.platform.sh/t/how-to-flush-the-fastly-cache/484\"\u003eHow to flush the Fastly Cache\u003c/a\u003e\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-check-my-fastly-cdn-peformance-cache-hit-ratio/566",
        "relurl": "/t/how-to-check-my-fastly-cdn-peformance-cache-hit-ratio/566"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "8e59e86395060653ab9d1ba14659202021de2199",
        "title": "How to use the latest npm version",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eNPM is a package manager for the JavaScript programming language. This guide will explain how to keep the latest version.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cp\u003eYou will need:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ean active \u003ca href=\"https://platform.sh/\"\u003ePlatform.sh \u003c/a\u003e project\u003c/li\u003e\n\u003cli\u003eA text editor of your choice.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003cp\u003eExplicitly, set the npm as the \u003ccode\u003elatest\u003c/code\u003e version as the code below shows.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003edependencies:\n    nodejs:\n        npm: latest\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/languages/nodejs.html\"\u003eNodeJS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/languages/nodejs/nvm.html\"\u003eAlernative Node.js install\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-use-the-latest-npm-version/562",
        "relurl": "/t/how-to-use-the-latest-npm-version/562"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "75c9cbef75a0b5e57b7cac8efc696438f8da11eb",
        "title": "How to access MySQL/MariaDB credentials on Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eAccess credentials for MySQL/MariaDB from within a \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e application using Node.js.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ean active \u003ca href=\"https://platform.sh/\"\u003ePlatform.sh\u003c/a\u003e project\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/services/mysql.html\"\u003econfigured\u003c/a\u003e \u003ccode\u003e.platform/services.yaml\u003c/code\u003e for the given service\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://docs.platform.sh/development/ssh.html#using-ssh-keys\"\u003eSSH key configured\u003c/a\u003e on account if developing locally\u003c/li\u003e\n\u003cli\u003eMySQL installed if developing locally\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/app/relationships.html\"\u003econfigured\u003c/a\u003e MySQL/MariaDB relationship like so, in \u003ccode\u003e.platform.app.yaml\u003c/code\u003e:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003erelationships:\n    database: \"db:mysql\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf developing locally, remember to first open a tunnel to the project environment using the \u003ca href=\"https://docs.platform.sh/gettingstarted/cli.html#cli-command-line-interface\"\u003ePlatform CLI\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ platform tunnel:open \u0026amp;\u0026amp; export PLATFORM_RELATIONSHIPS=\"$(platform tunnel:info --encode)\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis will open an SSH tunnel to your current \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment and expose a local environment variable that mimics the relationships array on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. Check the \u003ca href=\"https://docs.platform.sh/gettingstarted/local/tethered.html\"\u003ePlatform.sh documentation\u003c/a\u003e and \u003ca href=\"https://community.platform.sh/t/how-to-develop-locally-on-platform-sh-with-a-tethered-connection/69\"\u003eHow to develop locally on Platform.sh with a tethered connection\u003c/a\u003e for more information.\u003c/p\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e service credentials are made available to applications as the \u003ccode\u003ePLATFORM_RELATIONSHIPS\u003c/code\u003e environment variable, which is a base64-encoded JSON string that has to be decoded before it can be used.\u003c/p\u003e\n\u003cp\u003eThere are two primary options for accessing service credentials on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e that can be used within an application:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eUsing the \u003ca href=\"https://github.com/platformsh/config-reader-nodejs\" rel=\"nofollow noopener\"\u003ePlatform.sh Config Reader library\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eAccessing environment variables directly\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eSteps (Config Reader)\u003c/h2\u003e\n\u003ch3\u003e1. Install the library\u003c/h3\u003e\n\u003cp\u003eInstall the configuration library. See the \u003ca href=\"https://github.com/platformsh/config-reader-nodejs\" rel=\"nofollow noopener\"\u003edocumentation\u003c/a\u003e for minimum requirements.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ npm install platformsh-config --save\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Create a Config object\u003c/h3\u003e\n\u003cp\u003eCreating a \u003ccode\u003eConfig\u003c/code\u003e object provides access to the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003econst config = require(\"platformsh-config\").config();\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e3. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e// Get the credentials to connect to the MySQL/MariaDB service.\nconst credentials = config.credentials('database');\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eSteps (Manual)\u003c/h2\u003e\n\u003ch3\u003e1. Load the environment variable\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003erelationships = JSON.parse(new Buffer(process.env['PLATFORM_RELATIONSHIPS'], 'base64').toString());\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003econst credentials = relationships['database'];\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eUse\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003epath\u003c/code\u003e is the database name that will be needed to connect. Pass the needed properties to your MySQL library’s setup routine in your application. Most of the time the other values may be ignored.\u003c/p\u003e\n\u003cp\u003eIn either case, \u003ccode\u003ecredentials\u003c/code\u003e is a an object matching the relationship JSON object, which includes the appropriate user, password, host, database name, and other pertinent information.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-json\"\u003e{\n  \"username\": \"user\",\n  \"scheme\": \"mysql\",\n  \"service\": \"db\",\n  \"fragment\": null,\n  \"ip\": \"169.254.147.122\",\n  \"hostname\": \"czwb2d7zzunu67lh77infwkm6i.mysql.service._.eu-3.platformsh.site\",\n  \"public\": false,\n  \"cluster\": \"rjify4yjcwxaa-master-7rqtwti\",\n  \"host\": \"database.internal\",\n  \"rel\": \"mysql\",\n  \"query\": {\n    \"is_master\": true\n  },\n  \"path\": \"main\",\n  \"password\": \"\",\n  \"type\": \"mysql:10.2\",\n  \"port\": 3306\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eConclusions\u003c/h2\u003e\n\u003cp\u003eUsing either the language-specific \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e Configuration library or direct access methods for environment variables, an application can get MySQL/MariaDB credentials in Node.js.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e supports configuration libraries for multiple languages. The \u003ca href=\"https://github.com/platformsh/config-reader-nodejs\" rel=\"nofollow noopener\"\u003eNode.js configuration library\u003c/a\u003e can be useful for inspecting the project environment:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e// Checks whether the code is running in a build environment\nconfig.inBuild()\n// Checks whether the code is running in a runtime environment\nconfig.inRuntime()\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eand for reading environment variables as attributes of \u003ccode\u003econfig\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e// Available in Build and at Runtime\nconfig.appDir;\n// Available at Runtime only\nconfig.branch;\nconfig.smtpHost;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe APIs for each language are written to be as consistent as possible, but seek out each library’s documentation for specific differences.\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-access-mysql-mariadb-credentials-on-platform-sh/149",
        "relurl": "/t/how-to-access-mysql-mariadb-credentials-on-platform-sh/149"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "e4e26a648cd947662617792a323599f918c1f549",
        "title": "How to access Memcached credentials on Platform.sh",
        "description": "",
        "text": "\u003ch3\u003eGoal\u003c/h3\u003e\n\u003cp\u003eAccess credentials for Memcached from within a \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e application using Node.js.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ean active \u003ca href=\"https://platform.sh/\"\u003ePlatform.sh\u003c/a\u003e project\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/services/memcached.html\"\u003econfigured\u003c/a\u003e \u003ccode\u003e.platform/services.yaml\u003c/code\u003e for the given service\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://docs.platform.sh/development/ssh.html#using-ssh-keys\"\u003eSSH key configured\u003c/a\u003e on account if developing locally\u003c/li\u003e\n\u003cli\u003eMemcached installed if developing locally\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/app/relationships.html\"\u003econfigured\u003c/a\u003e Memcached relationship like so, in \u003ccode\u003e.platform.app.yaml\u003c/code\u003e:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003erelationships:\n     memcachedcache: \"cachemc:memcached\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf developing locally, remember to first open a tunnel to the project environment using the \u003ca href=\"https://docs.platform.sh/gettingstarted/cli.html#cli-command-line-interface\"\u003ePlatform CLI\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ platform tunnel:open \u0026amp;\u0026amp; export PLATFORM_RELATIONSHIPS=\"$(platform tunnel:info --encode)\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis will open an SSH tunnel to your current \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment and expose a local environment variable that mimics the relationships array on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. Check the \u003ca href=\"https://docs.platform.sh/gettingstarted/local/tethered.html\"\u003ePlatform.sh documentation\u003c/a\u003e and \u003ca href=\"https://community.platform.sh/t/how-to-develop-locally-on-platform-sh-with-a-tethered-connection/69\"\u003eHow to develop locally on Platform.sh with a tethered connection\u003c/a\u003e for more information.\u003c/p\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e service credentials are made available to applications as the \u003ccode\u003ePLATFORM_RELATIONSHIPS\u003c/code\u003e environment variable, which is a base64-encoded JSON string that has to be decoded before it can be used.\u003c/p\u003e\n\u003cp\u003eThere are two primary options for accessing service credentials on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e that can be used within an application:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eUsing the \u003ca href=\"https://github.com/platformsh/config-reader-nodejs\" rel=\"nofollow noopener\"\u003ePlatform.sh Config Reader library\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eAccessing environment variables directly\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eSteps (Config Reader)\u003c/h2\u003e\n\u003ch3\u003e1. Install the library\u003c/h3\u003e\n\u003cp\u003eInstall the configuration library. See the \u003ca href=\"https://github.com/platformsh/config-reader-nodejs\" rel=\"nofollow noopener\"\u003edocumentation\u003c/a\u003e for minimum requirements.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ npm install platformsh-config --save\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Create a Config object\u003c/h3\u003e\n\u003cp\u003eCreating a \u003ccode\u003eConfig\u003c/code\u003e object provides access to the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003econst config = require(\"platformsh-config\").config();\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e3. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e// Get the credentials to connect to the Memcached service.\nconst credentials = config.credentials('memcachedcache');\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eSteps (Manual)\u003c/h2\u003e\n\u003ch3\u003e1. Load the environment variable\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003erelationships = JSON.parse(new Buffer(process.env['PLATFORM_RELATIONSHIPS'], 'base64').toString());\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ecredentials = relationships['memcachedcache'];\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eUse\u003c/h2\u003e\n\u003cp\u003eIn most cases, you will need only the \u003ccode\u003ehost\u003c/code\u003e and \u003ccode\u003eport\u003c/code\u003e properties to connect to Memcached. Pass those to your Memecached library’s setup routine in your application. Most of the time the other values may be ignored.\u003c/p\u003e\n\u003cp\u003eIn either case, \u003ccode\u003ecredentials\u003c/code\u003e is a an object matching the relationship JSON object, which includes the appropriate user, password, host, database name, and other pertinent information.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-json\"\u003e{\n  \"service\": \"cachemc\",\n  \"ip\": \"169.254.192.212\",\n  \"hostname\": \"tmimatsnz2dv26qlpuespenf3u.memcached.service._.eu-3.platformsh.site\",\n  \"cluster\": \"rjify4yjcwxaa-master-7rqtwti\",\n  \"host\": \"memcachedcache.internal\",\n  \"rel\": \"memcached\",\n  \"scheme\": \"memcached\",\n  \"type\": \"memcached:1.4\",\n  \"port\": 11211\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eConclusions:\u003c/h2\u003e\n\u003cp\u003eUsing either the language-specific \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e Configuration library or direct access methods for environment variables, an application can get Memcached credentials in Node.js.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e supports configuration libraries for multiple languages. The \u003ca href=\"https://github.com/platformsh/config-reader-nodejs\" rel=\"nofollow noopener\"\u003eNode.js configuration library\u003c/a\u003e can be useful for inspecting the project environment:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e// Checks whether the code is running in a build environment\nconfig.inBuild()\n// Checks whether the code is running in a runtime environment\nconfig.inRuntime()\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eand for reading environment variables as attributes of \u003ccode\u003econfig\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e// Available in Build and at Runtime\nconfig.appDir;\n// Available at Runtime only\nconfig.branch;\nconfig.smtpHost;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe APIs for each language are written to be as consistent as possible, but seek out each library’s documentation for specific differences.\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-access-memcached-credentials-on-platform-sh/147",
        "relurl": "/t/how-to-access-memcached-credentials-on-platform-sh/147"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "83a7ccb4fdbab0a788c48c32fb2f5b8861de7a60",
        "title": "How to access RabbitMQ credentials on Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal:\u003c/h2\u003e\n\u003cp\u003eAccess credentials for RabbitMQ from within a \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e application using Python.\u003c/p\u003e\n\u003ch2\u003eAssumptions:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ean active \u003ca href=\"https://platform.sh/\"\u003ePlatform.sh\u003c/a\u003e project\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/services/rabbitmq.html\"\u003econfigured\u003c/a\u003e \u003ccode\u003e.platform/services.yaml\u003c/code\u003e for the given service\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://docs.platform.sh/development/ssh.html#using-ssh-keys\"\u003eSSH key configured\u003c/a\u003e on account if developing locally\u003c/li\u003e\n\u003cli\u003eRabbitMQ installed if developing locally\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/app/relationships.html\"\u003econfigured\u003c/a\u003e RabbitMQ relationship like so, in \u003ccode\u003e.platform.app.yaml\u003c/code\u003e:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003erelationships:\n    rabbitmqqueue: \"queuerabbit:rabbitmq\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf developing locally, remember to first open a tunnel to the project environment using the \u003ca href=\"https://docs.platform.sh/gettingstarted/cli.html#cli-command-line-interface\"\u003ePlatform CLI\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ platform tunnel:open \u0026amp;\u0026amp; export PLATFORM_RELATIONSHIPS=\"$(platform tunnel:info --encode)\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis will open an SSH tunnel to your current \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment and expose a local environment variable that mimics the relationships array on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. Check the \u003ca href=\"https://docs.platform.sh/gettingstarted/local/tethered.html\"\u003ePlatform.sh documentation\u003c/a\u003e and \u003ca href=\"https://community.platform.sh/t/how-to-develop-locally-on-platform-sh-with-a-tethered-connection/69\"\u003eHow to develop locally on Platform.sh with a tethered connection\u003c/a\u003e for more information.\u003c/p\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e service credentials are made available to applications as the \u003ccode\u003ePLATFORM_RELATIONSHIPS\u003c/code\u003e environment variable, which is a base64-encoded JSON string that has to be decoded before it can be used.\u003c/p\u003e\n\u003cp\u003eThere are two primary options for accessing service credentials on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e that can be used within an application:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eUsing the \u003ca href=\"https://github.com/platformsh/config-reader-python\" rel=\"nofollow noopener\"\u003ePlatform.sh Config Reader library\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eAccessing environment variables manually\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eSteps (Config Reader)\u003c/h2\u003e\n\u003ch3\u003e1. Install the library\u003c/h3\u003e\n\u003cp\u003eInstall the configuration library. See the \u003ca href=\"https://github.com/platformsh/config-reader-python\" rel=\"nofollow noopener\"\u003edocumentation\u003c/a\u003e for minimum requirements.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ pip install platformshconfig\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Create a Config object\u003c/h3\u003e\n\u003cp\u003eCreating a \u003ccode\u003eConfig\u003c/code\u003e object provides access to the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003efrom platformshconfig import Config\n\nconfig = Config()\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e3. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003e# Get the credentials to connect to the RabbitMQ service.\ncredentials = config.credentials('rabbitmqqueue')\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eSteps (Manual)\u003c/h2\u003e\n\u003ch3\u003e1. Load the environment variable\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003eimport os, json, base64\n\nrelationships = json.loads(base64.b64decode(os.environ[\"PLATFORM_RELATIONSHIPS\"]))\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003ecredentials = relationships['rabbitmqqueue']\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eUse\u003c/h2\u003e\n\u003cp\u003eIn most cases, you will need only the \u003ccode\u003ehost\u003c/code\u003e and \u003ccode\u003eport\u003c/code\u003e properties to connect to RabbitMQ.  Pass those to your RabbitMQ library’s setup routine in your application.  Most of the time the other values may be ignored.\u003c/p\u003e\n\u003cp\u003eIn either case, \u003ccode\u003ecredentials\u003c/code\u003e is now a dictionary matching the relationship JSON object.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-json\"\u003e{\n  \"username\": \"guest\",\n  \"scheme\": \"amqp\",\n  \"service\": \"queuerabbit\",\n  \"ip\": \"169.254.107.244\",\n  \"hostname\": \"qmx5lbdjoolco7dqjr7cx26r7q.rabbitmq.service._.eu-3.platformsh.site\",\n  \"cluster\": \"rjify4yjcwxaa-master-7rqtwti\",\n  \"host\": \"rabbitmqqueue.internal\",\n  \"rel\": \"rabbitmq\",\n  \"password\": \"guest\",\n  \"type\": \"rabbitmq:3.5\",\n  \"port\": 5672\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eConclusions\u003c/h2\u003e\n\u003cp\u003eUsing either the language-specific \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e Configuration library or direct access methods for environment variables, an application can get RabbitMQ credentials in Python.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e supports configuration libraries for multiple languages. The \u003ca href=\"https://github.com/platformsh/config-reader-python\" rel=\"nofollow noopener\"\u003ePython configuration library\u003c/a\u003e can be useful for inspecting the project environment:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003e# Checks whether the code is running in a build environment\nconfig.inBuild()\n# Checks whether the code is running in a runtime environment\nconfig.inRuntime()\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eand for reading environment variables as attributes of \u003ccode\u003econfig\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003e# Available in Build and at Runtime\nconfig.appDir\n# Available at Runtime only\nconfig.branch\nconfig.smtpHost\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe APIs for each language are written to be as consistent as possible, but seek out each library’s documentation for specific differences.\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-access-rabbitmq-credentials-on-platform-sh/151",
        "relurl": "/t/how-to-access-rabbitmq-credentials-on-platform-sh/151"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "578d4e3ececc995c4be735729c380b7a4eb2461e",
        "title": "How to access Redis credentials on Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eAccess credentials for Redis from within a \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e application using PHP.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ean active \u003ca href=\"https://platform.sh/\"\u003ePlatform.sh\u003c/a\u003e project\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/services/redis.html\"\u003econfigured\u003c/a\u003e \u003ccode\u003e.platform/services.yaml\u003c/code\u003e for the given service\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://docs.platform.sh/development/ssh.html#using-ssh-keys\"\u003eSSH key configured\u003c/a\u003e on account if developing locally\u003c/li\u003e\n\u003cli\u003eRedis installed if developing locally\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/app/relationships.html\"\u003econfigured\u003c/a\u003e Redis relationship like so, in \u003ccode\u003e.platform.app.yaml\u003c/code\u003e:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003erelationships:\n    rediscache: \"cache:redis\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf developing locally, remember to first open a tunnel to the project environment using the \u003ca href=\"https://docs.platform.sh/gettingstarted/cli.html#cli-command-line-interface\"\u003ePlatform CLI\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ platform tunnel:open \u0026amp;\u0026amp; export PLATFORM_RELATIONSHIPS=\"$(platform tunnel:info --encode)\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis will open an SSH tunnel to your current \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment and expose a local environment variable that mimics the relationships array on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. Check the \u003ca href=\"https://docs.platform.sh/gettingstarted/local/tethered.html\"\u003ePlatform.sh documentation\u003c/a\u003e and \u003ca href=\"https://community.platform.sh/t/how-to-develop-locally-on-platform-sh-with-a-tethered-connection/69\"\u003eHow to develop locally on Platform.sh with a tethered connection\u003c/a\u003e for more information.\u003c/p\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e service credentials are made available to applications as the \u003ccode\u003ePLATFORM_RELATIONSHIPS\u003c/code\u003e environment variable, which is a base64-encoded JSON string that has to be decoded before it can be used.\u003c/p\u003e\n\u003cp\u003eThere are two primary options for accessing service credentials on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e that can be used within an application:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eUsing the \u003ca href=\"https://github.com/platformsh/config-reader-php\" rel=\"nofollow noopener\"\u003ePlatform.sh Config Reader library\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eAccessing environment variables directly\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eSteps (Config Reader)\u003c/h2\u003e\n\u003ch3\u003e1. Install the library\u003c/h3\u003e\n\u003cp\u003eInstall the configuration library. See the \u003ca href=\"https://github.com/platformsh/config-reader-php\" rel=\"nofollow noopener\"\u003edocumentation\u003c/a\u003e for minimum requirements.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ composer install platformsh/config-reader\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Create a Config object\u003c/h3\u003e\n\u003cp\u003eCreating a \u003ccode\u003eConfig\u003c/code\u003e object provides access to the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-php\"\u003euse Platformsh\\ConfigReader\\Config;\n\n$config = new Config();\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e3. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-php\"\u003e// Get the credentials to connect to the Redis service.\n$credentials = $config-\u0026gt;credentials('rediscache');\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eSteps (Manual)\u003c/h2\u003e\n\u003ch3\u003e1. Load the environment variable\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-php\"\u003e$relationships = json_decode(base64_decode(getenv('PLATFORM_RELATIONSHIPS')), TRUE);\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-php\"\u003e$credentials = $relationships['rediscache'];\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eUse\u003c/h2\u003e\n\u003cp\u003eIn most cases, you will need only the  \u003ccode\u003ehost\u003c/code\u003e  and  \u003ccode\u003eport\u003c/code\u003e  properties to connect to Redis. Pass those to your Redis library’s setup routine in your application. Most of the time the other values may be ignored.\u003c/p\u003e\n\u003cp\u003eIn either case, \u003ccode\u003ecredentials\u003c/code\u003e is now an array matching the relationship JSON object.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-json\"\u003e{\n  \"username\": null,\n  \"scheme\": \"redis\",\n  \"service\": \"cache\",\n  \"fragment\": null,\n  \"ip\": \"169.254.22.205\",\n  \"hostname\": \"2wye4dawv22vhvozyec3o5hxfm.redis.service._.eu-3.platformsh.site\",\n  \"public\": false,\n  \"cluster\": \"rjify4yjcwxaa-master-7rqtwti\",\n  \"host\": \"rediscache.internal\",\n  \"rel\": \"redis\",\n  \"query\": [\n    \n  ],\n  \"path\": null,\n  \"password\": null,\n  \"type\": \"redis:5.0\",\n  \"port\": 6379\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eConclusions\u003c/h2\u003e\n\u003cp\u003eUsing either the language-specific \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e Configuration library or direct access methods for environment variables, an application can get Redis credentials in PHP.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e supports configuration libraries for multiple languages. The \u003ca href=\"https://github.com/platformsh/config-reader-php\" rel=\"nofollow noopener\"\u003ePHP configuration library\u003c/a\u003e can be useful for inspecting the project environment:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-php\"\u003e// Checks whether the code is running in a build environment\n$config-\u0026gt;inBuild();\n// Checks whether the code is running in a runtime environment\n$config-\u0026gt;inRuntime();\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eand for reading environment variables as attributes of \u003ccode\u003econfig\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-php\"\u003e// Available in Build and at Runtime\n$config-\u0026gt;appDir;\n// Available at Runtime only\n$config-\u0026gt;branch;\n$config-\u0026gt;smtpHost;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe APIs for each language are written to be as consistent as possible, but seek out each library’s documentation for specific differences.\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-access-redis-credentials-on-platform-sh/152",
        "relurl": "/t/how-to-access-redis-credentials-on-platform-sh/152"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "4f91d2c8a0031e327247e117b949cf722dd93a57",
        "title": "How to access Elasticsearch credentials on Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eAccess credentials for Elasticsearch from within a \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e application using Python.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ean active \u003ca href=\"https://platform.sh/\"\u003ePlatform.sh\u003c/a\u003e project\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/services/elasticsearch.html\"\u003econfigured\u003c/a\u003e \u003ccode\u003e.platform/services.yaml\u003c/code\u003e for the given service\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://docs.platform.sh/development/ssh.html#using-ssh-keys\"\u003eSSH key configured\u003c/a\u003e on account if developing locally\u003c/li\u003e\n\u003cli\u003eElasticsearch installed if developing locally\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/app/relationships.html\"\u003econfigured\u003c/a\u003e Elasticsearch relationship like so, in \u003ccode\u003e.platform.app.yaml\u003c/code\u003e:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003erelationships:\n    essearch: \"searchelastic:elasticsearch\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf developing locally, remember to first open a tunnel to the project environment using the \u003ca href=\"https://docs.platform.sh/gettingstarted/cli.html#cli-command-line-interface\"\u003ePlatform CLI\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ platform tunnel:open \u0026amp;\u0026amp; export PLATFORM_RELATIONSHIPS=\"$(platform tunnel:info --encode)\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis will open an SSH tunnel to your current \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment and expose a local environment variable that mimics the relationships array on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. Check the \u003ca href=\"https://docs.platform.sh/gettingstarted/local/tethered.html\"\u003ePlatform.sh documentation\u003c/a\u003e and \u003ca href=\"https://community.platform.sh/t/how-to-develop-locally-on-platform-sh-with-a-tethered-connection/69\"\u003eHow to develop locally on Platform.sh with a tethered connection\u003c/a\u003e for more information.\u003c/p\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e service credentials are made available to applications as the \u003ccode\u003ePLATFORM_RELATIONSHIPS\u003c/code\u003e environment variable, which is a base64-encoded JSON string that has to be decoded before it can be used.\u003c/p\u003e\n\u003cp\u003eThere are two primary options for accessing service credentials on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e that can be used within an application:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eUsing the \u003ca href=\"https://github.com/platformsh/config-reader-python\" rel=\"nofollow noopener\"\u003ePlatform.sh Config Reader library\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eAccessing environment variables manually\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eSteps (Config Reader)\u003c/h2\u003e\n\u003ch3\u003e1. Install the library\u003c/h3\u003e\n\u003cp\u003eInstall the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e Configuration Reader library. See the \u003ca href=\"https://github.com/platformsh/config-reader-python\" rel=\"nofollow noopener\"\u003edocumentation\u003c/a\u003e for minimum requirements.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ pip install platformshconfig\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Create a Config object\u003c/h3\u003e\n\u003cp\u003eCreating a \u003ccode\u003eConfig\u003c/code\u003e object provides access to the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003efrom platformshconfig import Config\n\nconfig = Config()\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e3. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003e# Get the credentials to connect to the Elasticsearch service.\ncredentials = config.credentials('essearch')\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf the relationship is named something else, modify the \u003ccode\u003ecredentials()\u003c/code\u003e call accordingly.\u003c/p\u003e\n\u003ch2\u003eSteps (Manual)\u003c/h2\u003e\n\u003ch3\u003e1. Load and decode the environment variable\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003eimport os, json, base64\n\nrelationships = json.loads(base64.b64decode(os.environ[\"PLATFORM_RELATIONSHIPS\"]))\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Get the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003ecredentials = relationships['essearch']\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf the relationship is named something else, modify that line accordingly.\u003c/p\u003e\n\u003ch2\u003eUse\u003c/h2\u003e\n\u003cp\u003eIn most cases, you will need only the \u003ccode\u003escheme\u003c/code\u003e, \u003ccode\u003ehost\u003c/code\u003e, and \u003ccode\u003eport\u003c/code\u003e properties to connect to Elasticsearch.  Pass those to your Elasticsearch library’s setup routine in your application.  Most of the time the other values may be ignored.\u003c/p\u003e\n\u003cp\u003eIn either case, \u003ccode\u003ecredentials\u003c/code\u003e is now a dictionary matching the relationship JSON object.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-json\"\u003e{\n  \"username\": null,\n  \"scheme\": \"http\",\n  \"service\": \"searchelastic\",\n  \"fragment\": null,\n  \"ip\": \"169.254.101.149\",\n  \"hostname\": \"j2dkzht3gs2yr66fb2brhoj4zu.elasticsearch.service._.eu-3.platformsh.site\",\n  \"public\": false,\n  \"cluster\": \"rjify4yjcwxaa-master-7rqtwti\",\n  \"host\": \"essearch.internal\",\n  \"rel\": \"elasticsearch\",\n  \"query\": [\n    \n  ],\n  \"path\": null,\n  \"password\": null,\n  \"type\": \"elasticsearch:5.4\",\n  \"port\": 9200\n}        \n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eConclusions\u003c/h2\u003e\n\u003cp\u003eUsing either the language-specific \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e Configuration library or direct access methods for environment variables, an application can get Elasticsearch credentials in Python.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e supports configuration libraries for multiple languages. The \u003ca href=\"https://github.com/platformsh/config-reader-python\" rel=\"nofollow noopener\"\u003ePython configuration library\u003c/a\u003e can be useful for inspecting the project environment:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003e# Checks whether the code is running in a build environment\nconfig.inBuild()\n# Checks whether the code is running in a runtime environment\nconfig.inRuntime()\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eand for reading environment variables as attributes of \u003ccode\u003econfig\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003e# Available in Build and at Runtime\nconfig.appDir\n# Available at Runtime only\nconfig.branch\nconfig.smtpHost\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe APIs for each language are written to be as consistent as possible, but seek out each library’s documentation for specific differences.\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-access-elasticsearch-credentials-on-platform-sh/146",
        "relurl": "/t/how-to-access-elasticsearch-credentials-on-platform-sh/146"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "884bc41074079bab17248fe65e762901d3e6179d",
        "title": "How to access MongoDB credentials on Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eAccess credentials for MongoDB from within a \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e application using Node.js.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ean active \u003ca href=\"https://platform.sh/\"\u003ePlatform.sh\u003c/a\u003e project\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/services/mongodb.html\"\u003econfigured\u003c/a\u003e \u003ccode\u003e.platform/services.yaml\u003c/code\u003e for the given service\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://docs.platform.sh/development/ssh.html#using-ssh-keys\"\u003eSSH key configured\u003c/a\u003e on account if developing locally\u003c/li\u003e\n\u003cli\u003eMongoDB installed if developing locally\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/app/relationships.html\"\u003econfigured\u003c/a\u003e MongoDB relationship like so, in \u003ccode\u003e.platform.app.yaml\u003c/code\u003e:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003erelationships:\n    database: \"dbmongo:mongodb\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf developing locally, remember to first open a tunnel to the project environment using the \u003ca href=\"https://docs.platform.sh/gettingstarted/cli.html#cli-command-line-interface\"\u003ePlatform CLI\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ platform tunnel:open \u0026amp;\u0026amp; export PLATFORM_RELATIONSHIPS=\"$(platform tunnel:info --encode)\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis will open an SSH tunnel to your current \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment and expose a local environment variable that mimics the relationships array on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. Check the \u003ca href=\"https://docs.platform.sh/gettingstarted/local/tethered.html\"\u003ePlatform.sh documentation\u003c/a\u003e and \u003ca href=\"https://community.platform.sh/t/how-to-develop-locally-on-platform-sh-with-a-tethered-connection/69\"\u003eHow to develop locally on Platform.sh with a tethered connection\u003c/a\u003e for more information.\u003c/p\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e service credentials are made available to applications as the \u003ccode\u003ePLATFORM_RELATIONSHIPS\u003c/code\u003e environment variable, which is a base64-encoded JSON string that has to be decoded before it can be used.\u003c/p\u003e\n\u003cp\u003eThere are two primary options for accessing service credentials on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e that can be used within an application:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eUsing the \u003ca href=\"https://github.com/platformsh/config-reader-nodejs\" rel=\"nofollow noopener\"\u003ePlatform.sh Config Reader library\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eAccessing environment variables directly\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eSteps (Config Reader)\u003c/h2\u003e\n\u003ch3\u003e1. Install the library\u003c/h3\u003e\n\u003cp\u003eInstall the configuration library. See the \u003ca href=\"https://github.com/platformsh/config-reader-nodejs\" rel=\"nofollow noopener\"\u003edocumentation\u003c/a\u003e for minimum requirements.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ npm install platformsh-config --save    \n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Create a Config object\u003c/h3\u003e\n\u003cp\u003eCreating a \u003ccode\u003eConfig\u003c/code\u003e object provides access to the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003econst config = require(\"platformsh-config\").config();   \n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e3. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e// Get the credentials to connect to the MongoDB service.    \nconst credentials = config.credentials('database');    \n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eSteps (Manual)\u003c/h2\u003e\n\u003ch3\u003e1. Load and decode the environment variable\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003erelationships = JSON.parse(new Buffer(process.env['PLATFORM_RELATIONSHIPS'], 'base64').toString());    \n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ecredentials = relationships['database'];   \n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eUse\u003c/h2\u003e\n\u003cp\u003eIn most cases, you will need only the \u003ccode\u003ehost\u003c/code\u003e and \u003ccode\u003eport\u003c/code\u003e properties to connect to MongoDB. Pass those to your MongoDB library’s setup routine in your application. Most of the time the other values may be ignored.\u003c/p\u003e\n\u003cp\u003eIn either case, \u003ccode\u003ecredentials\u003c/code\u003e is a an object matching the relationship JSON object.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-json\"\u003e{\n  \"username\": \"main\",\n  \"scheme\": \"mongodb\",\n  \"service\": \"dbmongo\",\n  \"ip\": \"169.254.78.213\",\n  \"hostname\": \"okqb7mbggt4wbyiszla2zy4boq.mongodb.service._.eu-3.platformsh.site\",\n  \"cluster\": \"rjify4yjcwxaa-master-7rqtwti\",\n  \"host\": \"database.internal\",\n  \"rel\": \"mongodb\",\n  \"path\": \"main\",\n  \"query\": {\n    \"is_master\": true\n  },\n  \"password\": \"main\",\n  \"type\": \"mongodb:3.6\",\n  \"port\": 27017\n}        \n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eConclusions\u003c/h2\u003e\n\u003cp\u003eUsing either the language-specific \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e Configuration library or direct access methods for environment variables, an application can get MongoDB credentials in Node.js.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e supports configuration libraries for multiple languages. The \u003ca href=\"https://github.com/platformsh/config-reader-nodejs\" rel=\"nofollow noopener\"\u003eNode.js configuration library\u003c/a\u003e can be useful for connecting to MongoDB without creating the full DSN string using \u003ccode\u003eformattedCredentials\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e// Define formatted credentials\nvar client = await MongoClient.connect(config.formattedCredentials('database', 'mongodb'));\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe APIs for each language are written to be as consistent as possible, but seek out each library’s documentation for specific differences.\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-access-mongodb-credentials-on-platform-sh/145",
        "relurl": "/t/how-to-access-mongodb-credentials-on-platform-sh/145"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "ddc9f9bafab94adf778bb07f7759c42990245dce",
        "title": "How to access PostgreSQL credentials on Platform.sh",
        "description": "",
        "text": "\u003ch3\u003eGoal:\u003c/h3\u003e\n\u003cp\u003eAccess credentials for PostgreSQL from within a \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e application using PHP.\u003c/p\u003e\n\u003ch3\u003eAssumptions:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003ean active \u003ca href=\"https://platform.sh/\"\u003ePlatform.sh\u003c/a\u003e project\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/services/postgresql.html\"\u003econfigured\u003c/a\u003e \u003ccode\u003e.platform/services.yaml\u003c/code\u003e for the given service\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://docs.platform.sh/development/ssh.html#using-ssh-keys\"\u003eSSH key configured\u003c/a\u003e on account if developing locally\u003c/li\u003e\n\u003cli\u003ePostgreSQL installed if developing locally\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/app/relationships.html\"\u003econfigured\u003c/a\u003e PostgreSQL relationship like so, in \u003ccode\u003e.platform.app.yaml\u003c/code\u003e:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003erelationships:\n    database: \"dbpostgres:postgresql\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf developing locally, remember to first open a tunnel to the project environment using the \u003ca href=\"https://docs.platform.sh/gettingstarted/cli.html#cli-command-line-interface\"\u003ePlatform CLI\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ platform tunnel:open \u0026amp;\u0026amp; export PLATFORM_RELATIONSHIPS=\"$(platform tunnel:info --encode)\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis will open an SSH tunnel to your current \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment and expose a local environment variable that mimics the relationships array on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. Check the \u003ca href=\"https://docs.platform.sh/gettingstarted/local/tethered.html\"\u003ePlatform.sh documentation\u003c/a\u003e and \u003ca href=\"https://community.platform.sh/t/how-to-develop-locally-on-platform-sh-with-a-tethered-connection/69\"\u003eHow to develop locally on Platform.sh with a tethered connection\u003c/a\u003e for more information.\u003c/p\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e service credentials are made available to applications as the \u003ccode\u003ePLATFORM_RELATIONSHIPS\u003c/code\u003e environment variable, which is a base64-encoded JSON string that has to be decoded before it can be used.\u003c/p\u003e\n\u003cp\u003eThere are two primary options for accessing service credentials on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e that can be used within an application:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eUsing the \u003ca href=\"https://github.com/platformsh/config-reader-php\" rel=\"nofollow noopener\"\u003ePlatform.sh Config Reader library\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eAccessing environment variables directly\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eSteps (Config Reader)\u003c/h2\u003e\n\u003ch3\u003e1. Install the library\u003c/h3\u003e\n\u003cp\u003eInstall the configuration library. See the \u003ca href=\"https://github.com/platformsh/config-reader-php\" rel=\"nofollow noopener\"\u003edocumentation\u003c/a\u003e for minimum requirements.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ composer install platformsh/config-reader\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Create a Config object\u003c/h3\u003e\n\u003cp\u003eCreating a \u003ccode\u003eConfig\u003c/code\u003e object provides access to the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-php\"\u003euse Platformsh\\ConfigReader\\Config;\n\n$config = new Config();\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e3. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-php\"\u003e// Get the credentials to connect to the PostgreSQL service.\n$credentials = $config-\u0026gt;credentials('database');\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eSteps (Manual)\u003c/h2\u003e\n\u003ch3\u003e1. Load and decode the environment variable\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-php\"\u003e$relationships = json_decode(base64_decode(getenv('PLATFORM_RELATIONSHIPS')), TRUE);\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-php\"\u003e$credentials = $relationships['database'];\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eUse:\u003c/h2\u003e\n\u003cp\u003e\u003ccode\u003epath\u003c/code\u003e is the database name that will be needed to connect. Pass the needed properties to your PostgreSQL library’s setup routine in your application. Most of the time the other values may be ignored.\u003c/p\u003e\n\u003cp\u003eIn either case, \u003ccode\u003ecredentials\u003c/code\u003e is now an object matching the relationship JSON object.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-json\"\u003e{\n  \"username\": \"main\",\n  \"scheme\": \"pgsql\",\n  \"service\": \"dbpostgres\",\n  \"ip\": \"169.254.231.161\",\n  \"hostname\": \"tkydopuhmksuhglz7ox4x4de6m.postgresql.service._.eu-3.platformsh.site\",\n  \"cluster\": \"rjify4yjcwxaa-master-7rqtwti\",\n  \"host\": \"database.internal\",\n  \"rel\": \"postgresql\",\n  \"path\": \"main\",\n  \"query\": {\n    \"is_master\": true\n  },\n  \"password\": \"main\",\n  \"type\": \"postgresql:11\",\n  \"port\": 5432\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eConclusions:\u003c/h3\u003e\n\u003cp\u003eUsing either the language-specific \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e Configuration library or direct access methods for environment variables, an application can get PostgreSQL credentials in PHP.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e supports configuration libraries for multiple languages. The \u003ca href=\"https://github.com/platformsh/config-reader-php\" rel=\"nofollow noopener\"\u003ePHP configuration library\u003c/a\u003e can be useful for connecting to PostgreSQL without creating the full DSN string using \u003ccode\u003eFormattedCredentials\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-php\"\u003e// Define formatted credentials\n$formatted = $config-\u0026gt;FormattedCredentials(\"database\", \"pdo_pgsql\")\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe APIs for each language are written to be as consistent as possible, but seek out each library’s documentation for specific differences.\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-access-postgresql-credentials-on-platform-sh/150",
        "relurl": "/t/how-to-access-postgresql-credentials-on-platform-sh/150"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "a45103b61ac17e5cfda8e6f66e015164e27b2d03",
        "title": "How to access Solr credentials on Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eAccess credentials for Solr from within a \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e application using Python.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003ean active \u003ca href=\"https://platform.sh/\"\u003ePlatform.sh\u003c/a\u003e project\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/services/solr.html\"\u003econfigured\u003c/a\u003e \u003ccode\u003e.platform/services.yaml\u003c/code\u003e for the given service\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://docs.platform.sh/development/ssh.html#using-ssh-keys\"\u003eSSH key configured\u003c/a\u003e on account if developing locally\u003c/li\u003e\n\u003cli\u003eSolr installed if developing locally\u003c/li\u003e\n\u003cli\u003eproperly \u003ca href=\"https://docs.platform.sh/configuration/app/relationships.html\"\u003econfigured\u003c/a\u003e Solr relationship like so, in \u003ccode\u003e.platform.app.yaml\u003c/code\u003e:\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003erelationships:\n    solrsearch: \"searchsolr:solr\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf developing locally, remember to first open a tunnel to the project environment using the \u003ca href=\"https://docs.platform.sh/gettingstarted/cli.html#cli-command-line-interface\"\u003ePlatform CLI\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ platform tunnel:open \u0026amp;\u0026amp; export PLATFORM_RELATIONSHIPS=\"$(platform tunnel:info --encode)\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis will open an SSH tunnel to your current \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment and expose a local environment variable that mimics the relationships array on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. Check the \u003ca href=\"https://docs.platform.sh/gettingstarted/local/tethered.html\"\u003ePlatform.sh documentation\u003c/a\u003e and \u003ca href=\"https://community.platform.sh/t/how-to-develop-locally-on-platform-sh-with-a-tethered-connection/69\"\u003eHow to develop locally on Platform.sh with a tethered connection\u003c/a\u003e for more information.\u003c/p\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e service credentials are made available to applications as the \u003ccode\u003ePLATFORM_RELATIONSHIPS\u003c/code\u003e environment variable, which is a base64-encoded JSON string that has to be decoded before it can be used.\u003c/p\u003e\n\u003cp\u003eThere are two primary options for accessing service credentials on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e that can be used within an application:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eUsing the \u003ca href=\"https://github.com/platformsh/config-reader-python\" rel=\"nofollow noopener\"\u003ePlatform.sh Config Reader library\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eAccessing environment variables manually\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003eSteps (Config Reader)\u003c/h2\u003e\n\u003ch3\u003e1. Install the library\u003c/h3\u003e\n\u003cp\u003eInstall the configuration library. See the \u003ca href=\"https://github.com/platformsh/config-reader-python\" rel=\"nofollow noopener\"\u003edocumentation\u003c/a\u003e for minimum requirements.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ pip install platformshconfig\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Create a Config object\u003c/h3\u003e\n\u003cp\u003eCreating a \u003ccode\u003eConfig\u003c/code\u003e object provides access to the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003efrom platformshconfig import Config\n\nconfig = Config()\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e3. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003e# Get the credentials to connect to the Solr service.\ncredentials = config.credentials('solrsearch')\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eSteps (Manual)\u003c/h2\u003e\n\u003ch3\u003e1. Load the environment variable\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003eimport os, json, base64\n\nrelationships = json.loads(base64.b64decode(os.environ[\"PLATFORM_RELATIONSHIPS\"]))\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Read the credentials\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003ecredentials = relationships['solrsearch']\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eUse\u003c/h2\u003e\n\u003cp\u003eIn most cases, you will need only the \u003ccode\u003ehost\u003c/code\u003e and \u003ccode\u003eport\u003c/code\u003e properties to connect to Solr. Pass those to your Solr library’s setup routine in your application. Most of the time the other values may be ignored.\u003c/p\u003e\n\u003cp\u003eIn either case, \u003ccode\u003ecredentials\u003c/code\u003e is a dictionary matching the relationship JSON object.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-json\"\u003e{\n  \"service\": \"searchsolr\",\n  \"ip\": \"169.254.103.29\",\n  \"hostname\": \"swhnppdg3ugcd5sktkga73wjoi.solr.service._.eu-3.platformsh.site\",\n  \"cluster\": \"rjify4yjcwxaa-master-7rqtwti\",\n  \"host\": \"solrsearh.internal\",\n  \"rel\": \"solr\",\n  \"path\": \"solr\\/collection1\",\n  \"scheme\": \"solr\",\n  \"type\": \"solr:7.6\",\n  \"port\": 8080\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eConclusions\u003c/h2\u003e\n\u003cp\u003eUsing either the language-specific \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e Configuration library or direct access methods for environment variables, an application can get Solr credentials in Python.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e supports configuration libraries for multiple languages. The \u003ca href=\"https://github.com/platformsh/config-reader-python\" rel=\"nofollow noopener\"\u003ePython configuration library\u003c/a\u003e can be useful for connecting to Solr without creating the full DSN string using \u003ccode\u003eFormattedCredentials\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003e# Define formatted credentials\nformatted_url = config.formatted_credentials('solrsearch', 'pysolr')\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe APIs for each language are written to be as consistent as possible, but seek out each library’s documentation for specific differences.\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-access-solr-credentials-on-platform-sh/153",
        "relurl": "/t/how-to-access-solr-credentials-on-platform-sh/153"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "eaf0b7ad65f79cd63b7b9491f8b0f0ad53ff964a",
        "title": "How to Configure Load Balancer in a multiple applications",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eThis guide will explain how to configure a simple load balancing setup in a Single Application at \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe critical point is that this Load balancer configuration happens transparently, that is, the application does not know about the LB.\u003c/p\u003e\n\u003cp\u003eFor that to work, it is very important that your application follows good practices. For example, ensure that your application is stateless. \u003ca href=\"https://thenewstack.io/best-practices-for-developing-cloud-native-applications-and-microservice-architectures/\" rel=\"nofollow noopener\"\u003eBeing stateless\u003c/a\u003e is a good practice for having your application in the cloud.\u003c/p\u003e\n\u003cp\u003eOne of the advantages of stateless services is that you can bring up multiple instances of your application. Since there’s no per-instance state, any instance can handle any request. This is a natural fit for load balancers, which can be leveraged to help scale the service. They’re also readily available on cloud platforms.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eYou either have java Applications, and you want to run at \u003ca href=\"http://platform.sh\"\u003ePlatform.sh\u003c/a\u003e or you already have a Java application running at \u003ca href=\"http://platform.sh\"\u003ePlatform.sh\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eA text editor of your choice.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://community.platform.sh/t/how-to-configure-multi-applications-with-applications-yaml/552\"\u003eCreate multiple applications using \u003ccode\u003e.platform/applications.yaml\u003c/code\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eGiven that you already have a multi-application running in with \u003ccode\u003e.platform/applications.yaml\u003c/code\u003e The next step is “copy/paste” the information that you want the replicated machine. In this sample, we’ll only overwrite the name.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003e- \u0026amp;appdef\n    name: app\n    type: 'java:8'\n    disk: 1024\n    source:\n        root: app\n    hooks:\n        build: mvn clean install\n    mounts:\n        'server/':\n            source: local\n            source_path: server_source\n    web:\n        commands:\n            start: |\n                cp target/dependency/webapp-runner.jar server/webapp-runner.jar\n                cp target/tomcat.war server/tomcat.war\n                cd server \u0026amp;\u0026amp; java -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError webapp-runner.jar --port $PORT tomcat.war\n\n-\n   \u0026lt;\u0026lt;: *appdef\n   name: applb\n\n-\n    \u0026amp;app2def\n        \u0026lt;\u0026lt;: *appdef\n        name: app2\n        source:\n            root: app2\n        web:\n          commands:\n            start: |\n              cp target/dependency/webapp-runner.jar server/webapp-runner.jar\n              cp target/tomcat.war server/tomcat.war\n              cd server \u0026amp;\u0026amp; java -jar -Xmx$(jq .info.limits.memory /run/config.json)m webapp-runner.jar --port $PORT  --path app2 tomcat.war\n\n-\n    \u0026lt;\u0026lt;: *app2def\n    name: app2lb\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn the \u003ccode\u003e.platform/services.yaml\u003c/code\u003e file we’ll create one varnish as load balancer to each application.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003elb1:\n    type: varnish:6.0\n    relationships:\n        server1: 'app:http'\n        server2: 'applb:http'\n    configuration:\n        vcl: !include\n            type: string\n            path: config.vcl\n\nlb2:\n    type: varnish:6.0\n    relationships:\n        server1: 'app2:http'\n        server2: 'app2lb:http'\n    configuration:\n        vcl: !include\n            type: string\n            path: config.vcl\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eYes, you can have one load balance strategy to each application, but be aware of creating one CVL template file and strategy and updating it the \u003ccode\u003epath\u003c/code\u003e parameter in the \u003ccode\u003e.platform/services.yaml\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eThe route:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003e\"https://{default}/\":\n  type: upstream\n  upstream: \"lb1:http\"\n\n\"https://{default}/app2\":\n  type: upstream\n  upstream: \"lb2:http\"\n\n\"https://www.{default}/\":\n  type: redirect\n  to: \"https://{default}/\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eYou can check the different types of load-balancing that\u003ca href=\"https://community.platform.sh/t/how-to-configure-load-balancer-in-a-single-application/553\"\u003ewe support on this post\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eReferences:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/multi-app-load-balancing\" rel=\"nofollow noopener\"\u003eMulti App load balancing code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/single-load-balancing\" rel=\"nofollow noopener\"\u003eRound Robin sample code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/single-load-balancing-random\" rel=\"nofollow noopener\"\u003eRandom Sample code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/single-load-balancing-fallback\" rel=\"nofollow noopener\"\u003eFallback sample code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/configuration/app/multi-app.html\"\u003eDocumentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://platform.sh/blog/2020/one-source-many-apps/\"\u003eOne source, many apps\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://community.platform.sh/t/multiple-applications-tomcat/468\"\u003eMultiple Applications (Tomcat)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.varnish-software.com/glossary/what-is-load-balancing/\" rel=\"nofollow noopener\"\u003eWhat is load balancing?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://varnish-cache.org/docs/5.1/reference/vmod_directors.generated.html\" rel=\"nofollow noopener\"\u003eVarnish Director\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-configure-load-balancer-in-a-multiple-applications/554",
        "relurl": "/t/how-to-configure-load-balancer-in-a-multiple-applications/554"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "ef183595513b2be194048ce8bf3e715d36d83ad3",
        "title": "How to Configure Load Balancer in a Single Application",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eThis guide will explain how to configure a simple load balancing setup in a Single Application at \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThe critical point is that this Load balancer configuration happens transparently, that is, the application does not know about the LB.\u003c/p\u003e\n\u003cp\u003eFor that to work, it is very important that your application follows good practices. For example, ensure that your application is stateless. \u003ca href=\"https://thenewstack.io/best-practices-for-developing-cloud-native-applications-and-microservice-architectures/\" rel=\"nofollow noopener\"\u003eBeing stateless\u003c/a\u003e is a good practice for having your application in the cloud.\u003c/p\u003e\n\u003cp\u003eOne of the advantages of stateless services is that you can bring up multiple instances of your application. Since there’s no per-instance state, any instance can handle any request. This is a natural fit for load balancers, which can be leveraged to help scale the service. They’re also readily available on cloud platforms.\u003c/p\u003e\n\u003ch3\u003eWhat is load balancing?\u003c/h3\u003e\n\u003cp\u003eAt a basic level, load balancing works to distribute web traffic requests among different servers to ensure high availability and optimal traffic management while avoiding overload of any one server and defending against denial of service attacks.\u003c/p\u003e\n\u003cp\u003eLoad balancers increase capacity and reliability.\u003c/p\u003e\n\u003ch3\u003eHow does the Load Balancer work at \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e?\u003c/h3\u003e\n\u003cp\u003eTo make a Load balancer possible, \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e provides \u003ca href=\"https://docs.platform.sh/configuration/services/varnish.html\"\u003eVarnish\u003c/a\u003e, an HTTP accelerator designed for content-heavy dynamic web sites as well as APIs.\u003c/p\u003e\n\u003cp\u003eIn Varnish you will find three different methods (“directors”) for load balancing:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eround robin\u003c/li\u003e\n\u003cli\u003efallback\u003c/li\u003e\n\u003cli\u003erandom\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eYou either have an application, and you want to run at \u003ca href=\"http://platform.sh\"\u003ePlatform.sh\u003c/a\u003e or you already have an application running at \u003ca href=\"http://platform.sh\"\u003ePlatform.sh\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eA text editor of your choice.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe example below uses a Java application, but any stateless application in any language should work the same.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003ch3\u003e1. Use network storage\u003c/h3\u003e\n\u003cp\u003eBecause this configuration involves multiple application instances, they will each have their own local storage. To share files between applications you must use a \u003ca href=\"https://docs.platform.sh/configuration/services/network-storage.html\"\u003e\u003ccode\u003enetwork-storage\u003c/code\u003e\u003c/a\u003e service. See the documentation for specific instructions.\u003c/p\u003e\n\u003ch3\u003e2. Define the application\u003c/h3\u003e\n\u003cp\u003eDefine your application in the \u003ca href=\"https://docs.platform.sh/configuration/app/multi-app.html\"\u003e\u003ccode\u003e.platform/applications.yaml\u003c/code\u003e\u003c/a\u003e file, rather than in \u003ccode\u003e.platform.app.yaml\u003c/code\u003e as usual. The syntax is the same, but represented as a YAML array. The application should also be defined as a \u003ca href=\"https://docs.platform.sh/configuration/yaml.html#anchors\"\u003eYAML anchors\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003e- \u0026amp;appdef\n    name: app\n    type: 'java:8'\n    disk: 1024\n    source:\n        root: /\n    hooks:\n        build: mvn clean install\n    mounts:\n        'server/':\n            source: local\n            source_path: server_source\n    web:\n        commands:\n            start: |\n                cp target/dependency/webapp-runner.jar server/webapp-runner.jar\n                cp target/tomcat.war server/tomcat.war\n                cd server \u0026amp;\u0026amp; java -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError webapp-runner.jar --port $PORT tomcat.war\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNext, add a second definition in the same file by aliasing the first definition.  Add the following lines to \u003ccode\u003eapplications.yaml\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e-\n   \u0026lt;\u0026lt;: *appdef\n   name: app2\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThat will clone the \u003ccode\u003eappdef\u003c/code\u003e definition from the first application, then override the \u003ccode\u003ename\u003c/code\u003e property as that must be unique.  You may override other values if desired but for load balancing the configuration should ideally be identical.\u003c/p\u003e\n\u003ch3\u003e3. Create a Varnish instance\u003c/h3\u003e\n\u003cp\u003eAdd the following block to your \u003ccode\u003e.platform/services.yaml\u003c/code\u003e file:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003evarnish:\n    type: varnish:6.0\n    relationships:\n        server1: 'app:http'\n        server2: 'app2:http'\n    configuration:\n        vcl: !include\n            type: string\n            path: config.vcl\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThat will define a new Varnish service, named \u003ccode\u003evarnish1\u003c/code\u003e, that can connect to both \u003ccode\u003eapp\u003c/code\u003e and \u003ccode\u003eapp2\u003c/code\u003e (which are created by \u003ccode\u003eapplications.yaml\u003c/code\u003e).  It will use the file \u003ccode\u003econfig.vcl\u003c/code\u003e for its configuration.  (See below.)\u003c/p\u003e\n\u003ch3\u003e4. Map incoming requests to Varnish\u003c/h3\u003e\n\u003cp\u003eConfigure your \u003ccode\u003e.platform/routes.yaml\u003c/code\u003e file to route incoming requests to the Varnish service.  The exact syntax will depend on your application but in most cases that means just updating the \u003ccode\u003eupstream\u003c/code\u003e as below.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003e\"https://{default}/\":\n  type: upstream\n  upstream: \"varnish:http\"\n\n\"https://www.{default}/\":\n  type: redirect\n  to: \"https://{default}/\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e5. Configure Varnish\u003c/h3\u003e\n\u003cp\u003eVarnish is \u003ca href=\"https://docs.platform.sh/configuration/services/varnish.html\"\u003econfigured\u003c/a\u003e via a \u003ccode\u003e.vcl\u003c/code\u003e file, referenced from the \u003ccode\u003eservices.yaml\u003c/code\u003e file.  It has three options for load balancing:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRound Robin: Requests are distributed evenly between all backends, in order.\u003c/li\u003e\n\u003cli\u003eRandom: Requests are distributed between backends at random, potentially with uneven weighting.\u003c/li\u003e\n\u003cli\u003eFallback: Requests only go to a secondary server if the first does not respond.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eFor load balancing purposes Round Robin is almost always the optimal approach.  A weighted random configuration may be used for A/B testing, but as the session is not “sticky” it is not effective for changed user functionality, only non-user-affecting changes.\u003c/p\u003e\n\u003cp\u003eTo configure a round-robin varnish setup, use the following \u003ccode\u003econfig.vcl\u003c/code\u003e file:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003esub vcl_init {\n    new lb = directors.round_robin();\n    lb.add_backend(server1.backend());\n    lb.add_backend(server2.backend());\n}\n\nsub vcl_recv {\n    set req.backend_hint = lb.backend();\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eTo use a weighted-random configuration, use the following \u003ccode\u003econfig.vcl\u003c/code\u003e file:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003esub vcl_init {\n    new lb = directors.random();\n    lb.add_backend(server1.backend(), 10.0);\n    lb.add_backend(server2.backend(), 5.0);\n}\n\nsub vcl_recv {\n    set req.backend_hint = lb.backend();\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIn this example, 2/3 of requests will go to \u003ccode\u003eserver1\u003c/code\u003e and the other third to \u003ccode\u003eserver2\u003c/code\u003e.  That is only useful if there is some configured difference between them, or if they are resourced differently.  (Resourcing load balanced servers differently is generally not useful.).\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/single-load-balancing\" rel=\"nofollow noopener\"\u003eRound Robin sample code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/single-load-balancing-random\" rel=\"nofollow noopener\"\u003eRandom Sample code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/single-load-balancing-fallback\" rel=\"nofollow noopener\"\u003eFallback sample code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/configuration/app/multi-app.html\"\u003eDocumentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://platform.sh/blog/2020/one-source-many-apps/\"\u003eOne source, many apps\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://community.platform.sh/t/multiple-applications-tomcat/468\"\u003eMultiple Applications (Tomcat)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.varnish-software.com/glossary/what-is-load-balancing/\" rel=\"nofollow noopener\"\u003eWhat is load balancing?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://varnish-cache.org/docs/5.1/reference/vmod_directors.generated.html\" rel=\"nofollow noopener\"\u003eVarnish Director\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-configure-load-balancer-in-a-single-application/553",
        "relurl": "/t/how-to-configure-load-balancer-in-a-single-application/553"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "2eb87e9ab2fc0e657b26e8ed97c05458e7004548",
        "title": "How to configure multi-applications with applications.yaml",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eThis “how to” guide will explain about create multiple applications with \u003ccode\u003eapplications.yaml\u003c/code\u003e file with Java.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eYou either have a Java application, and you want to run at \u003ca href=\"http://platform.sh\"\u003ePlatform.sh\u003c/a\u003e or you already have a Java application running at \u003ca href=\"http://platform.sh\"\u003ePlatform.sh\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eA text editor of your choice.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003cp\u003eCreate a \u003ccode\u003e.platform/applications.yml\u003c/code\u003e file at the root directory of your project, this file will have the each application’s configuration. In this file, we’re going to use YAML’s built-in “anchors” to share configuration typically found in a \u003ccode\u003e.platform.app.yaml\u003c/code\u003e file between multiple applications.\u003c/p\u003e\n\u003cp\u003eWhen we talk about \u003ccode\u003eYAML achor\u003c/code\u003e there are two important points:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eThe anchor ‘\u0026amp;’ which defines a chunk of configuration\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe alias ‘*’ used to refer to that chunk elsewhere\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn the code below, we define the anchor\u003ccode\u003eappdef\u003c/code\u003e that contains the settings of the first application, \u003ccode\u003eapp\u003c/code\u003e, and we use the alias for the second application, \u003ccode\u003eapp2\u003c/code\u003e. That becomes the basis of the first application, which we can then overwrite with information, such as the app’s unique name.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003e- \u0026amp;appdef\n    name: app\n    type: 'java:8'\n    disk: 1024\n    source:\n        root: app\n    hooks:\n        build: mvn clean install\n    mounts:\n        'server/':\n            source: local\n            source_path: server_source\n    web:\n        commands:\n            start: |\n                cp target/dependency/webapp-runner.jar server/webapp-runner.jar\n                cp target/tomcat.war server/tomcat.war\n                cd server \u0026amp;\u0026amp; java -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError webapp-runner.jar --port $PORT tomcat.war\n\n-\n    \u0026lt;\u0026lt;: *appdef\n    name: app2\n    source:\n        root: app2\n    web:\n      commands:\n        start: |\n          cp target/dependency/webapp-runner.jar server/webapp-runner.jar\n          cp target/tomcat.war server/tomcat.war\n          cd server \u0026amp;\u0026amp; java -jar -Xmx$(jq .info.limits.memory /run/config.json)m webapp-runner.jar --port $PORT  --path app2 tomcat.war\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eReferences:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/tomcat-multi-app-applications\" rel=\"nofollow noopener\"\u003eSample code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/configuration/app/multi-app.html\"\u003eDocumentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://platform.sh/blog/2020/one-source-many-apps/\"\u003eOne source, many apps\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-configure-multi-applications-with-applications-yaml/552",
        "relurl": "/t/how-to-configure-multi-applications-with-applications-yaml/552"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "565c67842415ac7af245608af259d2a0df191268",
        "title": "How to Migrate my Java Application to Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eThis tutorial will cover how to migrate your Java application to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003ePreparation\u003c/h2\u003e\n\u003cp\u003eThis tutorial assumes you have\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA working Java 8 or higher application\u003c/li\u003e\n\u003cli\u003eA text editor of your choice.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003eThe Java Application is ready, and now the team wants to migrate to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e and enjoy the benefits of cloud computing naturally.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/\"\u003eUnderstand how Platform.sh works\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/gettingstarted/own-code/create-project.html\"\u003eCreate a new Platform.sh projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eCreate \u003ca href=\"https://docs.platform.sh/configuration/routes.html\"\u003ethe route file to define the route\u003c/a\u003e, \u003ca href=\"https://docs.platform.sh/configuration/services.html\"\u003ethe service file to identify any services such a database that your application needs\u003c/a\u003e and \u003ca href=\"https://docs.platform.sh/configuration/app-containers.html\"\u003ethe application file to determine how your application will be containerized and build\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/languages/java.html#supported-versions\"\u003eDefine the Java version that you want to use.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYou can integrate to existing \u003ca href=\"https://docs.platform.sh/administration/integrations/github.html#github\"\u003eGithub\u003c/a\u003e, \u003ca href=\"https://docs.platform.sh/administration/integrations/gitlab.html#gitlab\"\u003eGitlab\u003c/a\u003e, or just use the remote repository that \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e will provide to you.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eFurthermore, we also have those guides to help you to migrate with your Spring or Jakarta EE application:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://community.platform.sh/t/how-to-overwrite-spring-data-variable-to-access-platform-sh-services/518\"\u003eMigrate Spring-Data JPA\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://community.platform.sh/t/how-to-overwrite-spring-data-mongodb-variable-to-access-platform-sh-services/528\"\u003eMigrate Spring-Data MongoDB\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://community.platform.sh/t/how-to-overwrite-variables-to-payara-jpa-access-platform-sh-sql-services/519\"\u003eMigrate Payara JPA\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://community.platform.sh/t/how-to-overwrite-variables-to-payara-jpa-access-platform-sh-sql-services/519\"\u003eMigrate Jakarta EE/MicroProfile\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://community.platform.sh/t/how-to-migrate-your-java-application-from-heroku-to-platform-sh/441\"\u003eHow to migrate your Java Application from Heroku\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://community.platform.sh/t/tips-about-java-commands-to-run-your-application-at-platform-sh/531\"\u003eTips about Java Commands to run your Application at Platform.sh\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://platform.sh/blog/2019/java-hello-world-at-platform.sh/\"\u003eHello World at Platform.sh\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh/config-reader-java\" rel=\"nofollow noopener\"\u003eJava Configuration-Reader\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/languages/java.html\"\u003eJava at Platform.sh\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/languages/java/frameworks.html\"\u003eJava Frameworks at Platform.sh\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh/java-quick-start\" rel=\"nofollow noopener\"\u003eSamples Codes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-migrate-my-java-application-to-platform-sh/529",
        "relurl": "/t/how-to-migrate-my-java-application-to-platform-sh/529"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "b10571b969602f927f2b07117ccd443adaf6d72c",
        "title": "How to use the Platform.sh CLI from the web container",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eHave the \u003ca href=\"http://Platform.SH\" rel=\"nofollow noopener\"\u003ePlatform.SH\u003c/a\u003e CLI installed and authenticated in the web container.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eAccess to a project hosted on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eYour project account has administrator rights\u003c/li\u003e\n\u003cli\u003eKnowledge on using the project web interface or \u003ca href=\"https://docs.platform.sh/gettingstarted/cli.html#cli-command-line-interface\"\u003ePlatform.sh CLI\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003eUsing the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e CLI directly from the web (application) container can be required to automate certain tasks, like renewing the SSL certificate or triggering a snapshot based on a cron schedule.\u003c/p\u003e\n\u003cp\u003eDue to the non-interactive deployment flow, using a regular username and password authentication is not possible. We will use token-based authentication to have the CLI installed and configured on each deployment.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003ch3\u003e0. Create a dedicated account to use for automated tasks\u003c/h3\u003e\n\u003cp\u003eThis step is optional, but _ strongly recommended_: for automated tasks, a dedicated user should be created and added to the project. Adding an API token to a project is a security risk, as it means the token will be visible to the other project members who have SSH access, so they will then also have access to the token’s account.\u003c/p\u003e\n\u003ch3\u003e1. Create an API token\u003c/h3\u003e\n\u003cp\u003eLog in and navigate to \u003ccode\u003eAccount settings \u0026gt; API tokens\u003c/code\u003e, available \u003ca href=\"https://accounts.platform.sh/user/api-tokens\"\u003ehere\u003c/a\u003e. Click on \u003ccode\u003eCreate API token\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://community.platform.sh/uploads/default/original/1X/718bd2e55a0aa3257ee8850e654a66b6af264b75.png\" data-download-href=\"https://community.platform.sh/uploads/default/718bd2e55a0aa3257ee8850e654a66b6af264b75\" title=\"Screenshot from 2020-05-01 09-21-47.png\"\u003e\u003cimg src=\"https://community.platform.sh/uploads/default/optimized/1X/718bd2e55a0aa3257ee8850e654a66b6af264b75_2_690x266.png\" alt=\"Screenshot%20from%202020-05-01%2009-21-47\" data-base62-sha1=\"gctwzeTpcNlIxUD7OEavqQiUYjb\" width=\"690\" height=\"266\" srcset=\"https://community.platform.sh/uploads/default/optimized/1X/718bd2e55a0aa3257ee8850e654a66b6af264b75_2_690x266.png, https://community.platform.sh/uploads/default/optimized/1X/718bd2e55a0aa3257ee8850e654a66b6af264b75_2_1035x399.png 1.5x, https://community.platform.sh/uploads/default/original/1X/718bd2e55a0aa3257ee8850e654a66b6af264b75.png 2x\" data-small-upload=\"https://community.platform.sh/uploads/default/optimized/1X/718bd2e55a0aa3257ee8850e654a66b6af264b75_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\n\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eScreenshot from 2020-05-01 09-21-47.png\u003c/span\u003e\u003cspan class=\"informations\"\u003e1343×519 26 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\n\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eYou will be asked for the token name - enter a name to easily identify your token in the future, in case of multiple tokens (\u003ccode\u003eCLI automated\u003c/code\u003e is one example). Click on \u003ccode\u003eCreate API token\u003c/code\u003e to save the token.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://community.platform.sh/uploads/default/original/1X/8da6eff40eec38ba02da0bc02f7cd149e49bfc03.png\" data-download-href=\"https://community.platform.sh/uploads/default/8da6eff40eec38ba02da0bc02f7cd149e49bfc03\" title=\"Screenshot from 2020-05-01 09-25-36.png\"\u003e\u003cimg src=\"https://community.platform.sh/uploads/default/optimized/1X/8da6eff40eec38ba02da0bc02f7cd149e49bfc03_2_690x227.png\" alt=\"Screenshot%20from%202020-05-01%2009-25-36\" data-base62-sha1=\"kd6Z3Ubt6nPcRJ1zj5qPYFsAY8z\" width=\"690\" height=\"227\" srcset=\"https://community.platform.sh/uploads/default/optimized/1X/8da6eff40eec38ba02da0bc02f7cd149e49bfc03_2_690x227.png, https://community.platform.sh/uploads/default/optimized/1X/8da6eff40eec38ba02da0bc02f7cd149e49bfc03_2_1035x340.png 1.5x, https://community.platform.sh/uploads/default/original/1X/8da6eff40eec38ba02da0bc02f7cd149e49bfc03.png 2x\" data-small-upload=\"https://community.platform.sh/uploads/default/optimized/1X/8da6eff40eec38ba02da0bc02f7cd149e49bfc03_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\n\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eScreenshot from 2020-05-01 09-25-36.png\u003c/span\u003e\u003cspan class=\"informations\"\u003e1365×451 12.7 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\n\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003eOnce done, the newly created token will be displayed at the top of the page, and can be copied to the clipboard using the \u003ccode\u003eCopy\u003c/code\u003e button. After this, you will not be able to view the API token again.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://community.platform.sh/uploads/default/original/1X/9c567702a32fc496e8c7e4d3b8ea0cc5e7546b09.png\" data-download-href=\"https://community.platform.sh/uploads/default/9c567702a32fc496e8c7e4d3b8ea0cc5e7546b09\" title=\"Screenshot from 2020-05-01 09-26-16.png\"\u003e\u003cimg src=\"https://community.platform.sh/uploads/default/optimized/1X/9c567702a32fc496e8c7e4d3b8ea0cc5e7546b09_2_690x327.png\" alt=\"Screenshot%20from%202020-05-01%2009-26-16\" data-base62-sha1=\"mj1JBs4HH0KZRApfrFBp0PmRJz3\" width=\"690\" height=\"327\" srcset=\"https://community.platform.sh/uploads/default/optimized/1X/9c567702a32fc496e8c7e4d3b8ea0cc5e7546b09_2_690x327.png, https://community.platform.sh/uploads/default/optimized/1X/9c567702a32fc496e8c7e4d3b8ea0cc5e7546b09_2_1035x490.png 1.5x, https://community.platform.sh/uploads/default/original/1X/9c567702a32fc496e8c7e4d3b8ea0cc5e7546b09.png 2x\" data-small-upload=\"https://community.platform.sh/uploads/default/optimized/1X/9c567702a32fc496e8c7e4d3b8ea0cc5e7546b09_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\n\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eScreenshot from 2020-05-01 09-26-16.png\u003c/span\u003e\u003cspan class=\"informations\"\u003e1357×644 37.1 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\n\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch3\u003e2. Add the token as an environment variable in the project\u003c/h3\u003e\n\u003cp\u003eOnce the API token is added as an environment variable in the project, it will be automatically detected and used by the CLI tool. After the installation is done, you should see the \u003ccode\u003ePLATFORMSH_CLI_TOKEN\u003c/code\u003e variable when running \u003ccode\u003eenv\u003c/code\u003e.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eOption 1: Using the web interface\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eOpen the project web interface and navigate to the environment in which you want to use the CLI, then click on \u003ccode\u003eConfigure environment\u003c/code\u003e and go to the \u003ccode\u003eVariables\u003c/code\u003e tab. Add a variable named \u003ccode\u003eenv:PLATFORMSH_CLI_TOKEN\u003c/code\u003e and set its value to the previously created token.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://community.platform.sh/uploads/default/original/1X/49b4472ba7c3fd557210a40fe39e4ca89a75e902.png\" data-download-href=\"https://community.platform.sh/uploads/default/49b4472ba7c3fd557210a40fe39e4ca89a75e902\" title=\"Screen Shot 2019-03-13 at 10.12.20 AM.png\"\u003e\u003cimg src=\"https://community.platform.sh/uploads/default/optimized/1X/49b4472ba7c3fd557210a40fe39e4ca89a75e902_2_649x500.png\" alt=\"20%20AM\" data-base62-sha1=\"aw169jz9ERK2OgI3voypQCg10KC\" width=\"649\" height=\"500\" srcset=\"https://community.platform.sh/uploads/default/optimized/1X/49b4472ba7c3fd557210a40fe39e4ca89a75e902_2_649x500.png, https://community.platform.sh/uploads/default/optimized/1X/49b4472ba7c3fd557210a40fe39e4ca89a75e902_2_973x750.png 1.5x, https://community.platform.sh/uploads/default/original/1X/49b4472ba7c3fd557210a40fe39e4ca89a75e902.png 2x\" data-small-upload=\"https://community.platform.sh/uploads/default/optimized/1X/49b4472ba7c3fd557210a40fe39e4ca89a75e902_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\n\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eScreen Shot 2019-03-13 at 10.12.20 AM.png\u003c/span\u003e\u003cspan class=\"informations\"\u003e982×756 38.4 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\n\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eOption 2: Using the CLI\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eIf you have the CLI tool installed and configured, you can add the variable from the command line:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003eplatform variable:create -e \u0026lt;environment name\u0026gt; --level environment --name env:PLATFORMSH_CLI_TOKEN --sensitive true --value \u0026lt;token string\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eReplace the \u003ccode\u003e\u0026lt;environment name\u0026gt;\u003c/code\u003e and \u003ccode\u003e\u0026lt;token string\u0026gt;\u003c/code\u003e with the correct values for your use case.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e3. Install the CLI tool in the application container\u003c/h3\u003e\n\u003cp\u003eOnce the variable has been added to the environment, it is required to download and install the CLI tool in a build hook.\u003c/p\u003e\n\u003cp\u003eModify \u003ccode\u003e.platform.app.yaml\u003c/code\u003e in the project to include:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003ehooks:\n    build: |\n        curl -sS https://platform.sh/cli/installer | php\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis will download the CLI to a known directory,  \u003ccode\u003e.platformsh/bin\u003c/code\u003e , which will be added to the \u003ccode\u003ePATH\u003c/code\u003e at runtime (via the \u003ccode\u003e.environment\u003c/code\u003e file). Redeploy your environment and log into the application container with SSH, then run \u003ccode\u003eplatform\u003c/code\u003e. You should see the welcome prompt and a list of your current projects.\u003c/p\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eHaving the CLI tool set up in an environment opens up further automation possibilities - renewing the SSL certificate, triggering snapshots, etc.\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-use-the-platform-sh-cli-from-the-web-container/126",
        "relurl": "/t/how-to-use-the-platform-sh-cli-from-the-web-container/126"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "e31b14ceb71374402b78c16df608ead85d567d75",
        "title": "How to make a Vue.js single page application (SPA) on Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eThis guide shows how to deploy a \u003ca href=\"https://vuejs.org/\" rel=\"nofollow noopener\"\u003eVue.js\u003c/a\u003e application on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e, using \u003ca href=\"https://cli.vuejs.org/\" rel=\"nofollow noopener\"\u003eVue CLI 3\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cp\u003eTo go through this guide, you will need:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAn empty \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e project (you can \u003ca href=\"https://accounts.platform.sh/platform/trial/general/setup\"\u003eclick here\u003c/a\u003e to start your free trial)\u003c/li\u003e\n\u003cli\u003eYour SSH key loaded in your \u003ca href=\"https://linux.die.net/man/1/ssh-agent\" rel=\"nofollow noopener\"\u003eSSH agent\u003c/a\u003e and configured in the \u003ca href=\"https://accounts.platform.sh/user\"\u003ePlatform.sh dashboard\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eThe \u003ca href=\"https://github.com/platformsh/platformsh-cli\" rel=\"nofollow noopener\"\u003ePlatform.sh CLI\u003c/a\u003e installed.\u003c/li\u003e\n\u003cli\u003eThe \u003ca href=\"https://cli.vuejs.org/guide/installation.html\" rel=\"nofollow noopener\"\u003eVue CLI\u003c/a\u003e installed.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003ch3\u003e1. Create a Vue.js application\u003c/h3\u003e\n\u003cp\u003eCreate a new Vue.js project with Vue CLI (ignore this step if you want to deploy an existing Vue.js application on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e):\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003evue create vuejs-platformsh\ncd vuejs-platformsh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSet the \u003ccode\u003eplatform\u003c/code\u003e Git remote:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003eplatform project:set-remote \u0026lt;project id\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAdd the \u003ca href=\"https://npmjs.com/package/vue-cli-plugin-platformsh\" rel=\"nofollow noopener\"\u003ePlatform.sh Vue plugin\u003c/a\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003evue add platformsh\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis plugin will add the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e configuration files to your project and extract the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment variables.\u003c/p\u003e\n\u003ch3\u003e2.  Deploy your application to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e\n\u003c/h3\u003e\n\u003cp\u003eCommit and push your code to deploy your application:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003egit add --all\ngit commit -m \"Vue.js on Platform.sh.\"\ngit push platform master\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e3. Test your application on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e\n\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003eplatform url\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis opens a browser tab with your Vue.js application running.\u003c/p\u003e\n\u003ch3\u003e4. Fetch \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment variables\u003c/h3\u003e\n\u003cp\u003eThe plugin will automatically extract the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment variables.\u003c/p\u003e\n\u003cp\u003eTo fetch those, you simply need to import the following package:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003eimport platformshVar from 'platformsh_variables'\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eUsing the Vue CLI, it’s very easy to setup and deploy a new or an existing Vue.js application on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-make-a-vue-js-single-page-application-spa-on-platform-sh/125",
        "relurl": "/t/how-to-make-a-vue-js-single-page-application-spa-on-platform-sh/125"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "5e5b7c74d6538b26edc10e307d3c05ed914960a7",
        "title": "How to monitor long running scripts with pv",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eSometimes you want to run a long running process without feedback. \u003ca href=\"https://linux.die.net/man/1/pv\" rel=\"nofollow noopener\"\u003ePV\u003c/a\u003e is a tool that allows you to do just that.\u003c/p\u003e\n\u003ch2\u003eExample\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eRunning a mysqldump\u003cbr\u003e\n\u003ccode\u003emysqldump \u0026lt;yourparams\u0026gt; | pv --progress --size 100m \u0026gt; /tmp/dump.sql\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eImporting a mysql dump\u003cbr\u003e\n\u003ccode\u003epv dump.sql | mysql \u0026lt;yourparams\u0026gt;\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCopying a large file\u003cbr\u003e\n\u003ccode\u003epv /originallocation/largefile.bin \u0026gt; /otherlocation/largefile.bin\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate a zip file\u003cbr\u003e\n\u003ccode\u003epv largefile.txt | zip \u0026gt; largefile.zip\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eCreate a tar archive\u003cbr\u003e\n\u003ccode\u003etar -czf - ./foldertotar | (pv -p --timer --rate --bytes \u0026gt; backup.tgz)\u003c/code\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblem\u003c/h2\u003e\n\u003cp\u003eSounds cool, but \u003ccode\u003epv\u003c/code\u003e isn’t available by default.\u003c/p\u003e\n\u003ch2\u003eSolution\u003c/h2\u003e\n\u003cp\u003eLuckily, there is an easy solution.\u003c/p\u003e\n\u003cp\u003eSimply add the \u003ccode\u003epv\u003c/code\u003e package in your \u003ccode\u003e.platform.app.yaml\u003c/code\u003e file. This will automatically install \u003ccode\u003epv\u003c/code\u003e. So you can use it.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003edependencies:\n  nodejs: # Specify one NPM package per line.\n    pv: '~1.0.1'\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cem\u003eNote: you can do this in any container type. PHP, nodejs, golang, …\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003eThis works because there is a \u003ca href=\"https://github.com/roccomuso/pv\" rel=\"nofollow noopener\"\u003enodejs package\u003c/a\u003e that does the heavy lifting for us.\u003c/p\u003e\n\u003cp\u003eFor more information on dependencies, check \u003ca href=\"https://docs.platform.sh/configuration/app/build.html#build-dependencies\"\u003eour documentation\u003c/a\u003e\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-monitor-long-running-scripts-with-pv/537",
        "relurl": "/t/how-to-monitor-long-running-scripts-with-pv/537"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "ed74c8a025b1e01a544851e27045c6002576f27b",
        "title": "How to configure Java with New Relic At Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eThis tutorial will explain how to configure New Relic into a Java application at \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eYou either have a Java application, and you want to run at \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e or you already have a Java application running at \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eA text editor of your choice.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003eNew Relic is a technology company that develops cloud-based software to help website and application owners track the performance of their services. That might be useful because you can track everything from performance issues to tiny errors within your code. Every minute the agent posts metric time slice and event data to the New Relic user interface, where the owner of that data can sign in and use the data to see how their website is performing.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003cp\u003eTo set up new-relic in the Java project, we have two ways:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUsing the maven project\u003c/li\u003e\n\u003cli\u003eDownload the code through \u003ccode\u003eapplication.app.yaml\u003c/code\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eMaven\u003c/h2\u003e\n\u003cp\u003eThis section explains how to configure Maven to download and unzip the \u003ccode\u003enewrelic-java.zip\u003c/code\u003e file, which contains all New Relic Java agent components.\u003c/p\u003e\n\u003cp\u003eTo set up the application with New Relic, you have two options:\u003c/p\u003e\n\u003cp\u003eTo set up the application with New Relic, you have two options:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eConfiguring and download from Maven\u003c/li\u003e\n\u003cli\u003eDownloading on your own\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eConfigure your \u003ccode\u003epom.xml\u003c/code\u003e to download \u003ccode\u003enewrelic-java.zip\u003c/code\u003e. For example:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-xml\"\u003e\u0026lt;dependency\u0026gt;\n     \u0026lt;groupId\u0026gt;com.newrelic.agent.java\u0026lt;/groupId\u0026gt;\n     \u0026lt;artifactId\u0026gt;newrelic-java\u0026lt;/artifactId\u0026gt;\n      \u0026lt;version\u0026gt;JAVA_AGENT_VERSION\u0026lt;/version\u0026gt;\n     \u0026lt;scope\u0026gt;provided\u0026lt;/scope\u0026gt;\n     \u0026lt;type\u0026gt;zip\u0026lt;/type\u0026gt;\n\u0026lt;/dependency\u0026gt;\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eReplace \u003ccode\u003eJAVA_AGENT_VERSION\u003c/code\u003e with the \u003ca href=\"https://docs.newrelic.com/docs/agents/java-agent/getting-started/java-release-notes\" rel=\"nofollow noopener\"\u003elatest Java agent version\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eUnzip \u003ccode\u003enewrelic-java.zip\u003c/code\u003e by configuring \u003ccode\u003emaven-dependency-plugin\u003c/code\u003e in your \u003ccode\u003epom.xml\u003c/code\u003e. For example:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-xml\"\u003e   \u0026lt;plugin\u0026gt;\n        \u0026lt;groupId\u0026gt;org.apache.maven.plugins\u0026lt;/groupId\u0026gt;\n        \u0026lt;artifactId\u0026gt;maven-dependency-plugin\u0026lt;/artifactId\u0026gt;\n        \u0026lt;version\u0026gt;3.1.1\u0026lt;/version\u0026gt;\n        \u0026lt;executions\u0026gt;\n          \u0026lt;execution\u0026gt;\n            \u0026lt;id\u0026gt;unpack-newrelic\u0026lt;/id\u0026gt;\n            \u0026lt;phase\u0026gt;package\u0026lt;/phase\u0026gt;\n            \u0026lt;goals\u0026gt;\n              \u0026lt;goal\u0026gt;unpack-dependencies\u0026lt;/goal\u0026gt;\n            \u0026lt;/goals\u0026gt;\n            \u0026lt;configuration\u0026gt;\n              \u0026lt;includeGroupIds\u0026gt;com.newrelic.agent.java\u0026lt;/includeGroupIds\u0026gt;\n              \u0026lt;includeArtifactIds\u0026gt;newrelic-java\u0026lt;/includeArtifactIds\u0026gt;\n              \u0026lt;excludes\u0026gt;**/newrelic.yml\u0026lt;/excludes\u0026gt;\n              \u0026lt;overWriteReleases\u0026gt;false\u0026lt;/overWriteReleases\u0026gt;\n              \u0026lt;overWriteSnapshots\u0026gt;false\u0026lt;/overWriteSnapshots\u0026gt;\n              \u0026lt;overWriteIfNewer\u0026gt;true\u0026lt;/overWriteIfNewer\u0026gt;\n              \u0026lt;outputDirectory\u0026gt;${project.build.directory}\u0026lt;/outputDirectory\u0026gt;\n            \u0026lt;/configuration\u0026gt;\n          \u0026lt;/execution\u0026gt;\n        \u0026lt;/executions\u0026gt;\n      \u0026lt;/plugin\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe next step is to configure the \u003ca href=\"https://docs.platform.sh/configuration/app-containers.html\"\u003e\u003ccode\u003e.platform.app.yaml\u003c/code\u003e\u003c/a\u003e file to:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSet the agent in the JVM parameters\u003c/li\u003e\n\u003cli\u003eOverwrite the application file with the proper license key and application name. You can also do it using the \u003ca href=\"https://docs.platform.sh/development/variables.html\"\u003eAPI\u003c/a\u003e or \u003ca href=\"https://docs.platform.sh/administration/web/configure-project.html#variables\"\u003ethe web UI\u003c/a\u003e. Therefore this configuration will work outside the code very useful when the application is on a public repository.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003ename: app\ntype: 'java:8'\ndisk: 1024\nhooks:\n    build: |\n        mvn clean package\n        rm -rf newrelic/\n        mv target/newrelic/ newrelic/\n\nmounts:\n    'server/':\n        source: local\n        source_path: server_source\n\nvariables:\n    env:\n        NEW_RELIC_LICENSE_KEY: \u0026lt;LICENSE_KEY\u0026gt;\n        NEW_RELIC_APP_NAME: \u0026lt;NAME_APPLICATION\u0026gt;\n\nweb:\n    commands:\n        start: |\n            cp target/dependency/webapp-runner.jar server/webapp-runner.jar\n            cp target/tomcat.war server/tomcat.war\n             java -jar \\\n            -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError \\\n            -javaagent:/app/newrelic/newrelic.jar //the other parameters here\n            \n\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eManual installation\u003c/h2\u003e\n\u003cp\u003eTo use this installation it is only required that you modify \u003ccode\u003e.platform.app.yaml\u003c/code\u003e , which will download and set the New Relic Java agent for you.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003ename: app\ntype: 'java:8'\ndisk: 1024\n\n\nvariables:\n    env:\n        NEW_RELIC_URL: https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip\n        NEW_RELIC_LICENSE_KEY: \u0026lt;LICENSE_KEY\u0026gt;\n        NEW_RELIC_APP_NAME: \u0026lt;NAME_APPLICATION\u0026gt;\n\nhooks:\n    build: |\n      mvn clean package\n      rm -rf newrelic\n      curl -O $NEW_RELIC_URL\n      unzip newrelic-java.zip\n\n\nweb:\n    commands:\n        start: |\n            java -jar \\\n            -Xmx$(jq .info.limits.memory /run/config.json)m \\\n            -XX:+ExitOnOutOfMemoryError \\\n            -javaagent:/app/newrelic/newrelic.jar //the left of the commands here\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://newrelic.com/\" rel=\"nofollow noopener\"\u003eNew Relic\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.newrelic.com/docs/agents/java-agent/configuration/java-agent-configuration-config-file\" rel=\"nofollow noopener\"\u003eNew Relic Configuration File\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.newrelic.com/docs/agents/java-agent/additional-installation/install-java-agent-using-maven\" rel=\"nofollow noopener\"\u003eNew Relic Using Maven\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.newrelic.com/docs/agents/java-agent/installation/install-java-agent\" rel=\"nofollow noopener\"\u003eNew Relic install Java agent\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/new-relic-java\" rel=\"nofollow noopener\"\u003eSource Code sample\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-configure-java-with-new-relic-at-platform-sh/533",
        "relurl": "/t/how-to-configure-java-with-new-relic-at-platform-sh/533"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "76a4d76b36e0fd06b9aed49d73de38907faba264",
        "title": "Improving GraphQL performance by caching POST requests",
        "description": "",
        "text": "\u003cp\u003eAt \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e we recently came across a project that utilized GraphQL to pull in data for its front-end, but was experiencing performance issues with slow GraphQL queries. We found a way to conveniently cache those query results and greatly speed up the project as a result.\u003c/p\u003e\n\u003cp\u003eQueries to GraphQL are normally done as \u003ccode\u003ePOST\u003c/code\u003e requests, and caching the results of \u003ccode\u003ePOST\u003c/code\u003e requests is typically bad practice. In our use case, some queries are taking upwards of 5s to execute, which results in a rather poor user experience. Combining caching with a short TTL, (say, 60 seconds) the slightly-outdated content is preferable to an incredibly slow user experience.\u003c/p\u003e\n\u003cp\u003eWe start at \u003ca href=\"https://fastly.com\" rel=\"nofollow noopener\"\u003eFastly\u003c/a\u003e, and create a custom CDN endpoint to the GraphQL URI. This passes all requests (to that new endpoint) through the Fastly service, which uses Varnish to cache requests.\u003c/p\u003e\n\u003cp\u003eFastly allows the user to upload a custom VCL, using the \u003ca href=\"https://docs.fastly.com/vcl/custom-vcl/creating-custom-vcl/#inserting-custom-vcl-in-fastlys-vcl-boilerplate\" rel=\"nofollow noopener\"\u003eboilerplate VCL\u003c/a\u003e as a starting point. The only change we need to make is to ensure that \u003ccode\u003ePOST\u003c/code\u003e requests are treated in the same manner as \u003ccode\u003eGET\u003c/code\u003e requests. This results in two small changes:\u003c/p\u003e\n\u003cp\u003eThe block\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eif (req.method != \"HEAD\" \u0026amp;\u0026amp; req.method != \"GET\" \u0026amp;\u0026amp; req.method != \"FASTLYPURGE\") {\n    return(pass);\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e… should be changed to:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eif (req.method != \"HEAD\" \u0026amp;\u0026amp; req.method != \"GET\" \u0026amp;\u0026amp; req.method != \"POST\" \u0026amp;\u0026amp; req.method != \"FASTLYPURGE\") {\n    return(pass);\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAnd similarly, the block\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eif ((beresp.status == 500 || beresp.status == 503) \u0026amp;\u0026amp; req.restarts \u0026lt; 1 \u0026amp;\u0026amp; (req.method == \"GET\" || req.method == \"HEAD\")) {\n    restart;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e… changes to:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003eif ((beresp.status == 500 || beresp.status == 503) \u0026amp;\u0026amp; req.restarts \u0026lt; 1 \u0026amp;\u0026amp; (req.method == \"GET\" || req.method == \"HEAD\" || req.method == \"POST\")) {\n    restart;\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThese changes will allow \u003ccode\u003ePOST\u003c/code\u003e requests to be cached. However, you’ll note that\u003cbr\u003e\nnow all \u003ccode\u003ePOST\u003c/code\u003e requests to GraphQL will return the same data, regardless of the\u003cbr\u003e\nquery. This happens because the default \u003ccode\u003ecache_key\u003c/code\u003e, which is based on the\u003cbr\u003e\nrequest URL (\u003ccode\u003ereq.url\u003c/code\u003e) and some headers (\u003ccode\u003ereq.http.Host\u003c/code\u003e,\u003cbr\u003e\n\u003ccode\u003ereq.http.Authorization\u003c/code\u003e, \u003ccode\u003ereq.http.Fastly-SSL\u003c/code\u003e) remains consistent between the\u003cbr\u003e\ndifferent query requests, and Fastly (correctly) returns the existing, cached\u003cbr\u003e\ndata for that key.\u003c/p\u003e\n\u003cp\u003eWhat we need, then, is a \u003ccode\u003ecache_key\u003c/code\u003e that will change between different\u003cbr\u003e\nqueries.\u003c/p\u003e\n\u003cp\u003eThe simplest way of accomplishing this is by adding the request body\u003cbr\u003e\n(ie. the query) to the \u003ccode\u003ecache_key\u003c/code\u003e. This can be done by simply adding \u003ccode\u003ereq.body\u003c/code\u003e\u003cbr\u003e\nto the \u003ccode\u003ecache_key\u003c/code\u003e in Fastly’s settings.\u003c/p\u003e\n\u003cp\u003eHowever, the request body will be fairly long, and using such long strings in\u003cbr\u003e\nthe \u003ccode\u003ecache_key\u003c/code\u003e is not ideal. Further, \u003ca href=\"https://docs.fastly.com/vcl/variables/req-body/\" rel=\"nofollow noopener\"\u003eFastly documentation for req.body\u003c/a\u003e\u003cbr\u003e\nmentions that only the first 8kb of the body are available in the \u003ccode\u003ereq.body\u003c/code\u003e\u003cbr\u003e\nvariable. This means that two different queries with identical content in the\u003cbr\u003e\nfirst 8kb of the body may end up with the same \u003ccode\u003ecache_key\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eA better solution would be to generate a hash from the request body, include\u003cbr\u003e\nthat hash as a custom header in the \u003ccode\u003ePOST\u003c/code\u003e request, and then use the custom\u003cbr\u003e\nheader to create the \u003ccode\u003ecache_key\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eFor example, if you were to include the hash in a header called \u003ccode\u003ebody-hash\u003c/code\u003e,\u003cbr\u003e\nyou could then add \u003ccode\u003ereq.http.body-hash\u003c/code\u003e to the \u003ccode\u003ecache_key\u003c/code\u003e, and each unique\u003cbr\u003e\n\u003ccode\u003ePOST\u003c/code\u003e request would return the correct data for that request, while also\u003cbr\u003e\ncaching the GraphQL response for as long as your configured TTL.\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/improving-graphql-performance-by-caching-post-requests/530",
        "relurl": "/t/improving-graphql-performance-by-caching-post-requests/530"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "b7e514098b82f3c01c55e3005005cf8dcab4b94e",
        "title": "How to Overwrite Spring Data variable to access Platform.sh services",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eIn this tutorial, we’ll cover how you can overwrite \u003ca href=\"https://spring.io/\" rel=\"nofollow noopener\"\u003eSpring\u003c/a\u003e configurations to access the services in \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003ePreparation\u003c/h2\u003e\n\u003cp\u003eThis tutorial assumes you have\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eA working Spring application with Java 8 or higher\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eA text editor of your choice.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e has a \u003ca href=\"https://github.com/platformsh/config-reader-java\" rel=\"nofollow noopener\"\u003eJava configuration-reader\u003c/a\u003e library that provides a streamlined and easy to interact with a \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment and its \u003ca href=\"https://docs.platform.sh/configuration/services.html\"\u003eservices\u003c/a\u003e. However, you can also use the application regularly and overwrite those configurations when you deploy your application on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. That is useful when you either already have one app and want to move to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e or keep the default configuration to run locally.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003cp\u003eTo keep the configurations Spring has by default, the \u003ccode\u003eapplication.properties\u003c/code\u003e file is where you can set the settings that you wish on your application. Furthermore, \u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-external-config\" rel=\"nofollow noopener\"\u003ethose settings can be overwritten as external configuration\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eE.g.: Give a Spring Data JPA application that you’re running locally PostgreSQL with those properties on the \u003ccode\u003eapplications.properties\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e## default connection pool\nspring.datasource.hikari.connectionTimeout=20000\nspring.datasource.hikari.maximumPoolSize=5  \n## PostgreSQL\nspring.datasource.url=jdbc:postgresql://localhost:5432/people\nspring.datasource.username=postgres\nspring.datasource.password=password\nspring.jpa.hibernate.ddl-auto=update\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eYou can overwrite those configurations on the \u003ccode\u003eplatform.app.yaml\u003c/code\u003e, the application configuration file for \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003ename: app\ntype: \"java:11\"\ndisk: 1024\nhooks:\n    build: mvn clean install\nrelationships:\n    database: \"dbpostgres:postgresql\"\nweb:\n    commands:\n        start:  |\n           export DB_PORT=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".database[0].port\"`\n           export USER=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".database[0].username\"`\n           export PASSWORD=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".database[0].password\"`\n           export HOST=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".database[0].host\"`\n           export DATABASE=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".database[0].path\"`\n           export URL=\"jdbc:postgresql://${HOST}:${DB_PORT}/${DATABASE}\"\n           java -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError  \\\n           -Dspring.datasource.url=$URL \\\n           -Dspring.datasource.username=$USER \\\n           -Dspring.datasource.password=$PASSWORD \\\n           target/spring-boot.jar --server.port=$PORT\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eTherefore, you can have the configuration or just migrate the application that already exists to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://spring.io/\" rel=\"nofollow noopener\"\u003eSpring\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html\" rel=\"nofollow noopener\"\u003eSpring Properties\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-external-config\" rel=\"nofollow noopener\"\u003eSpring Externalized Configuration\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/frameworks/spring.html\"\u003eSpring with Platform.sh Configuration Reader\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/java-overwrite-configuration/tree/master/spring-jpa\" rel=\"nofollow noopener\"\u003eSource code\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-overwrite-spring-data-variable-to-access-platform-sh-services/518",
        "relurl": "/t/how-to-overwrite-spring-data-variable-to-access-platform-sh-services/518"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "b1004e7b9065e8b447509de310e6ddf03e199021",
        "title": "How to Migrate your Java 8 application to Java 11 on Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eIn this tutorial, we’ll cover the how and why of upgrading a Java 8 project to Java 11 on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003ePreparation\u003c/h2\u003e\n\u003cp\u003eThis tutorial assumes you have\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA working Java 8 application already deployed on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eA text editor of your choice.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003eJava 8, the old Java LTS release, is no longer maintained.  As an unmaintained version it will no longer receive security fixes, and so over time there will be more and more known-but-unfixed security issues found with it.\u003c/p\u003e\n\u003cp\u003eJava 11 is the new LTS release, and is both more secure and more performant.   \u003ca href=\"https://twitter.com/leonardopanga\" rel=\"nofollow noopener\"\u003eLeonardo Zanivan\u003c/a\u003e’s \u003ca href=\"https://medium.com/criciumadev/its-time-migrating-to-java-11-5eb3868354f9\" rel=\"nofollow noopener\"\u003eblog\u003c/a\u003e covers the major new features, including:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eNext LTS version\u003c/li\u003e\n\u003cli\u003eFull support for containers\u003c/li\u003e\n\u003cli\u003eSupport parallel full garbage collection on G1.\u003c/li\u003e\n\u003cli\u003eFree Application Class-Data Sharing feature.\u003c/li\u003e\n\u003cli\u003eHeap allocation on alternative memory devices.\u003c/li\u003e\n\u003cli\u003eNew default set of root authority certificates.\u003c/li\u003e\n\u003cli\u003eNew \u003ca href=\"https://wiki.openjdk.java.net/display/zgc/Main\" rel=\"nofollow noopener\"\u003eZGC\u003c/a\u003e and \u003ca href=\"http://openjdk.java.net/jeps/318\" rel=\"nofollow noopener\"\u003eEpsilon\u003c/a\u003e garbage collectors.\u003c/li\u003e\n\u003cli\u003eAhead-of-time compilation and GraalVM.\u003c/li\u003e\n\u003cli\u003eTransport Layer Security (TLS) 1.3.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://openjdk.java.net/jeps/254\" rel=\"nofollow noopener\"\u003eCompact Strings\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"http://openjdk.java.net/jeps/248\" rel=\"nofollow noopener\"\u003eMake G1 the Default Garbage Collector\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSeveral benchmarks on the JVM improvements \u003ca href=\"https://www.optaplanner.org/blog/2019/01/17/HowMuchFasterIsJava11.html\" rel=\"nofollow noopener\"\u003eshow an improvement of around 20%\u003c/a\u003e. Furthermore, code written for Java 8 doesn’t need to be updated to run on the Java 11 JVM, \u003ca href=\"https://caff.de/posts/java-11-vs-8-performance/\" rel=\"nofollow noopener\"\u003ebut still sees improvements in both memory usage and boot up time\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eTo keep your code working you need to be aware of \u003ca href=\"https://openjdk.java.net/jeps/320\" rel=\"nofollow noopener\"\u003eJEP 320: Remove the Java EE and CORBA Modules\u003c/a\u003e. If you are using those modules you’ll need to re-add them in your dependency management tool. See \u003ca href=\"https://blog.codefx.org/java/java-11-migration-guide/#Migrating-From-Java-8-To-Java-11\" rel=\"nofollow noopener\"\u003ethis blog post for general migration tips\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003cp\u003eTo update the application, you need to update a single file: the \u003ccode\u003e.platform.app.yaml\u003c/code\u003e file.  On a development branch (not production), find the \u003ccode\u003etype\u003c/code\u003e property:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003ename: app\ntype: \"java:8\"\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eUpdate this line to Java 11:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003ename: app\ntype: \"java:11\"\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eCommit the changes and push.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e will then build a new container using Java 11 instead of Java 8.  The new version will be used for both the build process (compilation) and the running environment.\u003c/p\u003e\n\u003cp\u003eOnce you’re satisfied that the update is safe to complete, merge this new branch to \u003ccode\u003emaster\u003c/code\u003e and push.\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://docs.platform.sh/languages/java.html\"\u003eJava Platform.sh Documentation\u003c/a\u003e\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-migrate-your-java-8-application-to-java-11-on-platform-sh/499",
        "relurl": "/t/how-to-migrate-your-java-8-application-to-java-11-on-platform-sh/499"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "4f41fc199792a82171e62fa0f8a345bca5b641e4",
        "title": "How to Overwrite variables to Payara JPA access Platform.sh SQL services",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eIn this tutorial, we’ll cover how you can overwrite \u003ca href=\"https://www.payara.fish/\" rel=\"nofollow noopener\"\u003ePayara\u003c/a\u003e configurations to access the services in \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003ePreparation\u003c/h2\u003e\n\u003cp\u003eThis tutorial assumes you have\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA working Payara application with Java 8 or higher\u003c/li\u003e\n\u003cli\u003eA text editor of your choice.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e has a \u003ca href=\"https://github.com/platformsh/config-reader-java\" rel=\"nofollow noopener\"\u003eJava configuration-reader\u003c/a\u003e library that provides a streamlined and easy to use way to interact with a \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment and \u003ca href=\"https://docs.platform.sh/configuration/services.html\"\u003ethose services\u003c/a\u003e. However, you can also use the application regularly and overwrite those configurations when you deploy your application on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. That is useful when you either already have one app and want to move to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e or keep the default configuration to run locally.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003cp\u003eFirst, to use a database as a data source in Payara Micro, you’ll need to have the database already running. Once you have that in place, download the JDBC driver for the database and put it into your \u003ccode\u003eWEB-INF/lib\u003c/code\u003e directory.\u003c/p\u003e\n\u003cp\u003eIn your \u003ccode\u003eweb.xml\u003c/code\u003e add the following:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-xml\"\u003e\u0026lt;?xml version=\"1.0\" encoding=\"UTF-8\"?\u0026gt;\n\u0026lt;web-app version=\"4.0\" xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\u0026gt;\n    \u0026lt;data-source\u0026gt;\n        \u0026lt;name\u0026gt;java:global/JPAExampleDataSource\u0026lt;/name\u0026gt;\n        \u0026lt;class-name\u0026gt;org.postgresql.ds.PGSimpleDataSource\u0026lt;/class-name\u0026gt;\n        \u0026lt;server-name\u0026gt;${server.host}\u0026lt;/server-name\u0026gt;\n        \u0026lt;port-number\u0026gt;5432\u0026lt;/port-number\u0026gt;\n        \u0026lt;database-name\u0026gt;${server.database}\u0026lt;/database-name\u0026gt;\n        \u0026lt;user\u0026gt;${server.user}\u0026lt;/user\u0026gt;\n        \u0026lt;password\u0026gt;${server.password}\u0026lt;/password\u0026gt;\n    \u0026lt;/data-source\u0026gt;\n\u0026lt;/web-app\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eYou can overwrite those configurations on the \u003ccode\u003eplatform.app.yaml\u003c/code\u003e the application configuration to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. As shown in the configuration below.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003ename: app\ntype: \"java:8\"\ndisk: 1024\nhooks:\n    build: mvn clean package payara-micro:bundle\nrelationships:\n    database: \"db:postgresql\"\nweb:\n    commands:\n        start: |\n          export HOST=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".database[0].host\"`\n          export PASSWORD=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".database[0].password\"`\n          export USER=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".database[0].username\"`\n          export DATABASE=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".database[0].path\"`\n          java -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError  \\\n          -Dserver.host=$HOST \\\n          -Dserver.database=$DATABASE \\\n          -Dserver.user=$USER \\\n          -Dserver.password=$PASSWORD \\\n          target/microprofile-microbundle.jar --port $PORT\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eTherefore, you can have the configuration or just migrate the application that already exists to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.payara.fish/\" rel=\"nofollow noopener\"\u003ePayara\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/payara/Payara-Examples/tree/master/payara-micro/jpa-datasource-example\" rel=\"nofollow noopener\"\u003eData Source Example\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.payara.fish/setting-up-a-data-source-in-payara-micro\" rel=\"nofollow noopener\"\u003eSetting Up a Data Source in Payara Micro\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/frameworks/jakarta.html\"\u003ePayara with Platform.sh Configuration Reader\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/java-overwrite-configuration/blob/master/payara/README.md\" rel=\"nofollow noopener\"\u003eSource code\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-overwrite-variables-to-payara-jpa-access-platform-sh-sql-services/519",
        "relurl": "/t/how-to-overwrite-variables-to-payara-jpa-access-platform-sh-sql-services/519"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "6e5e4cf509e1096d0f6721cbc9fd394f3cca2465",
        "title": "How to overwrite configuration to Jakarta/MicroProfile to access Platform.sh services",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eIn this tutorial, we’ll cover how you can overwrite Jakarta EE/MicroProfile configurations to access the services in \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003ePreparation\u003c/h2\u003e\n\u003cp\u003eThis tutorial assumes you have:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA working Jakarta EE/MicroProfile application with Java 8 or higher\u003c/li\u003e\n\u003cli\u003eA text editor of your choice.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e has a \u003ca href=\"https://github.com/platformsh/config-reader-java\" rel=\"nofollow noopener\"\u003eJava configuration-reader\u003c/a\u003e library that provides a streamlined and easy to interact with a \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e environment and its \u003ca href=\"https://docs.platform.sh/configuration/services.html\"\u003eservices\u003c/a\u003e. However, you can also use the application regularly and overwrite those configurations when you deploy your application on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. That is useful when you either already have one app and want to move to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e or keep the default configuration to run locally.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003cp\u003eFor \u003ca href=\"https://microprofile.io/\" rel=\"nofollow noopener\"\u003eMicroProfile\u003c/a\u003e/\u003ca href=\"https://jakarta.ee/\" rel=\"nofollow noopener\"\u003eJakarta EE\u003c/a\u003e the configurations and settings are set by \u003ca href=\"https://github.com/eclipse/microprofile-config\" rel=\"nofollow noopener\"\u003eMicroProfile Configuration\u003c/a\u003e. It is as a convention and not as standard, which by default it uses the \u003ccode\u003emicroprofile-config.properties\u003c/code\u003e file where you can set the settings and overwrite it. To have a \u003ca href=\"https://projects.eclipse.org/projects/ee4j.nosql\" rel=\"nofollow noopener\"\u003eJakarta NoSQL\u003c/a\u003e application that connects a \u003ca href=\"https://www.mongodb.com/\" rel=\"nofollow noopener\"\u003eMongoDB\u003c/a\u003e database locally, the configuration will be like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003edocument=document\ndocument.database=conferences\ndocument.settings.jakarta.nosql.host=localhost:27017\ndocument.provider=org.eclipse.jnosql.diana.mongodb.document.MongoDBDocumentConfiguration\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eYou can overwrite those configurations in \u003ccode\u003eplatform.app.yaml\u003c/code\u003e, the application configuration file for \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003ename: app\ntype: \"java:8\"\ndisk: 800\n\nhooks:\n  build: mvn -U -DskipTests clean package payara-micro:bundle\nrelationships:\n  mongodb: 'mongodb:mongodb'\n\nweb:\n  commands:\n    start: |\n      export MONGO_PORT=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".mongodb[0].port\"`\n      export MONGO_HOST=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".mongodb[0].host\"`\n      export MONGO_ADDRESS=\"${MONGO_HOST}:${MONGO_PORT}\"\n      export MONGO_PASSWORD=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".mongodb[0].password\"`\n      export MONGO_USER=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".mongodb[0].username\"`\n      export MONGO_DATABASE=`echo $PLATFORM_RELATIONSHIPS|base64 -d|jq -r \".mongodb[0].path\"`\n      java -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError -Ddocument.settings.jakarta.nosql.host=$MONGO_ADDRESS \\\n      -Ddocument.database=$MONGO_DATABASE -Ddocument.settings.jakarta.nosql.user=$MONGO_USER \\\n      -Ddocument.settings.jakarta.nosql.password=$MONGO_PASSWORD \\\n      -Ddocument.settings.mongodb.authentication.source=$MONGO_DATABASE \\\n      target/heroes-microbundle.jar --port $PORT\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eTherefore, you can have the configuration or just migrate the application that already exists to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://jakarta.ee/\" rel=\"nofollow noopener\"\u003eJakarta EE\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://microprofile.io/\" rel=\"nofollow noopener\"\u003eMicroProfile\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/eclipse/microprofile-config\" rel=\"nofollow noopener\"\u003eMicroProfile Configuration\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.jnosql.org/\" rel=\"nofollow noopener\"\u003eJNoSQL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/frameworks/jakarta.html\"\u003ePayara with Platform.sh Configuration Reader\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/java-overwrite-configuration/tree/master/jakarta-nosql\" rel=\"nofollow noopener\"\u003eSource code\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-overwrite-configuration-to-jakarta-microprofile-to-access-platform-sh-services/520",
        "relurl": "/t/how-to-overwrite-configuration-to-jakarta-microprofile-to-access-platform-sh-services/520"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "01dec78a8c614f5c91236814c7bd2b7a58d94e48",
        "title": "How to Configure your Java Application with Log4J at Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eIn this tutorial, we’ll cover the how and why to use log in your application using \u003ca href=\"https://logging.apache.org/log4j/2.x/\" rel=\"nofollow noopener\"\u003eLog4J\u003c/a\u003e  \u003ca href=\"http://platform.sh\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003ePreparation\u003c/h2\u003e\n\u003cp\u003eThis tutorial assumes you have\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA working Java 8 application already deployed on \u003ca href=\"http://platform.sh\"\u003ePlatform.sh\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cul\u003e\n\u003cli\u003eA text editor of your choice.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003eLogging is the process of writing log messages during the execution of a program to a central place. This logging allows you to report and persist error and warning messages as well as info messages (e.g., runtime statistics) so that the messages can later be retrieved and analyzed.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003ch3\u003e1.  \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e log file\u003c/h3\u003e\n\u003cp\u003eIn \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e we have two options to log your Java application.\u003cbr\u003e\nThe first one is to use the stdout where \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e will handle the folder it includes to avoid the oversized in the disk issue.\u003c/p\u003e\n\u003cp\u003eThis log will be at the \u003ccode\u003e/var/log/app.log\u003c/code\u003e:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.platform.sh/development/logs.html\" class=\"onebox\" target=\"_blank\"\u003ehttps://docs.platform.sh/development/logs.html\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eIn your \u003ccode\u003elog4j.properties\u003c/code\u003e you can set it, e.g.:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003elog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.Target=System.out\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAll log files are trimmed to 100 MB automatically. But if you need to have complete logs, you can set up cron which will upload them to third-party storage. \u003ca href=\"https://www.contextualcode.com/\" rel=\"nofollow noopener\"\u003eContextual Code\u003c/a\u003e made a \u003ca href=\"https://gitlab.com/contextualcode/platformsh-store-logs-at-s3\" rel=\"nofollow noopener\"\u003esimple and well-described example\u003c/a\u003e how to achieve it.\u003c/p\u003e\n\u003ch3\u003e2.  The custom log folder\u003c/h3\u003e\n\u003cp\u003eThe second option is to create a new mount directory and then use it to handle your logs. The advantage is that we can create multiple records as you wish; however, you will then be responsible for purging old log files to avoid filling up the disk.\u003c/p\u003e\n\u003cp\u003eIn your \u003ccode\u003elog4j.properties\u003c/code\u003e you can set, e.g.:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003elog4j.rootLogger=DEBUG, R\nlog4j.appender.R=org.apache.log4j.RollingFileAppender\nlog4j.appender.R.MaxFileSize=1MB\nlog4j.appender.R.MaxBackupIndex=20\nlog4j.appender.R.File=/app/log/app.log\nlog4j.appender.R.Append=true\nlog4j.appender.R.DatePattern='.'yyyy-MM-dd'.log'\nlog4j.appender.R.layout=org.apache.log4j.PatternLayout\nlog4j.appender.R.layout.ConversionPattern=%d{MM/dd/yyyy HH:mm:ss,SSS} %-5p %c - %m%n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThis time we need to create a \u003ca href=\"https://docs.platform.sh/configuration/app/storage.html#mounts\"\u003emount folder\u003c/a\u003e to create your log, so we need to go in the \u003ca href=\"https://docs.platform.sh/configuration/app-containers.html\"\u003eapplication description file\u003c/a\u003e to define a writable folder to the log.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003emounts:\n    'log/':\n        source: local\n        source_path: log_source\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eCommit the changes and push to redeploy.\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://dzone.com/articles/logging-with-log4j-in-java\" rel=\"nofollow noopener\"\u003eLogging With Log4j in Java\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.vogella.com/tutorials/Logging/article.html\" rel=\"nofollow noopener\"\u003eJava Logging API - Tutorial\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/languages/java.html\"\u003eJava Platform.sh Documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/development/logs.html\"\u003ePlatform.sh Logs\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-configure-your-java-application-with-log4j-at-platform-sh/514",
        "relurl": "/t/how-to-configure-your-java-application-with-log4j-at-platform-sh/514"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "c7a1b88d335d55ff3c8d8b614183f4a86a8f3e34",
        "title": "How to migrate your Java Application from Heroku to Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eMigrate a Heroku Java Application to a \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e service.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cp\u003eYou will need:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ean active application on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e configured to an empty database\u003c/li\u003e\n\u003cli\u003ean active application on Heroku\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003ch3\u003e1. Git clone the Heroku Repository\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003egit clone heroku_repository.git\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Create the three basic \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e file\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ccode\u003e.platform/routes.yaml\u003c/code\u003e : \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e allows you to define the \u003ca href=\"https://docs.platform.sh/configuration/routes.html\"\u003eroutes\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.platform/services.yaml\u003c/code\u003e: \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e allows you to completely define and configure the topology and \u003ca href=\"https://docs.platform.sh/configuration/services.html\"\u003eservices you want to use on your project\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\n\u003ccode\u003e.platform.app.yaml\u003c/code\u003e: You control your application and the way it will be built and deployed on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e \u003ca href=\"https://docs.platform.sh/configuration/app-containers.html\"\u003evia a single configuration file\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e3. Set the Application File\u003c/h3\u003e\n\u003cp\u003eAt the \u003ccode\u003e.platform.app.yaml\u003c/code\u003e we’ll set the minimum configuration to run a plain configuration be aware that it does not include database services such as MySQL, MariaDB and so on.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003e# This file describes an application. You can have multiple applications\n# in the same project.\n#\n# See https://docs.platform.sh/user_guide/reference/platform-app-yaml.html\n# The name of this app. Must be unique within a project.\nname: app\n\n# The runtime the application uses.\ntype: 'java:8'\n\ndisk: 1024\n\n# The hooks executed at various points in the lifecycle of the application.\nhooks:\n    build: mvn clean install\n\nmounts:\n    'server/':\n        source: local\n        source_path: server_source\n\n# The relationships of the application with services or other applications.\n#\n# The left-hand side is the name of the relationship as it will be exposed\n# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand\n# side is in the form `\u0026lt;service name\u0026gt;:\u0026lt;endpoint name\u0026gt;`.\n\n# The configuration of app when it is exposed to the web.\nweb:\n    commands:\n        start: |\n            cp target/dependency/webapp-runner.jar server/webapp-runner.jar\n            cp target/tomcat.war server/tomcat.war\n            cd server \u0026amp;\u0026amp; java -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError webapp-runner.jar --port $PORT tomcat.war\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e4. Add \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e Remote Repository\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003egit remote add platform platform_repository.git\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e5. Push the changes to the Repository\u003c/h3\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003egit push platform master\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eBy adding a \u003ccode\u003e.platform.app.yaml\u003c/code\u003e file to a project,  a Java application’s build process can be migrated from Heroku. In order to fully migrate, the next step is to use the Heroku CLI to dump your database and import it to a service defined on your \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e project.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAdditional resources:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://community.platform.sh/t/how-to-migrate-a-postgresql-database-from-heroku-to-platform-sh/301\"\u003eHow to migrate a PostgreSQL database from Heroku to Platform.sh\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/tomcat-webapp-runner\" rel=\"nofollow noopener\"\u003eSample App\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-migrate-your-java-application-from-heroku-to-platform-sh/441",
        "relurl": "/t/how-to-migrate-your-java-application-from-heroku-to-platform-sh/441"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "7ac02fd7f0e887eaff88fe68dc56af15532a2c6e",
        "title": "How to set up Wordpress to use the HTTP cache of Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eConfigure Wordpress to send proper cache-control headers, so the \u003ca href=\"https://docs.platform.sh/configuration/routes/cache.html#http-cache\"\u003eHTTP cache\u003c/a\u003e can be used.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eA WordPress installation on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e that uses Composer, for example one that uses the \u003ca href=\"https://github.com/platformsh/template-wordpress\" rel=\"nofollow noopener\"\u003eWordPress Template\u003c/a\u003e and is configured for a \u003ca href=\"https://community.platform.sh/t/how-to-install-wordpress-plugins-and-themes-with-composer\"\u003ecomposer-based installation of plugins\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003eAn \u003ca href=\"https://docs.platform.sh/development/ssh.html\"\u003eSSH key\u003c/a\u003e configured on the project account\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://getcomposer.org/\" rel=\"nofollow noopener\"\u003eComposer\u003c/a\u003e installed locally\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003eBy default, Wordpress doesn’t set proper headers to allow the build-in \u003ca href=\"https://docs.platform.sh/configuration/routes/cache.html#http-cache\"\u003eHTTP cache\u003c/a\u003e to work efficiently.\u003c/p\u003e\n\u003cp\u003eYou can test if your site is cached based on the \u003ccode\u003ex-platform-cache\u003c/code\u003e response header which will probably be a \u003ccode\u003eMISS\u003c/code\u003e with the default Wordpress installation.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003ch3\u003e1. Install and enable the cache-control plugin\u003c/h3\u003e\n\u003cp\u003eThe main configuration that the HTTP cache needs to work properly, is \u003ccode\u003eCache-Control\u003c/code\u003e header. Since Wordpress does not include an option to set those headers in their core, you need to use a 3rd party plugin. The example used here is \u003ca href=\"https://wordpress.org/plugins/cache-control/\" rel=\"nofollow noopener\"\u003ecache-control\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIf you have set up your project to use a composer-based installation of plugins (\u003ca href=\"https://community.platform.sh/t/how-to-install-wordpress-plugins-and-themes-with-composer\"\u003esee here on how to do this\u003c/a\u003e), you can use \u003ccode\u003ecomposer require wpackagist-plugin/cache-control\u003c/code\u003e locally to update your composer files.\u003c/p\u003e\n\u003cp\u003eAfter that commit and push them so the plugin gets deployed to your project. In the Admin-Dashboard go to \u003cem\u003ePlugins\u003c/em\u003e, find \u003cem\u003eCache-Control\u003c/em\u003e and click \u003cem\u003eActivate\u003c/em\u003e.\u003c/p\u003e\n\u003ch3\u003e2. Verify and adjust the header values\u003c/h3\u003e\n\u003cp\u003eIn the plugin settings, you can adjust the time different sites is being cached (e.g home page, post sites, etc). You can adjust that as necessary, following good practises.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://community.platform.sh/uploads/default/original/1X/83103faec078789e4fa3c155e364e73aa38d72aa.jpeg\" data-download-href=\"https://community.platform.sh/uploads/default/83103faec078789e4fa3c155e364e73aa38d72aa\" title=\"Screenshot 2020-03-24 16.52.31.jpg\"\u003e\u003cimg src=\"https://community.platform.sh/uploads/default/optimized/1X/83103faec078789e4fa3c155e364e73aa38d72aa_2_690x418.jpeg\" alt=\"31\" data-base62-sha1=\"iHrmpmAaSJtQR8gGCyDcJw3kQoW\" width=\"690\" height=\"418\" srcset=\"https://community.platform.sh/uploads/default/optimized/1X/83103faec078789e4fa3c155e364e73aa38d72aa_2_690x418.jpeg, https://community.platform.sh/uploads/default/optimized/1X/83103faec078789e4fa3c155e364e73aa38d72aa_2_1035x627.jpeg 1.5x, https://community.platform.sh/uploads/default/optimized/1X/83103faec078789e4fa3c155e364e73aa38d72aa_2_1380x836.jpeg 2x\" data-small-upload=\"https://community.platform.sh/uploads/default/optimized/1X/83103faec078789e4fa3c155e364e73aa38d72aa_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\n\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eScreenshot 2020-03-24 16.52.31.jpg\u003c/span\u003e\u003cspan class=\"informations\"\u003e1792×1086 230 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\n\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch3\u003e3. Settings for static assets\u003c/h3\u003e\n\u003cp\u003eFor static assets, the Wordpress template includes a default \u003ccode\u003eCache-Control\u003c/code\u003e of \u003ccode\u003e600\u003c/code\u003e in your \u003ccode\u003e.platform.app.yaml\u003c/code\u003e file. To adjust that (if needed), you find the \u003ccode\u003eexpires\u003c/code\u003e setting in the \u003ca href=\"https://github.com/platformsh-templates/wordpress/blob/master/.platform.app.yaml#L33\" rel=\"nofollow noopener\"\u003elocation block\u003c/a\u003e.\u003c/p\u003e\n\u003ch3\u003e4. Verify your site is being cached\u003c/h3\u003e\n\u003cp\u003eTo check if the response is cached, you can use \u003ccode\u003ecurl -I\u003c/code\u003e to retrieve the headers. While the first response might be a \u003ccode\u003eMISS\u003c/code\u003e (because the page has not been cached yet), as soon as you send the same request again, it should return \u003ccode\u003eHIT\u003c/code\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003ecurl -I https://master-7rqtwti-af6kbo7ndasc2.eu-3.platformsh.site/\nHTTP/2 200\ncache-control: max-age=300\n…\nx-platform-cache: HIT\n…\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eWith this setup, your Wordpress site can leverage the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e HTTP Cache and you have control over the caching behaviour for different parts of your Wordpress site.\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-set-up-wordpress-to-use-the-http-cache-of-platform-sh/508",
        "relurl": "/t/how-to-set-up-wordpress-to-use-the-http-cache-of-platform-sh/508"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "5bcf53ac327f598f8d0723b98a3bee07469bd3ed",
        "title": "How to install Wordpress plugins and themes with Composer",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eAdd external plugins or themes from the official directory to your Wordpress installation using composer.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eA WordPress installation on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e that uses Composer, for example one that uses the \u003ca href=\"https://github.com/platformsh/template-wordpress\" rel=\"nofollow noopener\"\u003eWordPress Template\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eAn \u003ca href=\"https://docs.platform.sh/development/ssh.html\"\u003eSSH key\u003c/a\u003e configured on the project account\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"https://getcomposer.org/\" rel=\"nofollow noopener\"\u003eComposer\u003c/a\u003e installed locally\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003eSince \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e deploys the code read-only (and thus makes many Wordpress sites more secure by default), the integrated mechanism to add and update both plugins and themes doesn’t work.\u003c/p\u003e\n\u003cp\u003eLuckily, \u003ca href=\"https://wpackagist.org/\" rel=\"nofollow noopener\"\u003ewpackagist.org\u003c/a\u003e mirrors the WordPress plugin and theme directories as a Composer repository. This means you can add all plugins and themes covered by the directory using composer.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003ch3\u003e1. Add the external repository\u003c/h3\u003e\n\u003cp\u003eEdit your composer.json file and add wpackagist as a repository.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-json\"\u003e\"repositories\":[\n\t{\n\t    \"type\":\"composer\",\n\t    \"url\":\"https://wpackagist.org\"\n\t}\n],\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Add a plugin or theme via composer\u003c/h3\u003e\n\u003cp\u003eYou can use \u003ccode\u003ecomposer require\u003c/code\u003e to add a plugin or a theme as a dependency. For plugins, use \u003ccode\u003ewpackagist-plugin\u003c/code\u003e as the vendor name, for themes use \u003ccode\u003ewpackagist-theme\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eExamples:\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003ePlugin: \u003ccode\u003ecomposer require wpackagist-plugin/cache-control\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eTheme: \u003ccode\u003ecomposer require wpackagist-theme/neve\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eComposer will update your \u003ccode\u003ecomposer.json\u003c/code\u003e and \u003ccode\u003ecomposer.lock\u003c/code\u003e files accordingly.\u003c/p\u003e\n\u003ch3\u003e3. Push to your repository\u003c/h3\u003e\n\u003cp\u003eBy pushing those changes to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e, the build process will automatically install the themes and plugins in the right folder.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003egit add composer.json composer.lock\ngit commit -m 'adding themes/plugins'\ngit push\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e4. Enable plugins/themes in the WP-Admin Dashboard\u003c/h3\u003e\n\u003cp\u003eThe admin interface will show the plugins/themes and will allow you to enable them directly via the interface.\u003c/p\u003e\n\u003cp\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://community.platform.sh/uploads/default/original/1X/190a0168bbfa12f70e4697173dde9e705688e27c.jpeg\" data-download-href=\"https://community.platform.sh/uploads/default/190a0168bbfa12f70e4697173dde9e705688e27c\" title=\"Screenshot 2020-03-24 13.06.57.jpg\"\u003e\u003cimg src=\"https://community.platform.sh/uploads/default/optimized/1X/190a0168bbfa12f70e4697173dde9e705688e27c_2_690x418.jpeg\" alt=\"57\" data-base62-sha1=\"3zvn9yTvRrRQKwZ9N1EkA8sehwE\" width=\"690\" height=\"418\" srcset=\"https://community.platform.sh/uploads/default/optimized/1X/190a0168bbfa12f70e4697173dde9e705688e27c_2_690x418.jpeg, https://community.platform.sh/uploads/default/optimized/1X/190a0168bbfa12f70e4697173dde9e705688e27c_2_1035x627.jpeg 1.5x, https://community.platform.sh/uploads/default/optimized/1X/190a0168bbfa12f70e4697173dde9e705688e27c_2_1380x836.jpeg 2x\" data-small-upload=\"https://community.platform.sh/uploads/default/optimized/1X/190a0168bbfa12f70e4697173dde9e705688e27c_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\n\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eScreenshot 2020-03-24 13.06.57.jpg\u003c/span\u003e\u003cspan class=\"informations\"\u003e1792×1086 242 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\n\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003cbr\u003e\n\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://community.platform.sh/uploads/default/original/1X/d5cb437818dd8dfec2045255c7074593fea81340.jpeg\" data-download-href=\"https://community.platform.sh/uploads/default/d5cb437818dd8dfec2045255c7074593fea81340\" title=\"Screenshot 2020-03-24 13.09.05.jpg\"\u003e\u003cimg src=\"https://community.platform.sh/uploads/default/optimized/1X/d5cb437818dd8dfec2045255c7074593fea81340_2_690x418.jpeg\" alt=\"05\" data-base62-sha1=\"uvjbRzrUn6KFqwGlX9sQkL1lXwc\" width=\"690\" height=\"418\" srcset=\"https://community.platform.sh/uploads/default/optimized/1X/d5cb437818dd8dfec2045255c7074593fea81340_2_690x418.jpeg, https://community.platform.sh/uploads/default/optimized/1X/d5cb437818dd8dfec2045255c7074593fea81340_2_1035x627.jpeg 1.5x, https://community.platform.sh/uploads/default/optimized/1X/d5cb437818dd8dfec2045255c7074593fea81340_2_1380x836.jpeg 2x\" data-small-upload=\"https://community.platform.sh/uploads/default/optimized/1X/d5cb437818dd8dfec2045255c7074593fea81340_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\n\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eScreenshot 2020-03-24 13.09.05.jpg\u003c/span\u003e\u003cspan class=\"informations\"\u003e1792×1086 283 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\n\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eBy using composer to install 3rd party plugins and themes, you get a reliable build process and make sure the code is deployed safely. This avoids committing plugins and themes into your git repository.\u003c/p\u003e\n\u003cp\u003eIt also makes it easy to keep plugins and themes up to date. You can follow \u003ca href=\"https://community.platform.sh/t/how-to-upgrade-wordpress-core-and-dependencies-with-composer\"\u003ethis\u003c/a\u003e guide on how to keep your Wordpress site updated.\u003c/p\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-install-wordpress-plugins-and-themes-with-composer/507",
        "relurl": "/t/how-to-install-wordpress-plugins-and-themes-with-composer/507"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "4b3f5c7dd6da631abb6463f7ac91bb628c70d289",
        "title": "How to use environment variables with nuxtjs on Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eTo use environment variables in a \u003ca href=\"https://nuxtjs.org\" rel=\"nofollow noopener\"\u003enuxtjs\u003c/a\u003e app on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e\u003c/p\u003e\n\u003ch2\u003eProblem\u003c/h2\u003e\n\u003cp\u003eNuxt currently provides a very \u003ca href=\"https://nuxtjs.org/api/configuration-env\" rel=\"nofollow noopener\"\u003ehandy way of injecting environment variables\u003c/a\u003e which uses webpack substitution to inject your env vars at build time.\u003c/p\u003e\n\u003cp\u003eThis works most of the time, but on \u003ca href=\"http://Platform.Sh\" rel=\"nofollow noopener\"\u003ePlatform.Sh\u003c/a\u003e the build process is environment-agnostic. A build can, and will be reused on different environments. This means that environment variables are not available in the build hook. So nuxt is not able to compile them.\u003c/p\u003e\n\u003cp\u003eBuilding nuxt in the deploy hook, is also not possible, since the file system is read only.\u003c/p\u003e\n\u003ch2\u003eWork around: nuxt-env\u003c/h2\u003e\n\u003cp\u003eLuckily, there is a work around.\u003c/p\u003e\n\u003cp\u003eThere’s a nuxtjs plugin called \u003ca href=\"https://github.com/samtgarson/nuxt-env\" rel=\"nofollow noopener\"\u003enuxt-env\u003c/a\u003e. This allows you to define the environment variables that you want to access at runtime.\u003c/p\u003e\n\u003cp\u003eFirst, make sure you have nuxt-env installed by running \u003ccode\u003eyarn add nuxt-env\u003c/code\u003e on your local pc, and commit that \u003ccode\u003eyarn.lock\u003c/code\u003e file to your repository\u003c/p\u003e\n\u003cp\u003eThen, you can add the env vars you want to injects to your \u003ccode\u003enuxt.config.js\u003c/code\u003e file\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e// nuxt.config.js\n\n// Tell nuxt-env which env vars you want to inject\nmodules: [\n  'other-nuxt-module',\n  ['nuxt-env', {\n    keys: [\n      'TEST_ENV_VAR', // Basic usage—equivalent of { key: 'TEST_ENV_VAR' }\n      { key: 'OTHER_ENV_VAR', default: 'defaultValue' } // Specify a default value\n      { key: 'THIRD_ENV_VAR', secret: true } // Only inject the var server side\n      { key: 'ANOTHER_ENV_VAR', name: 'MY_ENV_VAR' } // Rename the variable\n    ]\n  }]\n]\n\n\u003c/code\u003e\u003c/pre\u003e",
        "section": "How-to Guides",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-use-environment-variables-with-nuxtjs-on-platform-sh/505",
        "relurl": "/t/how-to-use-environment-variables-with-nuxtjs-on-platform-sh/505"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "9781993d4b038bb106ce45c6dc4384b2d24376c3",
        "title": "Is it possible to kill a build or deploy?",
        "description": "",
        "text": "\u003cp\u003eSometimes I push a commit and the build/deploy either takes a very long time, or it becomes permanently stuck. Am I able to do something to kill the process?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/is-it-possible-to-kill-a-build-or-deploy/156",
        "relurl": "/t/is-it-possible-to-kill-a-build-or-deploy/156"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "0b1a00d9d63732a668c531cb1adb20cf109b810e",
        "title": "Using a custom certificate and LetsEncrypt certificates on the same project?",
        "description": "",
        "text": "\u003cp\u003eIs it possible to use a custom SSL certificate just for a specific domain, and use the autogenerated one for all other domains on the same project?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/using-a-custom-certificate-and-letsencrypt-certificates-on-the-same-project/361",
        "relurl": "/t/using-a-custom-certificate-and-letsencrypt-certificates-on-the-same-project/361"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "f01b22d27b2aacc6390703982cb9f05032d1c025",
        "title": "What does \"WARNING: [pool web] server reached max_children setting (2), consider raising it\" mean?",
        "description": "",
        "text": "\u003cp\u003eI keep seeing this in my site logs. Does this mean my site is down? How do I raise the max_children setting?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/what-does-warning-pool-web-server-reached-max-children-setting-2-consider-raising-it-mean/240",
        "relurl": "/t/what-does-warning-pool-web-server-reached-max-children-setting-2-consider-raising-it-mean/240"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "25319943a084d07d2f9f057e343d1d98677b06e7",
        "title": "Can I use Platform.sh for a different language?",
        "description": "",
        "text": "\u003cp\u003eWe can use PHP, NodeJS, Go, and more.\u003c/p\u003e\n\u003cp\u003eBut my favorite language is not there. How do I add a new language (e.g. Erlang, Elixir, …) ?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/can-i-use-platform-sh-for-a-different-language/237",
        "relurl": "/t/can-i-use-platform-sh-for-a-different-language/237"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "78fb7e1961e72278eea0aab0f79464f825b8359c",
        "title": "How can I forward my logs to Splunk or Logz.io?",
        "description": "",
        "text": "\u003cp\u003eI’d like to integrate my log monitoring across my organization, including applications not hosted on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-can-i-forward-my-logs-to-splunk-or-logz-io/166",
        "relurl": "/t/how-can-i-forward-my-logs-to-splunk-or-logz-io/166"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "c45b8bac2e17d4aa2e45a5aa5ad10c8d77969e38",
        "title": "My plan has 10GB of storage. How can I see precisely how much I am using?",
        "description": "",
        "text": "\u003cp\u003eI know that some is used by my services, and some is used by the \u003ccode\u003edisk\u003c/code\u003e directive in .platform.app.yaml. Is there a way to see how much is being used from the 10GB total that my project has?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/my-plan-has-10gb-of-storage-how-can-i-see-precisely-how-much-i-am-using/158",
        "relurl": "/t/my-plan-has-10gb-of-storage-how-can-i-see-precisely-how-much-i-am-using/158"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "d67481940670bd5c8011651a62b3da836f4565dc",
        "title": "Does Platform.sh support subdomains and Let's Encrypt for them?",
        "description": "",
        "text": "\u003cp\u003eI’m looking to add 500+ subdomains to my application on Platform Professional. How do I set them up in my \u003ccode\u003eroutes.yaml\u003c/code\u003e file? Is there a limit to the number of subdomains I can add there? How do I set up certificates for them?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/does-platform-sh-support-subdomains-and-lets-encrypt-for-them/200",
        "relurl": "/t/does-platform-sh-support-subdomains-and-lets-encrypt-for-them/200"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "43d18bd84360b0a684103f2476382ab3c31bf3bd",
        "title": "Using platform.sh environments for continuous integration / functional tests",
        "description": "",
        "text": "\u003cp\u003eWhat would the pros / cons of using platform to run integration / functional tests, instead of a typical Continuous Integration service? And is using platform to run functional tests possible / a bad idea?\u003c/p\u003e\n\u003cp\u003eMy thinking is this:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eUnit tests, static analysis, code linting etc. are easy to run in isolation, so that should remain in a typical CI environment\u003c/li\u003e\n\u003cli\u003eFunctional tests require a functioning environment, which \u003ca href=\"http://platform.sh\"\u003eplatform.sh\u003c/a\u003e can automatically provide\u003c/li\u003e\n\u003cli\u003eSometimes you want to run your functional tests against production data, which is also something \u003ca href=\"http://platform.sh\"\u003eplatform.sh\u003c/a\u003e can automatically provide\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAn example implementation could be:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eOn build, detect if this is an environment you want to run tests in (eg. non-production, pull request environment etc.)\u003c/li\u003e\n\u003cli\u003eInstall any tools you need to run functional tests (eg. a headless browser and testing framework)\u003c/li\u003e\n\u003cli\u003eRun the tests – fail the build if the tests fail\u003c/li\u003e\n\u003cli\u003eSend notification of the passed/failed build (I think the standard github pull request integration would report this back, but I’m not sure – an email or slack notification could be sent)\u003c/li\u003e\n\u003c/ol\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/using-platform-sh-environments-for-continuous-integration-functional-tests/386",
        "relurl": "/t/using-platform-sh-environments-for-continuous-integration-functional-tests/386"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "1c9c3fab92af90cf13415f50e3a91d5f2b6f4a75",
        "title": "How do I access my .git directory from within my app?",
        "description": "",
        "text": "\u003cp\u003eI want to be able to access the commit hash and timestamp of the current state of my project, but I don’t see a \u003ccode\u003e.git\u003c/code\u003e repository when I SSH in to my application. How can I access the information stored in \u003ccode\u003e.git\u003c/code\u003e?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-do-i-access-my-git-directory-from-within-my-app/349",
        "relurl": "/t/how-do-i-access-my-git-directory-from-within-my-app/349"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "82879a07c0643378facde81719cbb0e23175a1b1",
        "title": "Transferring backups from P.sh to S3",
        "description": "",
        "text": "\u003cp\u003eI think this would make a good how to guide.\u003c/p\u003e\n\u003cp\u003eAsking here first. I understand I can install s3cmd or aws-cli. Is there any examples kicking around?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/transferring-backups-from-p-sh-to-s3/215",
        "relurl": "/t/transferring-backups-from-p-sh-to-s3/215"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "c4cf6453d9b8e12a9e4b82c9aa16ab4af5f0b7d0",
        "title": "How to use FTP to upload files?",
        "description": "",
        "text": "\u003cp\u003eI want to upload a large amount of files to my production environment, how could I use FTP to upload them?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-use-ftp-to-upload-files/253",
        "relurl": "/t/how-to-use-ftp-to-upload-files/253"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "72226d555365347488ad8026b1d97f7e53757e4c",
        "title": "Log location? dblog or syslog?",
        "description": "",
        "text": "\u003cp\u003eI’m not sure where to find Drupal logs with syslog on, and I couldn’t find any info as to whether platform recommends/cares Re: syslog vs dblog.\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/log-location-dblog-or-syslog/210",
        "relurl": "/t/log-location-dblog-or-syslog/210"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "0cb313ca8f4e6e71030c2a7ba72af23cb25185d5",
        "title": "My project has exceeded its cpu limit. What do I do?",
        "description": "",
        "text": "\u003cp\u003eI received the below error when trying to deploy:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eE: Error: Resources exceeding plan limit; cpu: 1.00 \u0026gt; 0.96; try removing a service, or increase your plan size\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhat does that error mean? It appears to indicate that my project has exceeded its cpu plan limit. How would I increase this and how do I know what my cpu limit is?\u003c/p\u003e\n\u003cp\u003eThank you!\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/my-project-has-exceeded-its-cpu-limit-what-do-i-do/288",
        "relurl": "/t/my-project-has-exceeded-its-cpu-limit-what-do-i-do/288"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "aa206bfd673bc198f9cc9fda8af6ae7777788ff2",
        "title": "How can I move a Wordpress site to Platform.sh?",
        "description": "",
        "text": "\u003cp\u003eI have an existing installation of Wordpress with my old hoster, how can I move everything to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-can-i-move-a-wordpress-site-to-platform-sh/271",
        "relurl": "/t/how-can-i-move-a-wordpress-site-to-platform-sh/271"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "0383d4c645cf4b981c810c7eea5ff5a4ca57c4c2",
        "title": "How can I access to an environment variable in Javascript?",
        "description": "",
        "text": "\u003cp\u003eI would like to insert my Hotjar Identifier only on certain environments. How can I do that?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-can-i-access-to-an-environment-variable-in-javascript/251",
        "relurl": "/t/how-can-i-access-to-an-environment-variable-in-javascript/251"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "405123789db83e4cfd9bb75a83db066eb3ad347d",
        "title": "My project looks to be out of storage. How do I add more?",
        "description": "",
        "text": "\u003cp\u003eI received the following error when git pushing to my environment:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eE: Error: Resources exceeding plan limit; disk: 31192.00 \u0026gt; 30720.00; try removing a service, or add more storage to your plan\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIt suggests that I add more storage to my plan. How do I do that? Also, what does it mean by \u003ccode\u003eremoving a service\u003c/code\u003e?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/my-project-looks-to-be-out-of-storage-how-do-i-add-more/261",
        "relurl": "/t/my-project-looks-to-be-out-of-storage-how-do-i-add-more/261"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "5719e1b1e849c206cea3d80ad951638545e83c5f",
        "title": "Is it possible to run a docker container on Platform.sh?",
        "description": "",
        "text": "\u003cp\u003eI have my own Docker container prepared. Is there any way to pull it from a registry and run it on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/is-it-possible-to-run-a-docker-container-on-platform-sh/330",
        "relurl": "/t/is-it-possible-to-run-a-docker-container-on-platform-sh/330"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "7cc5dffcb3cdd9d558319befa8862b7fa5ba8528",
        "title": "How can I refresh my projects list in Platform CLI?",
        "description": "",
        "text": "\u003cp\u003eI have created several new projects and my Platform CLI is not refreshing the list of available projects.\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-can-i-refresh-my-projects-list-in-platform-cli/269",
        "relurl": "/t/how-can-i-refresh-my-projects-list-in-platform-cli/269"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "d8bd1641cda2d83292a69ff528fd23243708a6ea",
        "title": "Can I get a dedicated FTP/SFTP account for access to a specific directory?",
        "description": "",
        "text": "\u003cp\u003eCan I create an SFTP account for one of my team that only allows access to one folder, not to the whole site?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/can-i-get-a-dedicated-ftp-sftp-account-for-access-to-a-specific-directory/452",
        "relurl": "/t/can-i-get-a-dedicated-ftp-sftp-account-for-access-to-a-specific-directory/452"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "da301bd57372ab0c5a746c043709b87c9ce5c124",
        "title": "How to build and deploy Angular Universal app?",
        "description": "",
        "text": "\u003cp\u003eHello \u003cimg src=\"https://community.platform.sh/images/emoji/twitter/slight_smile.png?v=9\" title=\":slight_smile:\" class=\"emoji\" alt=\":slight_smile:\"\u003e ,\u003c/p\u003e\n\u003cp\u003eWe are using latest release of Angular Universal 9 with ivy (next-gen compatibility compiler) but we have an unexpected problem when we tried to build and deploy the app.\u003c/p\u003e\n\u003cp\u003eWe launch Ivy compilation in \u003ccode\u003epostinstall\u003c/code\u003e in sync mode script in order to avoid out of memory error, but the build doesn’t works…\u003c/p\u003e\n\u003cp\u003eHow to deploy our application quickly without memory error ?\u003cbr\u003e\nWe used “L” plan with 6Gb of Ram, it’s 3x more than our older PaaS system.\u003c/p\u003e\n\u003cp\u003eI provide most information about it, below :\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBuild Hook\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eyarn install\nyarn run build:ssr:dev\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe command \u003ccode\u003ebuild:ssr:dev\u003c/code\u003e launch webpack compilation :\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eng run website:build:dev \u0026amp;\u0026amp; ng run website:server:dev\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe website will be compiled to the \u003ccode\u003edist\u003c/code\u003e directory but this is currently not working :\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBuild output error log\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e$ ng run website:build:dev \u0026amp;\u0026amp; ng run website:server:dev\n        Generating ES5 bundles for differential loading...\n        W: An unhandled exception occurred: Call retries were exceeded\n        W: See \"/tmp/ng-1pShkt/angular-errors.log\" for further details.\n        W: error Command failed with exit code 127.\n        info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe file \u003ccode\u003e/tmp/ng-1pShkt/angular-errors.log\u003c/code\u003e  is not available, so I can’t debug log.\u003cbr\u003e\nHow to see Angular build error log ?\u003c/p\u003e\n\u003cp\u003eHow to build Angular application ? (Your documentation is only for AngularJS and it’s an old version, completely differente of Angular “next gen”).\u003c/p\u003e\n\u003cp\u003eThanks for your help \u003cimg src=\"https://community.platform.sh/images/emoji/twitter/heart.png?v=9\" title=\":heart:\" class=\"emoji\" alt=\":heart:\"\u003e\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-build-and-deploy-angular-universal-app/526",
        "relurl": "/t/how-to-build-and-deploy-angular-universal-app/526"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "a118416f22355bd25338f7dd9653bc7c475df797",
        "title": "How do I fix `fatal: the remote end hung up unexpectedly` while pushing from a Bitbucket pipeline to Platform.sh?",
        "description": "",
        "text": "\u003cp\u003eWhile pushing to Platform git repository from our Bitbucket runner, the pipeline fails with the following error:  \u003ccode\u003efatal: the remote end hung up unexpectedly\u003c/code\u003e .\u003cbr\u003e\nHow can I fix that?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-do-i-fix-fatal-the-remote-end-hung-up-unexpectedly-while-pushing-from-a-bitbucket-pipeline-to-platform-sh/492",
        "relurl": "/t/how-do-i-fix-fatal-the-remote-end-hung-up-unexpectedly-while-pushing-from-a-bitbucket-pipeline-to-platform-sh/492"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "df848e54a7de22f1eb4599c1655dacd042f85b68",
        "title": "What is the different between Platform.sh and Terraform?",
        "description": "",
        "text": "\u003cp\u003eWhat is the different between \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e and Terraform?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/what-is-the-different-between-platform-sh-and-terraform/342",
        "relurl": "/t/what-is-the-different-between-platform-sh-and-terraform/342"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "a9bb537a932ccac59b2fae03ef549d71b9336db2",
        "title": "Where do I submit bug reports?",
        "description": "",
        "text": "\u003cp\u003eIf I come across a problem working with \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e that seems like a bug, how can I bring it to your attention?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/where-do-i-submit-bug-reports/286",
        "relurl": "/t/where-do-i-submit-bug-reports/286"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "65c2083de024d35b48628e16a2d6dba639e7b68f",
        "title": "What is the difference between a rebuild and a redeploy?",
        "description": "",
        "text": "\u003cp\u003eAnd, does the \u003ccode\u003eplatform redeploy\u003c/code\u003e command also trigger a rebuild?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/what-is-the-difference-between-a-rebuild-and-a-redeploy/329",
        "relurl": "/t/what-is-the-difference-between-a-rebuild-and-a-redeploy/329"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "3d7f1cd4cb06f504ee2be52b758dc5878d5ca5ee",
        "title": "How can I connect an external tool to my database?",
        "description": "",
        "text": "\u003cp\u003eHow would I connect an external tool such as dbeaver / datagrip / … to my database ?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-can-i-connect-an-external-tool-to-my-database/222",
        "relurl": "/t/how-can-i-connect-an-external-tool-to-my-database/222"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "88877e4adc233bfb082f21c73f305ee349f13335",
        "title": "I need to connect to a VPN endpoint. What are my options?",
        "description": "",
        "text": "\u003cp\u003eI need two types of connections to a server only available through a VPN:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eOne is a real-time http call\u003c/li\u003e\n\u003cli\u003eThe other is a cron every night that uploads a file to a FTP server.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIs there a way to handle that on \u003ca href=\"http://Platform.sh\"\u003ePlatform.sh\u003c/a\u003e ?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/i-need-to-connect-to-a-vpn-endpoint-what-are-my-options/236",
        "relurl": "/t/i-need-to-connect-to-a-vpn-endpoint-what-are-my-options/236"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "7e16ae0fd41457675399c236d947c8068bfb3f10",
        "title": "What is the right way to run multiple processes from my start command?",
        "description": "",
        "text": "\u003cp\u003eI’ve read \u003ca href=\"https://docs.platform.sh/configuration/app/web.html#commands\"\u003ein the docs\u003c/a\u003e that I shouldn’t background a start process, as this will cause the supervisor process to start a second copy, but is it possible to run multiple processes from the start command? What is the right way to do this?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/what-is-the-right-way-to-run-multiple-processes-from-my-start-command/224",
        "relurl": "/t/what-is-the-right-way-to-run-multiple-processes-from-my-start-command/224"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "2f48bf1762fa4bfe846cda2fae003701189a0a89",
        "title": "How can I make custom 404 pages?",
        "description": "",
        "text": "\u003cp\u003eI’d like to serve my own HTML for 404 (and other HTTP codes).\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-can-i-make-custom-404-pages/198",
        "relurl": "/t/how-can-i-make-custom-404-pages/198"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "38098a5d0e136946b96fbb9986147e3c2ff06cef",
        "title": "Can I point my apex (naked) domain to Platform.sh if I'm using Amazon Route 53 to manage DNS?",
        "description": "",
        "text": "\u003cp\u003eRoute 53 isn’t listed here… \u003ca href=\"https://docs.platform.sh/golive/steps/dns.html#dns-management-and-apex-domains\"\u003ehttps://docs.platform.sh/golive/steps/dns.html#dns-management-and-apex-domains\u003c/a\u003e\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/can-i-point-my-apex-naked-domain-to-platform-sh-if-im-using-amazon-route-53-to-manage-dns/310",
        "relurl": "/t/can-i-point-my-apex-naked-domain-to-platform-sh-if-im-using-amazon-route-53-to-manage-dns/310"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "ef615bcf478549da087594d0990db5535ef14f1d",
        "title": "(How) Can I change the \"Code base template\" after purchasing a plan?",
        "description": "",
        "text": "\u003cp\u003eWhen starting a new project, I’m not sure which template I should be using, yet I have to commit to choosing one before purchasing my plan.\u003cbr\u003e\nCan I try out different templates later under the same plan? How would I do that?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-can-i-change-the-code-base-template-after-purchasing-a-plan/241",
        "relurl": "/t/how-can-i-change-the-code-base-template-after-purchasing-a-plan/241"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "82c7c3758aa276d11a649ec3f755e52d5c337fea",
        "title": "Why is the .platform.app.yaml file separate from the .platform folder?",
        "description": "",
        "text": "\u003cp\u003eWhy do we have: .platform.* files and also a \u003ccode\u003e.platform\u003c/code\u003e folder?\u003cbr\u003e\nI mean, why not everything in the same folder?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/why-is-the-platform-app-yaml-file-separate-from-the-platform-folder/281",
        "relurl": "/t/why-is-the-platform-app-yaml-file-separate-from-the-platform-folder/281"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "661d042742c2093406e89ba3537ab618697ae240",
        "title": "Is there a way to do the equivalent of \"screen\" on platform.sh?",
        "description": "",
        "text": "\u003cp\u003eI need to import a lot of data in my database, it’s a very long process.\u003cbr\u003e\nWhat can I use since \u003ccode\u003escreen\u003c/code\u003e or \u003ccode\u003etmux\u003c/code\u003e seem to be absent?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/is-there-a-way-to-do-the-equivalent-of-screen-on-platform-sh/252",
        "relurl": "/t/is-there-a-way-to-do-the-equivalent-of-screen-on-platform-sh/252"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "3b03b2e3d54d1c63e3ccf7f0338d46a5dad869e4",
        "title": "How can I remove the \"sent via platform.sh\" in my emails",
        "description": "",
        "text": "\u003cp\u003eWhen sending email from platformsh the recipient gets a ‘via platformsh’ appended. I understand platformsh uses sendgrid. How should i configure my domain so I don’t get the ‘via’ platformsh message?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-can-i-remove-the-sent-via-platform-sh-in-my-emails/263",
        "relurl": "/t/how-can-i-remove-the-sent-via-platform-sh-in-my-emails/263"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "b8d2d0995cc2e89f16860501f1bbee7dea12b087",
        "title": "How can I receive a notification if one of my services (eg. MariaDB) dies?",
        "description": "",
        "text": "\u003cp\u003eI’d like to get an alert if a service dies or is unreachable.\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-can-i-receive-a-notification-if-one-of-my-services-eg-mariadb-dies/164",
        "relurl": "/t/how-can-i-receive-a-notification-if-one-of-my-services-eg-mariadb-dies/164"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "e69213f35a82db31e0c798f8dbbf567ef01acc4e",
        "title": "How can I expose non-80/443 TCP port to the Internet?",
        "description": "",
        "text": "\u003cp\u003eMy mobile application needs to talk to a service running on Platform via non-80/443 TCP port. How could I expose that port?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-can-i-expose-non-80-443-tcp-port-to-the-internet/256",
        "relurl": "/t/how-can-i-expose-non-80-443-tcp-port-to-the-internet/256"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "96b4db735287085d0211042db7a16bc72fd7fca5",
        "title": "How are mounts in .platform.app.yaml sized?",
        "description": "",
        "text": "\u003cp\u003eIs everything OK as long as the total size of the mounts is less than the value in the \u003ccode\u003edisk\u003c/code\u003e directive?\u003cbr\u003e\n\u003ca href=\"https://docs.platform.sh/configuration/app/storage.html#mounts\" class=\"onebox\" target=\"_blank\"\u003ehttps://docs.platform.sh/configuration/app/storage.html#mounts\u003c/a\u003e\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-are-mounts-in-platform-app-yaml-sized/157",
        "relurl": "/t/how-are-mounts-in-platform-app-yaml-sized/157"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "9dc93dc80b9c6dab43079e136e018355a37faff5",
        "title": "Why should I use Platform.sh over AWS?",
        "description": "",
        "text": "\u003cp\u003eWhat are the benefits of using \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e instead?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/why-should-i-use-platform-sh-over-aws/314",
        "relurl": "/t/why-should-i-use-platform-sh-over-aws/314"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "1dd456534b116946a2f4e5c08ec4bc634e91c33f",
        "title": "What is Git? How to use it?",
        "description": "",
        "text": "\u003cp\u003eWhat is Git and how could I use it to upload my website?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/what-is-git-how-to-use-it/254",
        "relurl": "/t/what-is-git-how-to-use-it/254"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "b9a1f0d901c6b6e5bc240f275728588d869d2407",
        "title": "Where could I submit feature request?",
        "description": "",
        "text": "\u003cp\u003eI have some features in mind that would like to see on \u003ca href=\"http://Platform.sh\"\u003ePlatform.sh\u003c/a\u003e, where could I submit the feature request?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/where-could-i-submit-feature-request/257",
        "relurl": "/t/where-could-i-submit-feature-request/257"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "74b7348745133495cb8d456b058a272167c0e156",
        "title": "How do I fix `fatal: the remote end hung up unexpectedly` while pushing from a GitLab pipeline to Platform.sh?",
        "description": "",
        "text": "\u003cp\u003eWhile pushing to Platform git repository from our GitLab runner, the pipeline fails with the following error: \u003ccode\u003efatal: the remote end hung up unexpectedly\u003c/code\u003e.\u003cbr\u003e\nHow can I fix that?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-do-i-fix-fatal-the-remote-end-hung-up-unexpectedly-while-pushing-from-a-gitlab-pipeline-to-platform-sh/491",
        "relurl": "/t/how-do-i-fix-fatal-the-remote-end-hung-up-unexpectedly-while-pushing-from-a-gitlab-pipeline-to-platform-sh/491"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "060b37643a19335e1f31453d82b701e3ff02d654",
        "title": "Is there a public product roadmap?",
        "description": "",
        "text": "\u003cp\u003eDo you have a public product roadmap?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/is-there-a-public-product-roadmap/258",
        "relurl": "/t/is-there-a-public-product-roadmap/258"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "4a1a5a0e3a0079b0eb55763c9e0dc392c293ba02",
        "title": "How much storage can I add to my project?",
        "description": "",
        "text": "\u003cp\u003eHow much do I get by default, and how much can I add?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-much-storage-can-i-add-to-my-project/228",
        "relurl": "/t/how-much-storage-can-i-add-to-my-project/228"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "d328ee08f5f65726b008ef0a06045d3fead0f110",
        "title": "How can I see the status of a bug?",
        "description": "",
        "text": "\u003cp\u003eI opened a ticket a while ago for a problem and received the reply that my problem is a known bug and will be fixed in the future. How can I track the status of my bug ? will I be informed when it’s fixed somehow ?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-can-i-see-the-status-of-a-bug/260",
        "relurl": "/t/how-can-i-see-the-status-of-a-bug/260"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "16ad6d527398bd989cc45b9a12d59c8e927e2674",
        "title": "Is there a way to fail a build when one of the build hooks throws an error?",
        "description": "",
        "text": "\u003cp\u003eIn my case I want to use npm clean-install instead of npm install to ensure that my package-lock and my package.json have not diverged.\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/is-there-a-way-to-fail-a-build-when-one-of-the-build-hooks-throws-an-error/366",
        "relurl": "/t/is-there-a-way-to-fail-a-build-when-one-of-the-build-hooks-throws-an-error/366"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "cb6205bb5e44b2d51b9fef2baccf94bc825db67c",
        "title": "Is my built code counted against my global plan storage?",
        "description": "",
        "text": "\u003cp\u003eIf my plan has 5GB storage, and my built code takes up 500K, does that get taken off of my available storage (5GB)?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/is-my-built-code-counted-against-my-global-plan-storage/163",
        "relurl": "/t/is-my-built-code-counted-against-my-global-plan-storage/163"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "bbf5e031a9b9509037da12cc27e589fa3d34445f",
        "title": "What is the routes.yaml max file size?",
        "description": "",
        "text": "\u003cp\u003eIs it a number of routes? Characters? File size?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/what-is-the-routes-yaml-max-file-size/185",
        "relurl": "/t/what-is-the-routes-yaml-max-file-size/185"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "d6fe6c4e416d64bc77662aa45cb656c386ad57df",
        "title": "Can I SSH into my website?",
        "description": "",
        "text": "\u003cp\u003eCan I SSH into my website? How?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/can-i-ssh-into-my-website/225",
        "relurl": "/t/can-i-ssh-into-my-website/225"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "35e665e5efb1489c0d07cb1637df11b054233e1f",
        "title": "Can I just have my whole project read / write and serve my PHP website from here?",
        "description": "",
        "text": "\u003cp\u003eHello,\u003c/p\u003e\n\u003cp\u003eI feel that having everything read-only by default prevents me from working fast enough - can I just make a mount to / and rsync then serve my PHP website from here, so I can open an editor and make my changes directly there?\u003c/p\u003e\n\u003cp\u003eThanks!\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/can-i-just-have-my-whole-project-read-write-and-serve-my-php-website-from-here/245",
        "relurl": "/t/can-i-just-have-my-whole-project-read-write-and-serve-my-php-website-from-here/245"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "57fe61a78b87fb2b672f70f12efde2fbee8318fd",
        "title": "More production environments on the project",
        "description": "",
        "text": "\u003cp\u003eIs it possible to have different production environments on the same project?\u003cbr\u003e\nOr only master branch can go live?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/more-production-environments-on-the-project/250",
        "relurl": "/t/more-production-environments-on-the-project/250"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "c1f6700ce2c7ca461e446401f23e7d27e1bd6e44",
        "title": "What does it mean when my environment has a \"dirty\" status?",
        "description": "",
        "text": "\u003cp\u003eAs opposed to “active”?\u003c/p\u003e",
        "section": "Questions \u0026 Answers",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/what-does-it-mean-when-my-environment-has-a-dirty-status/175",
        "relurl": "/t/what-does-it-mean-when-my-environment-has-a-dirty-status/175"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "1840f7a2235edbb4b002cf72a382452660db85e9",
        "title": "Spring and Platform.sh Getting started",
        "description": "",
        "text": "\u003ch1\u003eDeploy Friday: E09 Spring Framework\u003c/h1\u003e\n\u003cdiv class=\"lazyYT\" data-youtube-id=\"Y5dcDyeRlDQ\" data-youtube-title=\"Deploy Friday: E09\" data-width=\"480\" data-height=\"270\" data-parameters=\"feature=oembed\u0026amp;wmode=opaque\"\u003e\u003c/div\u003e\n\u003cp\u003eThe Spring Framework is an application framework and inversion of control container for the Java platform.\u003c/p\u003e\n\u003cp\u003eTry Spring: \u003ca href=\"https://github.com/platformsh-templates/spring-mvc-maven-mongodb\" rel=\"nofollow noopener\"\u003ehttps://github.com/platformsh-templates/spring-mvc-maven-mongodb\u003c/a\u003e\u003c/p\u003e\n\u003ch2\u003eArticles\u003c/h2\u003e\n\u003cdiv class=\"md-table\"\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eArticle\u003c/th\u003e\n\u003cth\u003eLink\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://dzone.com/articles/introduction-to-spring-data-mongodb-reactive-and-h\" rel=\"nofollow noopener\"\u003eIntro to Spring Data MongoDB Reactive and How to Move It to the Cloud\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://github.com/platformsh/java-quick-start/tree/master/spring/spring-mongodb-reactive\" rel=\"nofollow noopener\"\u003eCode\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://dzone.com/articles/introduction-of-spring-webflux-and-how-to-apply-cl\" rel=\"nofollow noopener\"\u003eIntroduction of Spring Webflux and How to Apply Cloud on It\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://github.com/platformsh/java-quick-start/tree/master/spring/spring-webflux\" rel=\"nofollow noopener\"\u003eCode\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://platform.sh/blog/2019/spring-data-redis-in-the-cloud/\"\u003eSpring Data Redis in the cloud\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://github.com/platformsh/java-quick-start/tree/master/spring/spring-boot-maven-redis\" rel=\"nofollow noopener\"\u003eCode\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://platform.sh/blog/2019/simplify-your-script-build-with-gradle/\"\u003eSimplify your script build with Gradle\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://github.com/platformsh-templates/spring-boot-gradle-mysql\" rel=\"nofollow noopener\"\u003ecode\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://platform.sh/blog/2019/elasticsearch-vs-solr-have-both-with-spring-data-and-platform.sh/\"\u003eElasticsearch vs. Solr: have both with Spring Data and Platform.sh\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\n\u003ca href=\"https://github.com/platformsh/java-quick-start/tree/master/spring/spring-mvc-maven-elasticsearch\" rel=\"nofollow noopener\"\u003eElasticsearch\u003c/a\u003e and \u003ca href=\"https://github.com/platformsh/java-quick-start/tree/master/spring/spring-mvc-maven-solr\" rel=\"nofollow noopener\"\u003eSolr\u003c/a\u003e\n\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://platform.sh/blog/2019/spring-mvc-and-mongodb-a-match-made-in-platform.sh-heaven/\"\u003eSpring MVC and MongoDB: a match made in Platform.sh heaven\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003ca href=\"https://github.com/platformsh/java-quick-start/tree/master/spring/spring-mvc-maven-mongodb\" rel=\"nofollow noopener\"\u003eCode\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://platform.sh/blog/2019/java-hello-world-at-platform.sh/\"\u003eJava: Hello, World! at Platform.sh\u003c/a\u003e\u003c/td\u003e\n\u003ctd\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e",
        "section": "Tutorials",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/spring-and-platform-sh-getting-started/583",
        "relurl": "/t/spring-and-platform-sh-getting-started/583"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "2441b1d1ee6e21d690f144f9dc9e040e15177750",
        "title": "Quarkus and Platform.sh Getting started",
        "description": "",
        "text": "\u003ch1\u003eDeploy Friday: E06 Quarkus Supersonic Subatomic Java\u003c/h1\u003e\n\u003cdiv class=\"lazyYT\" data-youtube-id=\"PLsaop5M14M\" data-youtube-title=\"Deploy Friday: E06 Quarkus Supersonic Subatomic Java\" data-width=\"480\" data-height=\"270\" data-parameters=\"feature=oembed\u0026amp;wmode=opaque\"\u003e\u003c/div\u003e\n\u003cp\u003eQuarkusIO, the Supersonic Subatomic Java, promises to deliver small artifacts, extremely fast boot time, and lower time-to-first-request.\u003c/p\u003e\n\u003cp\u003eTry Quarkus: \u003ca href=\"https://github.com/platformsh-templates/quarkus\" rel=\"nofollow noopener\"\u003ehttps://github.com/platformsh-templates/quarkus\u003c/a\u003e\u003c/p\u003e\n\u003ch2\u003eArticles\u003c/h2\u003e\n\u003cdiv class=\"md-table\"\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eArticle\u003c/th\u003e\n\u003cth style=\"text-align:right\"\u003eLinks\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://dzone.com/articles/deploy-quarkus-faster-in-the-cloud-with-platformsh-3\" rel=\"nofollow noopener\"\u003ePanache MongoDB\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:right\"\u003e\u003ca\u003eSource\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://dzone.com/articles/deploy-quarkus-faster-in-the-cloud-with-platformsh-2\" rel=\"nofollow noopener\"\u003eCommand Mode Application\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:right\"\u003e\u003ca\u003eSource\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://dzone.com/articles/deploy-quarkus-faster-in-the-cloud-with-platformsh-1\" rel=\"nofollow noopener\"\u003eHibernate Search With Elasticsearch\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:right\"\u003e\u003ca href=\"https://github.com/platformsh-examples/quarkus/tree/master/elasticsearch\" rel=\"nofollow noopener\"\u003eSource\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://dzone.com/articles/deploy-quarkus-faster-in-the-cloud-with-platformsh\" rel=\"nofollow noopener\"\u003ePostgreSQL With Panache\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:right\"\u003e\u003ca href=\"https://github.com/platformsh-examples/quarkus/tree/master/panache\" rel=\"nofollow noopener\"\u003eSource\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://dzone.com/articles/quarkus-supersonic-subatomic-java-deploy-faster-in\" rel=\"nofollow noopener\"\u003ePostgreSQL with JPA\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:right\"\u003e\u003ca href=\"https://github.com/platformsh-examples/quarkus/tree/master/jpa\" rel=\"nofollow noopener\"\u003eSource\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ca href=\"https://dzone.com/articles/quarkus-supersonic-subatomic-java-goes-faster-in-t\" rel=\"nofollow noopener\"\u003eHello World\u003c/a\u003e\u003c/td\u003e\n\u003ctd style=\"text-align:right\"\u003e\u003ca href=\"https://github.com/platformsh-templates/quarkus\" rel=\"nofollow noopener\"\u003eSource\u003c/a\u003e\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e",
        "section": "Tutorials",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/quarkus-and-platform-sh-getting-started/564",
        "relurl": "/t/quarkus-and-platform-sh-getting-started/564"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "09eae73ed02dc174db655f7e50e53d0c5e2b3940",
        "title": "Hokus is an open-source CMS for Hugo - completely free to use",
        "description": "",
        "text": "\u003cp\u003eDevelopers love Hugo because of its astonishing speed.\u003cbr\u003e\nContent editors love Hokus because it brings the same speed benefit while hiding the complexity of editing raw files to edit a website.\u003cbr\u003e\nWhen you save your content, you can see your updated website in your browser almost instantly.\u003c/p\u003e\n\u003cp\u003eHokus is a multi-platform desktop application (Windows, macOS, and Linux are supported). Because it runs on your computer, you can use it even when you are offline.\u003c/p\u003e\n\u003cp\u003eUnlike Netlify, Hokus does not assume any infrastructure vendor, meaning that you are free to move your website to another host without losing the user interface you are used to.\u003c/p\u003e\n\u003cp\u003eThis tutorial will show how to install Hokus, run a website locally and then move it to the cloud easily with \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/julianoappelklein/hokus/releases\" rel=\"nofollow noopener\"\u003eDownload and install Hokus in your OS\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://docs.platform.sh/gettingstarted/own-code/create-project.html\"\u003eCreate a new Platform.sh Project\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/platformsh-templates/hugo\" rel=\"nofollow noopener\"\u003eYou have the option to create and deploy directly on Platform.sh from the Repository\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/platformsh-templates/hugo\" rel=\"nofollow noopener\"\u003eYou have the option to fork the project and integrate\u003c/a\u003e it with \u003ca href=\"https://docs.platform.sh/administration/integrations/github.html\"\u003eGithub and Platform.sh\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDownload the project with a \u003ccode\u003egit clone\u003c/code\u003e from the Git Repository that you wish.\u003cbr\u003e\n\u003cimg src=\"https://community.platform.sh/uploads/default/original/1X/c0c7df75c194e3f7e1940ed2979b59ee1cdcb21f.png\" alt=\"image2\" data-base62-sha1=\"rvpTNFNBB5dWDUVrnZb84mG2rRd\" width=\"463\" height=\"148\"\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCick in new Site, plus on the left button to create a new project.\u003cbr\u003e\n\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://community.platform.sh/uploads/default/original/1X/41d507beda8230e89a9f0ecbfbab746e49341d90.png\" data-download-href=\"https://community.platform.sh/uploads/default/41d507beda8230e89a9f0ecbfbab746e49341d90\" title=\"image3.png\"\u003e\u003cimg src=\"https://community.platform.sh/uploads/default/optimized/1X/41d507beda8230e89a9f0ecbfbab746e49341d90_2_690x392.png\" alt=\"image3\" data-base62-sha1=\"9onrWRGzqW9QU2fLmZFbfQyUxZC\" width=\"690\" height=\"392\" srcset=\"https://community.platform.sh/uploads/default/optimized/1X/41d507beda8230e89a9f0ecbfbab746e49341d90_2_690x392.png, https://community.platform.sh/uploads/default/optimized/1X/41d507beda8230e89a9f0ecbfbab746e49341d90_2_1035x588.png 1.5x, https://community.platform.sh/uploads/default/optimized/1X/41d507beda8230e89a9f0ecbfbab746e49341d90_2_1380x784.png 2x\" data-small-upload=\"https://community.platform.sh/uploads/default/optimized/1X/41d507beda8230e89a9f0ecbfbab746e49341d90_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\n\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eimage3.png\u003c/span\u003e\u003cspan class=\"informations\"\u003e1526×868 40.4 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\n\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNow we have a Site configured, let’s use it! (keep in mind that Hokus will assume a default configuration for your website and to add more fields to your forms, or new forms, you need to edit the file hokus.toml).\u003cbr\u003e\nSelect the website you just created and select the workspace “source” Click source -\u0026gt; click select -\u0026gt; then in sidebar.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://community.platform.sh/uploads/default/original/1X/672fe35c6168598b8817f31321be9d8b9581fa90.png\" data-download-href=\"https://community.platform.sh/uploads/default/672fe35c6168598b8817f31321be9d8b9581fa90\" title=\"image4.png\"\u003e\u003cimg src=\"https://community.platform.sh/uploads/default/optimized/1X/672fe35c6168598b8817f31321be9d8b9581fa90_2_690x384.png\" alt=\"image4\" data-base62-sha1=\"eIPMjCyop4h6ZzQAzrl2KNV0gKY\" width=\"690\" height=\"384\" srcset=\"https://community.platform.sh/uploads/default/optimized/1X/672fe35c6168598b8817f31321be9d8b9581fa90_2_690x384.png, https://community.platform.sh/uploads/default/optimized/1X/672fe35c6168598b8817f31321be9d8b9581fa90_2_1035x576.png 1.5x, https://community.platform.sh/uploads/default/optimized/1X/672fe35c6168598b8817f31321be9d8b9581fa90_2_1380x768.png 2x\" data-small-upload=\"https://community.platform.sh/uploads/default/optimized/1X/672fe35c6168598b8817f31321be9d8b9581fa90_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\n\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eimage4.png\u003c/span\u003e\u003cspan class=\"informations\"\u003e1496×833 28.5 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\n\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003col start=\"7\"\u003e\n\u003cli\u003e\n\u003cp\u003eOn the left, you’ll see both the \u003ccode\u003ePost\u003c/code\u003e and \u003ccode\u003eMain Config\u003c/code\u003e option. If your current post is not showing, beware of the folder structure. We also have the option to customize it with the \u003ccode\u003ehokus.toml\u003c/code\u003e file. On this repository we have the posts under the \u003ccode\u003epost\u003c/code\u003e structure; therefore, we went in the \u003ccode\u003ecollections\u003c/code\u003e and changed the folder line: \u003ccode\u003efolder = \"content/post/\"\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNow it’s time to run your website locally. ON the right sidebar, click in the “play” icon, and select the default option. Your browser will open showing your website!\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eClick in the Posts button. You have the option to create, edit and delete posts.Open an existing post or create a new one.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://community.platform.sh/uploads/default/original/1X/6984f91e3f659b7917e81eb8120a3f98c69cebef.png\" data-download-href=\"https://community.platform.sh/uploads/default/6984f91e3f659b7917e81eb8120a3f98c69cebef\" title=\"image6.png\"\u003e\u003cimg src=\"https://community.platform.sh/uploads/default/optimized/1X/6984f91e3f659b7917e81eb8120a3f98c69cebef_2_690x370.png\" alt=\"image6\" data-base62-sha1=\"f3t1JAlEvMFQoSzn9obwtv2di2j\" width=\"690\" height=\"370\" srcset=\"https://community.platform.sh/uploads/default/optimized/1X/6984f91e3f659b7917e81eb8120a3f98c69cebef_2_690x370.png, https://community.platform.sh/uploads/default/optimized/1X/6984f91e3f659b7917e81eb8120a3f98c69cebef_2_1035x555.png 1.5x, https://community.platform.sh/uploads/default/optimized/1X/6984f91e3f659b7917e81eb8120a3f98c69cebef_2_1380x740.png 2x\" data-small-upload=\"https://community.platform.sh/uploads/default/optimized/1X/6984f91e3f659b7917e81eb8120a3f98c69cebef_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\n\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eimage6.png\u003c/span\u003e\u003cspan class=\"informations\"\u003e1999×1072 140 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\n\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003col start=\"10\"\u003e\n\u003cli\u003e\n\u003cp\u003eAll the posts work with Markdown, so you can add bullets or pictures with Markdown After editing the post, click on the Save button (bottom right corner). Your changes will update your website in your browser instantly!\u003cbr\u003e\n\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://community.platform.sh/uploads/default/original/1X/f949075cbc28d7222c0aceef32d961de56dfa94a.png\" data-download-href=\"https://community.platform.sh/uploads/default/f949075cbc28d7222c0aceef32d961de56dfa94a\" title=\"image1.png\"\u003e\u003cimg src=\"https://community.platform.sh/uploads/default/optimized/1X/f949075cbc28d7222c0aceef32d961de56dfa94a_2_690x192.png\" alt=\"image1\" data-base62-sha1=\"zzhlUZv22uSQFNLoknut4XpEsTo\" width=\"690\" height=\"192\" srcset=\"https://community.platform.sh/uploads/default/optimized/1X/f949075cbc28d7222c0aceef32d961de56dfa94a_2_690x192.png, https://community.platform.sh/uploads/default/optimized/1X/f949075cbc28d7222c0aceef32d961de56dfa94a_2_1035x288.png 1.5x, https://community.platform.sh/uploads/default/optimized/1X/f949075cbc28d7222c0aceef32d961de56dfa94a_2_1380x384.png 2x\" data-small-upload=\"https://community.platform.sh/uploads/default/optimized/1X/f949075cbc28d7222c0aceef32d961de56dfa94a_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\n\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eimage1.png\u003c/span\u003e\u003cspan class=\"informations\"\u003e1999×558 60.3 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\n\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAre you happy with what you have? Let’s move it to the cloud with \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e. We need to set the \u003ca href=\"https://docs.platform.sh/configuration/app-containers.html\"\u003eapplication file\u003c/a\u003e and the \u003ca href=\"https://docs.platform.sh/configuration/routes.html\"\u003eroute that\u003c/a\u003e you can see respectively.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eFile: \u003ccode\u003e.platform.app.yaml\u003c/code\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003e# .platform.app.yaml\n\n# The name of this application, which must be unique within a project.\nname: 'app'\n\n# The type key specifies the language and version for your application.\ntype: golang:1.14\n\n# The hooks that will be triggered when the package is deployed.\nhooks:\n    # Build hooks can modify the application files on disk but not access any services like databases.\n    build: !include\n      type: string\n      path: build.sh\n\n# The size of the persistent disk of the application (in MB).\ndisk: 5120\n\n# The configuration of the application when it is exposed to the web.\nweb:\n    locations:\n        '/':\n            # The public directory of the application relative to its root.\n            root: 'public'\n            index: ['index.html']\n            scripts: false\n            allow: true\n            expires: 1d\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode\u003e   File `.platform/routes.yaml`\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003e\"https://{default}/\":\n  type: upstream\n  upstream: \"app:http\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003col start=\"12\"\u003e\n\u003cli\u003e\n\u003cp\u003eThe last step is to push your changes to a remote repository.\u003cbr\u003e\n\u003ccode\u003egit push origin master\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDone, Hugo, Hokus, and \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e at your service!\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://community.platform.sh/uploads/default/original/1X/68458a2ccb5d235315d4399b1cf64a0c3e93355a.png\" data-download-href=\"https://community.platform.sh/uploads/default/68458a2ccb5d235315d4399b1cf64a0c3e93355a\" title=\"image5.png\"\u003e\u003cimg src=\"https://community.platform.sh/uploads/default/optimized/1X/68458a2ccb5d235315d4399b1cf64a0c3e93355a_2_494x500.png\" alt=\"image5\" data-base62-sha1=\"eSqDZWdad7YuFRblqsRgEK7vi5A\" width=\"494\" height=\"500\" srcset=\"https://community.platform.sh/uploads/default/optimized/1X/68458a2ccb5d235315d4399b1cf64a0c3e93355a_2_494x500.png, https://community.platform.sh/uploads/default/optimized/1X/68458a2ccb5d235315d4399b1cf64a0c3e93355a_2_741x750.png 1.5x, https://community.platform.sh/uploads/default/optimized/1X/68458a2ccb5d235315d4399b1cf64a0c3e93355a_2_988x1000.png 2x\" data-small-upload=\"https://community.platform.sh/uploads/default/optimized/1X/68458a2ccb5d235315d4399b1cf64a0c3e93355a_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\n\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eimage5.png\u003c/span\u003e\u003cspan class=\"informations\"\u003e1018×1029 100 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\n\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.hokuscms.com/\" rel=\"nofollow noopener\"\u003eHokus CMS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/hokus-cms\" rel=\"nofollow noopener\"\u003eSample source code\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "Tutorials",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/hokus-is-an-open-source-cms-for-hugo-completely-free-to-use/551",
        "relurl": "/t/hokus-is-an-open-source-cms-for-hugo-completely-free-to-use/551"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "0c14095828f6a0fe91313d100b23ad19455292ec",
        "title": "Multiple Applications (Tomcat)",
        "description": "",
        "text": "\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e supports building multiple applications per project (for example, RESTful web services with a front-end, or a main website and a blog).\u003c/p\u003e\n\u003cp\u003eAll of the applications share a common configuration through the files present in the \u003ccode\u003e.platform/\u003c/code\u003e folder at the root of the Git repository. Every application exists in its own subdirectory, and each of them contain its own application configuration via a \u003ccode\u003e.platform.app.yaml\u003c/code\u003e file, so that your directory structure looks something like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e$ ls -a\n.git/\n.platform/\n  routes.yaml\n  services.yaml\napp/\n  .platform.app.yaml\n  pom.xml\n    [...]\napp2/\n  .platform.app.yaml\n  pom.xml\n    [...]\npom.xml\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhen you push via Git, \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e will build each application separately. Only the application(s) that have been modified will be rebuilt.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/platformsh-examples/tomcat-multi-app\" rel=\"nofollow noopener\"\u003eSample code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/configuration/app/multi-app.html\"\u003eDocumentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "Tutorials",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/multiple-applications-tomcat/468",
        "relurl": "/t/multiple-applications-tomcat/468"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "dda9e1a0e25a119b8f5617658617061ff05295f6",
        "title": "Tips for running Java on Platform.sh",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eThis tutorial will explain some Java commands and some recommendations to optimize the process of running your Java applications safety on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003ch2\u003eAssumptions\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eYou either have a Java application that you want to run on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e, or you already have a Java application already running on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eA text editor of your choice.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003cp\u003eOnce you have your Java application running on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e, there are several steps you should take to optimize the application runtime.\u003c/p\u003e\n\u003ch3\u003eMinimum requirement (Memory)\u003c/h3\u003e\n\u003cp\u003eThe first one is \u003ccode\u003eXmx\u003c/code\u003e, which defines the maximum size that the JVM can use. The optimal value can be derived from the application’s generated configuration files and will scale with your container size automatically.\u003c/p\u003e\n\u003cp\u003eTo extract the appropriate value on the command line, use \u003ccode\u003e$(jq .info.limits.memory /run/config.json)\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eThe second parameter is \u003ccode\u003eExitOnOutOfMemoryError\u003c/code\u003e.  When you enable this option, the JVM exits on the first occurrence of an out-of-memory error.  \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e will restart the application automatically.\u003c/p\u003e\n\u003cp\u003eThese are the basic recommended parameters for running a Java application. So, the command will start with:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ejava -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError //The rest of the arguments and the jar file.\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eGarbage collector (Optional)\u003c/h3\u003e\n\u003cp\u003eWhen migrating the application to a cloud environment, it is often essential to analyze the Garbage Collector’s log and behavior. For this, there are two options:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePlacing the log into the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e \u003ccode\u003eapp.log\u003c/code\u003e file (which captures \u003ccode\u003eSTDOUT\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eCreating a log file specifically for the GC.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eTo use the \u003ccode\u003eSTDOUT\u003c/code\u003e log, you can add the parameter \u003ccode\u003e-XX: + PrintGCDetails\u003c/code\u003e, E.g.:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ejava -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError -XX:+PrintGCDetails //The rest of the arguments and the jar file.\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eJava supports a number of different garbage collection strategies.  Which one is optimal for your application will vary depending on your available memory, Java version, and application profile.  Determining which is best for your application is out of scope, but the main options and how to enable them are:\u003c/p\u003e\n\u003cdiv class=\"md-table\"\u003e\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eName\u003c/th\u003e\n\u003cth style=\"text-align:center\"\u003eCommand  Flag\u003c/th\u003e\n\u003cth style=\"text-align:right\"\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003eSerial Garbage Collector\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003e-XX:+UseSerialGC\u003c/td\u003e\n\u003ctd style=\"text-align:right\"\u003eThis is the simplest GC implementation, as it basically works with a single thread.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eParallel Garbage Collector\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003e-XX:+UseParallelGC\u003c/td\u003e\n\u003ctd style=\"text-align:right\"\u003eUnlike Serial Garbage Collector, this uses multiple threads for managing heap space. But it also freezes other application threads while performing GC.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eCMS Garbage Collector\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003e-XX:+USeParNewGC\u003c/td\u003e\n\u003ctd style=\"text-align:right\"\u003eThe Concurrent Mark Sweep (CMS) implementation uses multiple garbage collector threads for garbage collection. It’s for applications that prefer shorter garbage collection pauses, and that can afford to share processor resources with the garbage collector while the application is running.\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n\u003ctd\u003eG1 Garbage Collector\u003c/td\u003e\n\u003ctd style=\"text-align:center\"\u003e-XX:+UseG1GC\u003c/td\u003e\n\u003ctd style=\"text-align:right\"\u003eGarbage First, G1, is for applications running on multiprocessor machines with large memory space.\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\u003cp\u003eThe default stragtegy on Java 9 and later is G1.  The GC strategy to use can be set in the start line with:\u003c/p\u003e\n\u003ch4\u003eSerial\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ejava -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError -XX:+PrintGCDetails -XX:+UseSerialGC //The rest of the arguments and the jar file.\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4\u003eParallel Garbage Collector\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ejava -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError -XX:+PrintGCDetails -XX:+UseParallelGC //The rest of the arguments and the jar file.\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4\u003eCMS Garbage Collector\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ejava -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError -XX:+PrintGCDetails -XX:+USeParNewGC //The rest of the arguments and the jar file.\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4\u003eG1\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ejava -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError -XX:+PrintGCDetails -XX:+UseG1GC //The rest of the arguments and the jar file.\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003eJava 8 Optimization\u003c/h3\u003e\n\u003cp\u003eIdeally, all applications should run the latest LTS release of the JVM at least.  That is currently Java 11.  Java 11 has a number of performance improvements, particularly on container-based environments such as \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eHowever, in many cases, this is not possible.  If you are still running on Java 8 there are two additional considerations.\u003c/p\u003e\n\u003cp\u003eThe default garbage collector for Java 8 is Parallel GC.  In most cases G1 will offer better performance.  We recommend enabling it, as above.\u003c/p\u003e\n\u003cp\u003eFurthermore, there is the \u003ccode\u003eUseStringDeduplication\u003c/code\u003e flag which works to eliminate duplicate \u003ccode\u003eString\u003c/code\u003es within the GC process.  That flag can save between 13% to 30% of memory, depending on application. However, this can impact on the pause time of your app.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ejava -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+UseG1GC -XX:+UseStringDeduplication -XX:+ExitOnOutOfMemoryError -XX:+PrintGCDetails\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://community.platform.sh/t/java-memory-commands/481\"\u003eJava Memory Commands\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://community.platform.sh/t/how-to-migrate-my-java-application-to-platfrom-sh/529\"\u003eHow to Migrate my Java application to Platform.sh\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://community.platform.sh/t/garbage-collector-log/482\"\u003eGarbage Collector Log\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.oracle.com/en/java/javase/14/gctuning/introduction-garbage-collection-tuning.html#GUID-326EB4CF-8C8C-4267-8355-21AB04F0D304\" rel=\"nofollow noopener\"\u003eIntroduction to Garbage Collection Tuning\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "Tutorials",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/tips-for-running-java-on-platform-sh/531",
        "relurl": "/t/tips-for-running-java-on-platform-sh/531"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "eef2aafc2b60649d7d2d9fc2524852dce8152851",
        "title": "Java Memory commands",
        "description": "",
        "text": "\u003cp\u003eJava Heap space is used by the Java runtime to allocate memory to Objects and JRE classes. Whenever we create an object, it’s always created in the Heap space. This post, we’ll explain to how to set the memory size on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eGarbage Collection runs on the heap memory to free the memory used by objects that don’t have any reference. Any object created in the heap space has global access and can be referenced from anywhere in the application.\u003c/p\u003e\n\u003cp\u003eTo set the memory size on JVM on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e we need to append the memory settings with the Java startup parameter.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e has a command that returns the memory that is available with \u003ccode\u003e-$(jq .info.limits.memory /run/config.json)\u003c/code\u003e that value is on megabytes. As a recommendation, you can use the fine maximum JVM memory.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003eweb:\n    commands:\n        start: java -jar -Xmx$(jq .info.limits.memory /run/config.json)m target/microprofile-microbundle.jar --port $PORT\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eBelow, more arguments to set the memory:\u003c/p\u003e\n\u003ch2\u003e-Xmn size\u003c/h2\u003e\n\u003cp\u003eSets the initial and maximum size (in bytes) of the heap for the young generation (nursery). Append the letter k or K to indicate kilobytes, m or M to indicate megabytes, or g or G to indicate gigabytes. The young generation region of the heap is used for new objects. GC is performed in this region more often than in other regions. If the size for the young generation is too small, then a lot of minor garbage collections are performed. If the size is too large, then only full garbage collections are performed, which can take a long time to complete. Oracle recommends that you keep the size for the young generation greater than 25% and less than 50% of the overall heap size.\u003c/p\u003e\n\u003cp\u003e\u003cspan class=\"hashtag\"\u003e#-Xms\u003c/span\u003e size\u003c/p\u003e\n\u003cp\u003eSets the initial size (in bytes) of the heap. This value must be a multiple of 1024 and greater than 1 MB. Append the letter k or K to indicate kilobytes, m or M to indicate megabytes, g or G to indicate gigabytes.\u003c/p\u003e\n\u003ch2\u003e-Xmx size\u003c/h2\u003e\n\u003cp\u003eSpecifies the maximum size (in bytes) of the memory allocation pool in bytes. This value must be a multiple of 1024 and greater than 2 MB. Append the letter k or K to indicate kilobytes, m or M to indicate megabytes, and g or G to indicate gigabytes. The default value is chosen at runtime based on system configuration. For server deployments, -Xms and -Xmx are often set to the same value.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eAs mentioned, previously use the \u003ccode\u003e$(jq .info.limits.memory /run/config.json)\u003c/code\u003e to create the \u003cem\u003eXmx\u003c/em\u003e command. E.g.: \u003ccode\u003ejava -jar -Xmx$(jq .info.limits.memory /run/config.json)m\u003c/code\u003e\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch2\u003e-Xnoclassgc\u003c/h2\u003e\n\u003cp\u003eDisables garbage collection (GC) of classes. This can save some GC time, which shortens interruptions during the application run. When you specify -Xnoclassgc at startup, the class objects in the application are left untouched during GC and are always considered live.\u003c/p\u003e\n\u003ch2\u003e-Xss size\u003c/h2\u003e\n\u003cp\u003eSets the thread stack size (in bytes). Append the letter k or K to indicate KB, m or M to indicate MB, and g or G to indicate GB.\u003c/p\u003e\n\u003ch2\u003eExitOnOutOfMemoryError\u003c/h2\u003e\n\u003cp\u003eWhen you enable this option, the JVM exits on the first occurrence of an out-of-memory error. It can be used if you prefer restarting an instance of the JVM rather than handling out of memory errors.\u003c/p\u003e\n\u003ch2\u003eRecommended Java memory command at \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e\n\u003c/h2\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ejava -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError ...\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eGC Log activated\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ejava -jar -Xmx$(jq .info.limits.memory /run/config.json)m -XX:+ExitOnOutOfMemoryError -XX:+PrintGCDetails ...\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://community.platform.sh/t/garbage-collector-log/482\"\u003eGarbage Collector Log\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://docs.oracle.com/en/java/javase/11/tools/java.html#GUID-3B1CE181-CD30-4178-9602-230B800D4FAE\" rel=\"nofollow noopener\"\u003ehttps://docs.oracle.com/en/java/javase/11/tools/java.html#GUID-3B1CE181-CD30-4178-9602-230B800D4FAE\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "Tutorials",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/java-memory-commands/481",
        "relurl": "/t/java-memory-commands/481"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "c1b5b43e9322d5adfe76792220565f0760cafeb2",
        "title": "Garbage Collector Log",
        "description": "",
        "text": "\u003cp\u003eJava garbage collection is the process by which Java programs perform automatic memory management. This post, we’ll explain how to add the log in the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e application.\u003c/p\u003e\n\u003ch2\u003eHow to Generate GC Log File?\u003c/h2\u003e\n\u003cp\u003eIn order to understand the GC log, you first need to generate one. Passing the following system properties to your JVM would generate GC logs.\u003c/p\u003e\n\u003cp\u003eTo set the JVM log on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e we need to append it with the Java startup parameter.\u003c/p\u003e\n\u003cp\u003eE.g., To define the GC log. From your app’s \u003ca href=\"https://docs.platform.sh/configuration/app-containers.html\"\u003e.platform.app.yaml file\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003eweb:\n    commands:\n        start: java -jar -Xmx2048m -Xlog:gc*=debug:stdout:time,uptimemillis,tid target/microprofile-microbundle.jar --port $PORT\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eWhen you append the GC log, the next step is to check the information, the default file to the registry is on \u003ccode\u003e/tmp/log/app.log\u003c/code\u003e. Therefore you can check the GC information from the command below once you’re inside the application container.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003etail -f /tmp/log/app.log\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eTo access the machine through ssh, please check the PSH documentation:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://docs.platform.sh/development/ssh.html\" class=\"onebox\" target=\"_blank\"\u003ehttps://docs.platform.sh/development/ssh.html\u003c/a\u003e\u003c/p\u003e\n\u003ch2\u003e-XX:+PrintGC\u003c/h2\u003e\n\u003cp\u003eThe flag -XX:+PrintGC (or the alias -verbose:gc) activates the “simple” GC logging mode, which prints a line for every young generation GC and every full GC.\u003c/p\u003e\n\u003ch2\u003e-XX:+PrintGCDetails\u003c/h2\u003e\n\u003cp\u003eIf we use -XX:+PrintGCDetails instead of -XX:+PrintGC, we activate the “detailed” GC logging mode which differs depending on the GC algorithm used. We start by taking a look at the output produced by a young generation GC using the Throughput Collector.\u003c/p\u003e\n\u003ch2\u003eUnified JVM Logging\u003c/h2\u003e\n\u003cp\u003eJava 9 comes with a unified logging architecture (\u003ca href=\"http://openjdk.java.net/jeps/158\" rel=\"nofollow noopener\"\u003eJEP 158\u003c/a\u003e) that pipes a lot of messages that the JVM generates through the same mechanism, which can be configured with the -Xlog option.\u003c/p\u003e\n\u003cp\u003eE.g.: \u003ccode\u003e-Xlog:gc*=debug:stdout:time,uptimemillis,tid\u003c/code\u003e\u003c/p\u003e\n\u003ch2\u003e-Xloggc\u003c/h2\u003e\n\u003cp\u003eBy default the GC log is written to stdout. With -Xloggc: we may instead specify an output file. Note that this flag implicitly sets -XX:+PrintGC and -XX:+PrintGCTimeStamps as well. Still, I would recommend setting these flags explicitly if desired, in order to safeguard yourself against unexpected changes in new JVM versions.\u003c/p\u003e\n\u003ch2\u003eMigrate to Java 11\u003c/h2\u003e\n\u003cp\u003eThe benefits of using the latest LTS version are the increase of support to the containers, therefore, beyond the new APIs and security fixes, there is an increase of performance to run on GC.\u003c/p\u003e\n\u003ch2\u003eD Command-Line Options\u003c/h2\u003e\n\u003cp\u003eThis appendix describes some command-line options that can be useful when diagnosing problems with the Java HotSpot VM.\u003c/p\u003e\n\u003caside class=\"onebox whitelistedgeneric\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003cimg src=\"https://docs.oracle.com/sp_common/book-template/ohc-common/img/favicon.ico\" class=\"site-icon\" width=\"32\" height=\"32\"\u003e\n      \u003ca href=\"https://docs.oracle.com/en/java/javase/11/troubleshoot/command-line-options1.html#GUID-A84ECBFB-B6CF-44C3-B627-58BB509C8D05\" target=\"_blank\" rel=\"nofollow noopener\"\u003eOracle Help Center\u003c/a\u003e\n  \u003c/header\u003e\n  \u003carticle class=\"onebox-body\"\u003e\n    \n\n\u003ch3\u003e\u003ca href=\"https://docs.oracle.com/en/java/javase/11/troubleshoot/command-line-options1.html#GUID-A84ECBFB-B6CF-44C3-B627-58BB509C8D05\" target=\"_blank\" rel=\"nofollow noopener\"\u003eTroubleshooting Guide\u003c/a\u003e\u003c/h3\u003e\n\n\u003cp\u003eThis appendix describes some command-line options that can be useful when diagnosing problems with the Java HotSpot VM.\u003c/p\u003e\n\n\n  \u003c/article\u003e\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html\" rel=\"nofollow noopener\"\u003ehttps://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://stackify.com/what-is-java-garbage-collection/\" rel=\"nofollow noopener\"\u003ehttps://stackify.com/what-is-java-garbage-collection/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://blog.codefx.org/java/unified-logging-with-the-xlog-option/#What-Is-Unified-Logging\" rel=\"nofollow noopener\"\u003ehttps://blog.codefx.org/java/unified-logging-with-the-xlog-option/#What-Is-Unified-Logging\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://dzone.com/articles/understanding-garbage-collection-log\" rel=\"nofollow noopener\"\u003ehttps://dzone.com/articles/understanding-garbage-collection-log\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSee also\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eJava Memory arguments: \u003ca href=\"https://community.platform.sh/t/java-memory-commands/481\" class=\"inline-onebox\"\u003eJava Memory commands\u003c/a\u003e\n\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "Tutorials",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/garbage-collector-log/482",
        "relurl": "/t/garbage-collector-log/482"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "2d036908792920f9482048b80392348b07fcf747",
        "title": "Java Email at Platform.sh",
        "description": "",
        "text": "\u003cp\u003eElectronic mail is a method of exchanging messages between people using electronic devices. In this post, we’ll explain how to send an email message with Java through \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003cbr\u003e\nBy default, only the master environment can send emails. For non-master environments, you can configure outgoing emails \u003ca href=\"https://docs.platform.sh/administration/web/configure-environment.html#settings\"\u003evia the management console\u003c/a\u003e.\u003cbr\u003e\nEmails from \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e are sent via a SendGrid-based SMTP proxy. Each \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e project is provisioned as a SendGrid sub-account. These SendGrid sub-accounts are capped at 12k emails per month.\u003c/p\u003e\n\u003cp\u003eBelow the sample code that uses \u003ca href=\"https://javaee.github.io/javamail/\" rel=\"nofollow noopener\"\u003eJava Mail\u003c/a\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-java\"\u003eimport sh.platform.config.Config;\n\nimport javax.mail.Message;\nimport javax.mail.MessagingException;\nimport javax.mail.Session;\nimport javax.mail.Transport;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.internet.MimeMessage;\nimport java.util.Properties;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\n\npublic class JavaEmailSender {\n\n    private static final Logger LOGGER = Logger.getLogger(JavaEmailSender.class.getName());\n\n    public void send() {\n        Config config = new Config();\n        String to = \"\";//change accordingly\n        String from = \"\";//change accordingly\n        String host = config.getSmtpHost();\n        //or IP address\n        //Get the session object\n        Properties properties = System.getProperties();\n        properties.setProperty(\"mail.smtp.host\", host);\n        Session session = Session.getDefaultInstance(properties);\n\n        //compose the message\n        try {\n            MimeMessage message = new MimeMessage(session);\n            message.setFrom(new InternetAddress(from));\n            message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));\n            message.setSubject(\"Ping\");\n            message.setText(\"Hello, this is example of sending email  \");\n\n            // Send message\n            Transport.send(message);\n            System.out.println(\"message sent successfully....\");\n\n        } catch (MessagingException exp) {\n            exp.printStackTrace();\n            LOGGER.log(Level.SEVERE, \"there is an error to send an message\", exp);\n        }\n    }\n}\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThere is plenty of additional l documentation about using JavaMail, like this one, that shows how to send email with HTML format and an attachment:\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://mkyong.com/java/java-how-to-send-email/\" class=\"onebox\" target=\"_blank\" rel=\"nofollow noopener\"\u003ehttps://mkyong.com/java/java-how-to-send-email/\u003c/a\u003e\u003c/p\u003e\n\u003ch2\u003eReferences\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"https://docs.platform.sh/development/email.html\"\u003ehttps://docs.platform.sh/development/email.html\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003e\u003ca href=\"https://mkyong.com/java/java-how-to-send-email/\" rel=\"nofollow noopener\"\u003ehttps://mkyong.com/java/java-how-to-send-email/\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003e\u003ca href=\"https://javaee.github.io/javamail/\" rel=\"nofollow noopener\"\u003ehttps://javaee.github.io/javamail/\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003c/ul\u003e",
        "section": "Tutorials",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/java-email-at-platform-sh/483",
        "relurl": "/t/java-email-at-platform-sh/483"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "f354d8595e6b65a7f014a653d644365b7ab5444f",
        "title": "How to kill stuck processes that block your deployments",
        "description": "",
        "text": "\u003cp\u003eOne of the most common causes for environment builds that get stuck is a runaway/stuck process.\u003c/p\u003e\n\u003cp\u003eTo ensure data consistency, the deployment flow tries to terminate running processes gracefully. Sometimes, this does not work and the deployment ends up waiting forever due to a blocking process. Using two simple commands when connected to SSH can help you get things moving without having to wait for our support team to intervene.\u003c/p\u003e\n\u003cp\u003eAs an example, let’s assume a cron process is stuck.\u003c/p\u003e\n\u003cp\u003eThe demo application contains one \u003ccode\u003eblocker.sh\u003c/code\u003e script:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e#!/bin/sh\n\nsleep 3600\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003ewhich is configured as an \u003cem\u003eevery 5 minute\u003c/em\u003e cron in \u003ccode\u003e.platform.app.yaml\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e  blocker:\n    spec: '*/5 * * * *'\n    cmd: '/bin/bash /app/block.sh'\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNow, this process is blocking our new deployment - the log is stuck at:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e    Redeploying environment master\n      Preparing deployment\n      Closing services router and app\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eFirst thing to do is see if you can connect with SSH to the environment (this should work most of the time). If the SSH connection is successful, run: \u003ccode\u003eps fuxa\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eThe output will be a list of processes, similar to this one:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eweb@app.0:~$ ps fuxa\nUSER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot         153  0.9  0.0 197656 33176 ?        Sl   15:05   0:00 /usr/bin/python2.7 /etc/platform/commands/notify\nweb          159  0.0  0.0 271388 26620 ?        Sl   15:05   0:00  \\_ /usr/bin/python2.7 /etc/platform/commands/notify\nweb          162  0.0  0.0   4280   740 ?        S    15:05   0:00      \\_ /bin/dash -c /bin/bash /app/blocker.sh\nweb          165  0.0  0.0  12920  2740 ?        S    15:05   0:00          \\_ /bin/bash /app/blocker.sh\nweb          166  0.0  0.0   7580   668 ?        S    15:05   0:00              \\_ sleep 3600\nroot           1  0.0  0.0  15816  1096 ?        Ss+  15:02   0:00 init [2]\nroot          74  0.0  0.0   4204  1132 ?        Ss   15:02   0:00 runsvdir -P /etc/service log: ...................................................................................................................\nroot          80  0.0  0.0   4052   704 ?        Ss   15:02   0:00  \\_ runsv tideways\nroot          81  0.0  0.0   4052   696 ?        Ss   15:02   0:00  \\_ runsv ssh\nroot          90  0.0  0.0  72104  5608 ?        S    15:02   0:00  |   \\_ /usr/sbin/sshd -D\nroot         167  0.0  0.0  94876  6472 ?        Ss   15:06   0:00  |       \\_ sshd: web [priv]\nweb          173  0.0  0.0  94876  3668 ?        S    15:06   0:00  |           \\_ sshd: web@pts/0\nweb          174  0.0  0.0  21768  3852 pts/0    Ss   15:06   0:00  |               \\_ -bash\nweb          190  0.0  0.0  37448  3172 pts/0    R+   15:06   0:00  |                   \\_ ps fuxa\nroot          82  0.0  0.0   4052   700 ?        Ss   15:02   0:00  \\_ runsv nginx\nroot         115  0.0  0.0  36984  6684 ?        S    15:02   0:00  |   \\_ nginx: master process /usr/sbin/nginx -g daemon off; error_log /var/log/error.log; -c /etc/nginx/nginx.conf\nweb          121  0.0  0.0  45460 11560 ?        S    15:02   0:00  |       \\_ nginx: worker process\nroot          83  0.0  0.0   4052   752 ?        Ss   15:02   0:00  \\_ runsv newrelic\nroot          84  0.0  0.0   4052   644 ?        Ss   15:02   0:00  \\_ runsv idmapd\nroot          87  0.0  0.0  23348  2152 ?        S    15:02   0:00  |   \\_ /usr/sbin/rpc.idmapd -f -C -p /run/rpc_pipefs\nroot          85  0.0  0.0   4052   700 ?        Ss   15:02   0:00  \\_ runsv app\nweb          111  0.0  0.0 359464 30288 ?        Ss   15:02   0:00      \\_ php-fpm: master process (/etc/php/7.2-zts/fpm/php-fpm.conf)\nweb          116  0.0  0.0  12932   296 ?        S    15:02   0:00          \\_ /bin/bash /etc/platform/start-app\nweb          117  0.0  0.0   7584   656 ?        S    15:02   0:00              \\_ tee -a /var/log/app.log\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eYou can probably see already our stuck process is here:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eweb          162  0.0  0.0   4280   740 ?        S    15:05   0:00      \\_ /bin/dash -c /bin/bash /app/blocker.sh\nweb          165  0.0  0.0  12920  2740 ?        S    15:05   0:00          \\_ /bin/bash /app/blocker.sh\nweb          166  0.0  0.0   7580   668 ?        S    15:05   0:00              \\_ sleep 3600\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe important thing in the above output is the number listed in the second column, after the \u003ccode\u003eweb\u003c/code\u003e user: this is the \u003cem\u003eprocess ID\u003c/em\u003e, a unique identifier for each running process. As we’re interested in stopping the process, it’d be very useful to somehow forcefully stop it.\u003c/p\u003e\n\u003cp\u003eThis can be done with the \u003ccode\u003ekill -9\u003c/code\u003e command, followed by the list of process IDs you want to stop.\u003c/p\u003e\n\u003cp\u003eTherefore, to stop the cron in our example, we’d need to run:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003ekill -9 162 165 166\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eBe careful: there might be more processes that block the deployment ! Inspect the process list carefully (all application processes will be under the \u003ccode\u003eweb\u003c/code\u003e user) and repeat the previous command for all of them.\u003c/p\u003e\n\u003cp\u003eOnce done, the SSH connection will be terminated and you’ll see the friendly:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003eMessage from bot@platform.sh at 15:09:36:                                      \n  This container is being dematerialized. See you on the other side.       \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003emessage. Your previously stuck deployment will now continue.\u003c/p\u003e\n\u003cp\u003eNote: if the SSH connection cannot be established, you will need to open a support ticket.\u003c/p\u003e",
        "section": "Tutorials",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/how-to-kill-stuck-processes-that-block-your-deployments/473",
        "relurl": "/t/how-to-kill-stuck-processes-that-block-your-deployments/473"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "fecba4a9ca27e045ed28286c41c431a09f85f6da",
        "title": "Consequences of restoring backups after the persistent data model has been changed",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eThe ability to restore environment backups is a powerful tool, but only when backups are taken regularly to reflect the rapid changes that can occur over the course of the development of your application. Failing to do so has some consequences, as older backups that don’t reflect major changes can result in data loss once restored.\u003c/p\u003e\n\u003cp\u003eThe goal in this tutorial is to explore some of these consequences, and to illustrate how taking the time to \u003ca href=\"https://community.platform.sh/t/how-to-set-up-automated-environment-tasks/127\"\u003esetup scheduled backups\u003c/a\u003e can alleviate plenty of headaches down the line.\u003c/p\u003e\n\u003ch2\u003ePreparation\u003c/h2\u003e\n\u003cp\u003eYou will need:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e account\u003c/li\u003e\n\u003cli\u003eA \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e project\u003c/li\u003e\n\u003cli\u003e\n\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e CLI installed locally\u003c/li\u003e\n\u003cli\u003eA local copy of that project\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e gives you the ability to quickly create backups of the state of your environments, and then easily restore those backups to those environments should you need to. This is not yet an automatic process, and both creation and restoration must be executed manually by the user.\u003c/p\u003e\n\u003cp\u003eBut, of course, people forget to take frequent backups - they’re busy developing. It’s for this reason that we often recommend users \u003ca href=\"https://community.platform.sh/t/how-to-set-up-automated-environment-tasks/127\"\u003einstall the Platform.sh CLI into their application containers\u003c/a\u003e in order to automate this process.\u003c/p\u003e\n\u003cp\u003eIf you have not yet set up automatic backups as described in the above How-to, you may very well find yourself in the following situation.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eI’ve created a backup close to the start of an environment’s history.\u003c/li\u003e\n\u003cli\u003eI’ve made a lot of changes to that environment (added services, added data to those services, created new mounts, etc.).\u003c/li\u003e\n\u003cli\u003eSomething went wrong.\u003c/li\u003e\n\u003cli\u003eWell, look, I have a backup right here. But it’s old. What will happen?\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThis tutorial is meant to explore this exact scenario, with the intended takeaways:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ethe importance of setting up automatic backups on your projects using the How-to above as a guide (so you don’t find yourself in this situation in the first place).\u003c/li\u003e\n\u003cli\u003esome greater understanding of how \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e handles your data during backups, restores, and syncs.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003ch3\u003eCreating backups\u003c/h3\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003enote\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThis tutorial uses a modified version of our \u003ca href=\"https://github.com/platformsh/language-examples\" rel=\"nofollow noopener\"\u003ePlatform.sh Language Examples\u003c/a\u003e project. That project is intended to show how to interact with all of our managed services with each of our runtimes. It’s a great resource, and it even powers most of the examples in our public documentation, but it’s gigantic, and much more than we need for this tutorial.\u003c/p\u003e\n\u003cp\u003eWe removed all of the runtimes except for Python, leaving us with only the \u003ccode\u003emain\u003c/code\u003e and \u003ccode\u003epython\u003c/code\u003e application container directories. We also removed all of the services save \u003ccode\u003epostgresql\u003c/code\u003e, but we will be adding a few of them back in the steps below. It is not necessary that you use the same repository if going through this tutorial step by step, just try to match the steps in your own project.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch4\u003e1. Create a new branch\u003c/h4\u003e\n\u003cp\u003eAssuming you have already created a project and initialized it with some code, create a new environment\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003eplatform branch add-mongo master\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4\u003e2. Create a backup\u003c/h4\u003e\n\u003cp\u003eThen create a backup of that environment in its current state.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003eplatform backup:create\nCreating a backup of add-mongo\nWaiting for the activity is5ytp2lbm7p4 (Chad Carlson created a backup of add-mongo):\n\nCreating snapshot of add-mongo\nCreated backup bivzemjpeqvohqey2t7fo7vs5m\n[============================] 15 secs (complete)\nActivity is5ytp2lbm7p4 succeeded\nBackup name: bivzemjpeqvohqey2t7fo7vs5m\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eSo what happened here? Each service, which includes applications, has its own persistent storage. During a \u003ccode\u003ebackup\u003c/code\u003e, a copy is made for each of them. It’s the collection of these backups that then makes up backup \u003ccode\u003ebivzemjpeqvohqey2t7fo7vs5m\u003c/code\u003e.\u003c/p\u003e\n\u003ch3\u003eAdding a new service\u003c/h3\u003e\n\u003ch4\u003e1. Configure a new service\u003c/h4\u003e\n\u003cp\u003eFirst, let’s add a new service to the project, one that did not exist when the backup was created. Modify your \u003ccode\u003eservices.yaml\u003c/code\u003e file to include MongoDB:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003edbmongo:\n    type: mongodb:3.6\n    disk: 1024\n    size: S\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eand your \u003ccode\u003e.platform.app.yaml\u003c/code\u003e to include the new relationship:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003erelationships:\n    mongodb: 'dbmongo:mongodb'\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThen commit and push the changes to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003egit add .\ngit commit -m \"Adds mongodb.\"\ngit push platform add-mongo\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e will provision MongoDB to your virtual cluster, and expose the following credentials in your \u003ccode\u003ePLATFORM_RELATIONSHIPS\u003c/code\u003e  environment variable:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-json\"\u003e{\n  \"username\": \"main\",\n  \"scheme\": \"mongodb\",\n  \"service\": \"mongodb\",\n  \"ip\": \"169.254.117.167\",\n  \"hostname\": \"ldh423mk2e7o6qto2syljqbg5u.mongodb.service._.eu-3.platformsh.site\",\n  \"cluster\": \"rjify4yjcwxaa-master-7rqtwti\",\n  \"host\": \"mongodb.internal\",\n  \"rel\": \"mongodb\",\n  \"path\": \"main\",\n  \"query\": {\n    \"is_master\": true\n  },\n  \"password\": \"main\",\n  \"type\": \"mongodb:3.6\",\n  \"port\": 27017\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4\u003e2. Develop and verify\u003c/h4\u003e\n\u003cp\u003eAt this point, MongoDB is available for you to develop with. Over the next few days, you may make the following changes as you are developing on the environment:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eyou create a new collection in \u003ccode\u003emain\u003c/code\u003e called \u003ccode\u003estarwars\u003c/code\u003e.\u003c/li\u003e\n\u003cli\u003eyour application adds a number of documents to that collection. (In the case of our language examples project, the Python app adds a document with the contents \u003ccode\u003e{\"name\": \"Rey\", \"occupation\": \"Jedi\"}\u003c/code\u003e as a test each time the site is visited)\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eYou can verify those documents have been added locally by opening an SSH tunnel to the service (\u003ccode\u003eplatform:tunnel single -r mongodb\u003c/code\u003e) and then connecting to MongoDB via that tunnel and the credentials above:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ mongo --port 30000 -u main -p main --authenticationDatabase main\nMongoDB shell version v4.0.3\n\u0026gt; use main\nswitched to db main\n\u0026gt; show collections\nstarwars\n\u0026gt; db.starwars.find()\n{ \"_id\" : ObjectId(\"5e4457d05908440effc53a20\"), \"name\" : \"Rey\", \"occupation\" : \"Jedi\" }\n{ \"_id\" : ObjectId(\"5e4457d35908440effc53a22\"), \"name\" : \"Rey\", \"occupation\" : \"Jedi\" }\n{ \"_id\" : ObjectId(\"5e4457d75908440effc53a24\"), \"name\" : \"Rey\", \"occupation\" : \"Jedi\" }\n{ \"_id\" : ObjectId(\"5e4457d95908440effc53a26\"), \"name\" : \"Rey\", \"occupation\" : \"Jedi\" }\n{ \"_id\" : ObjectId(\"5e44585c5908440effc53a28\"), \"name\" : \"Rey\", \"occupation\" : \"Jedi\" }\n\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThere’s all the newly added data.\u003c/p\u003e\n\u003ch4\u003e3. Restore the backup\u003c/h4\u003e\n\u003cp\u003eNow, if we restore the backup we created at the beginning (before MongoDB was a part of the cluster)  using the command\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003eplatform backup:restore bivzemjpeqvohqey2t7fo7vs5m\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe restore will do a few things:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAll persistent data currently in that environment is wiped.\u003c/li\u003e\n\u003cli\u003eBackup \u003ccode\u003ebivzemjpeqvohqey2t7fo7vs5m\u003c/code\u003e, which contains a backup of each service present when it was taken, is then applied to the containers present in the environment one by one.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eBecause of that first point, and because no backup for MongoDB exists in backup \u003ccode\u003ebivzemjpeqvohqey2t7fo7vs5m\u003c/code\u003e, all data and code pertaining to MongoDB is erased before anything else happens. If you attempt to open a tunnel and locally connect to MongoDB straight away, the service won’t even be recognized as existing in the project.\u003c/p\u003e\n\u003cp\u003eRun \u003ccode\u003eplatform redeploy\u003c/code\u003e, re-open the tunnel to MongoDB, and then repeat the prior steps to connect to MongoDB:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e$ mongo --port 30000 -u main -p main --authenticationDatabase main\nMongoDB shell version v4.0.3\n\u0026gt; use main\nswitched to db main\n\u0026gt; show collections\nstarwars\n\u0026gt;\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAs you can see, the added collection no longer exists on the service. This is our first example of why it’s important to create backups regularly. If one had been taken some time after MongoDB existed, we would still have been able to keep some of its data.\u003c/p\u003e\n\u003ch3\u003eMounts\u003c/h3\u003e\n\u003ch4\u003e1. Configure a new mount\u003c/h4\u003e\n\u003cp\u003eAnother case where this would be relevant is the addition of new mounts to the project. If you were to create a mount that was not included in backup \u003ccode\u003ebivzemjpeqvohqey2t7fo7vs5m\u003c/code\u003e, would the files in that mount be erased?\u003c/p\u003e\n\u003cp\u003eYou can probably guess already based on the previous example, but let’s find out. You can add a mount to an application by adding the following lines to your \u003ccode\u003e.platform.app.yaml\u003c/code\u003e file:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003emounts:\n    'add-mount':\n        source: local\n        source_path: add-mount\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThen commit and push to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003egit add .\ngit commit -m \"Add a mount.\"\ngit push platform add-mongo\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4\u003e2. Add data and verify\u003c/h4\u003e\n\u003cp\u003eLet’s just create a simple file\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003emkdir mount-data \u0026amp;\u0026amp; touch mount-data/test.txt\necho \"Here's our mounted data on Platform.sh.\" \u0026gt;\u0026gt; mount-data/test.txt\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eand then upload it to the newly defined mount:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003eplatform mount:upload --mount add-mount --source ./mount-data\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eYou can then verify that the file was uploaded to the project by runing \u003ccode\u003eplatform ssh\u003c/code\u003e to SSH into the application container. Then run,\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003eweb@app.0:~$ echo \"$(\u0026lt;add-mount/test.txt)\"\nHere's our mounted data on Platform.sh.\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch4\u003e3. Restore the backup\u003c/h4\u003e\n\u003cp\u003eLooks good - now let’s restore the environment from the backup.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003eplatform backup:restore bivzemjpeqvohqey2t7fo7vs5m\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOnce again, if we SSH into the container immediately after the backup is restored, the \u003ccode\u003eadd-mount\u003c/code\u003e mount will not be present. After a \u003ccode\u003eplatform redeploy\u003c/code\u003e however, it is, but alas, our data has been deleted:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003eweb@python.0:~$ ls\nPipfile  Pipfile.lock  README.md  add-mount  examples  setup.py  web\nweb@python.0:~$ echo \"$(\u0026lt;add-mount/test.txt)\"\n-bash: add-mount/test.txt: No such file or directory\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eIn this tutorial we saw that:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eThe first step during backup restoration wipes all persistent data from the current environment.\u003c/li\u003e\n\u003cli\u003eAll data after that backup was created - including service configuration - will be lost. We saw first hand that this is the case when new service containers are added, as well as mounted data.\u003c/li\u003e\n\u003cli\u003eThere’s a super simple way to \u003ca href=\"https://community.platform.sh/t/how-to-set-up-automated-environment-tasks/127\"\u003econfigure automatic backups\u003c/a\u003e on your projects that will help mitigate this whole mess in the first place.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eRead the above How-to and start protecting your data!\u003c/p\u003e",
        "section": "Tutorials",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/consequences-of-restoring-backups-after-the-persistent-data-model-has-been-changed/461",
        "relurl": "/t/consequences-of-restoring-backups-after-the-persistent-data-model-has-been-changed/461"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "879db006eecc051f69937eecbb477e89999bfe8c",
        "title": "Preventing stuck deployments caused by long-running cron jobs",
        "description": "",
        "text": "\u003cp\u003eThe default way of deploying to production on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e is to simply push \u003ccode\u003emaster\u003c/code\u003e to the \u003ccode\u003eplatform\u003c/code\u003e remote. However, if a cron job is running, \u003ca href=\"https://docs.platform.sh/development/troubleshoot.html#stuck-build-or-deployment\"\u003ethe application and services will be stopped\u003c/a\u003e, and the deployment will not finish until the cron job is finished. When this happens, the application goes down. In order to prevent this from happening, you can use a custom deployment script that first makes sure that no Django management commands are running in the production environment.\u003c/p\u003e\n\u003cp\u003eIn the example below, we are checking if any Django management commands are running. If so, we abort the deployment. I have tested the script using Python 3.7.5, but it should work on 3.6.0 and later. If you’re not running Python, you can use it as inspiration for porting it to your language of choice. If you do, please consider sharing it with the community, for example as a reply to this post.\u003c/p\u003e\n\u003cp\u003eAs a caveat, note that if a cron job starts after the build has started, it might still block the deployment. The probability of this increases if your build takes a long time.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-python\"\u003e#!/usr/bin/env python\nimport sys\nfrom os import getenv\nfrom subprocess import CompletedProcess, run\n\n\ndef git(command: str) -\u0026gt; None:\n    run(f\"git {command}\", shell=True)\n\n\ndef main() -\u0026gt; None:\n    git(\"checkout master\")\n    git(\"pull origin\")\n    print(\"Getting running processes in order to prevent stuck deployment…\")\n    completed_process: CompletedProcess = run(\n        f\"ssh {getenv('PLATFORM_SH_SSH_DESTINATION')} 'ps auxf'\",\n        capture_output=True,\n        shell=True,\n    )\n    output = str(completed_process.stdout)\n    print(\"Making sure that process list was received…\")\n    if \"/app/.global/bin/gunicorn\" not in output:\n        sys.exit(\"Gunicorn process not found. Are you able to connect using SSH?\")\n    print(\"Process list received. Checking for running Django management commands…\")\n    if \"manage.py\" in output:\n        sys.exit(\"Running Django management command detected. Not safe to continue.\")\n    print(\n        \"No running commands detected. Pushing changes to the production environment…\"\n    )\n    git(\"push platform\")\n\n\nif __name__ == \"__main__\":\n    main()\n\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eTo use the script:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCreate a Python file, e.g. \u003ccode\u003edeploy.py\u003c/code\u003e, in the root of your project and paste the script contents into it.\u003c/li\u003e\n\u003cli\u003eSet the environment variable \u003ccode\u003ePLATFORM_SH_SSH_DESTINATION\u003c/code\u003e to the \u003ccode\u003euser@host\u003c/code\u003e destination of your production environment.\u003c/li\u003e\n\u003cli\u003eCheck if there are any modifications you need to make. For example, you may be running other kinds of jobs than just Django management commands, so you may need to add other strings in addition to \u003ccode\u003emanage.py\u003c/code\u003e\n\u003c/li\u003e\n\u003cli\u003eRun \u003ccode\u003e./deploy.py\u003c/code\u003e when you’re ready to deploy.\u003c/li\u003e\n\u003cli\u003eCommit the script so you don’t lose it.\u003c/li\u003e\n\u003c/ol\u003e",
        "section": "Tutorials",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/preventing-stuck-deployments-caused-by-long-running-cron-jobs/434",
        "relurl": "/t/preventing-stuck-deployments-caused-by-long-running-cron-jobs/434"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "cc40a421ad7b01871f84ddedf39d7787fd1eac04",
        "title": "Compiling a Drupal site with Tome",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eTo demonstrate how a “compile to static” tool, such as the \u003ca href=\"https://www.drupal.org/project/tome\" rel=\"nofollow noopener\"\u003eDrupal Tome module\u003c/a\u003e, can be used on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e using multi-application configurations.\u003c/p\u003e\n\u003ch2\u003ePreparation\u003c/h2\u003e\n\u003cp\u003eThis tutorial will start from a basic Drupal 8 Composer site.  However, it will be easier to start from an empty Git repository.  It can be done from a Drupal 8 template site but that requires moving a number of hidden files and is therefore more prone to error.\u003c/p\u003e\n\u003cp\u003eYou will need:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA newly created empty site on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eGit and SSH installed locally.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003eHow can you serve two closely related sites off of the same project?\u003c/p\u003e\n\u003cp\u003eHow can static site generation work in production, rather than compiling locally or during build?\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003ch3\u003e1. Create an empty working directory\u003c/h3\u003e\n\u003cp\u003eOn your local system, create an empty directory for your project and initialize it for Git.  Eg:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003emkdir project\ncd project\ngit init\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e2. Download Drupal 8\u003c/h3\u003e\n\u003cp\u003eClone the Drupal 8 \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e template into your project, then remove the git repository from it.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003egit clone https://github.com/platformsh-templates/drupal8.git drupal --depth=1\nrm -rf drupal/.git\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThat Git repository is what the Drupal 8 template in the new project wizard populates from.  The above commands are essentially what the new project wizard does, although it does not use a subdirectory.\u003c/p\u003e\n\u003ch3\u003e2. Move the \u003ccode\u003e.platform\u003c/code\u003e definition files to the repo root\u003c/h3\u003e\n\u003cp\u003eThe \u003ccode\u003e.platform\u003c/code\u003e directory must be in the repository root, so move it there:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003emv drupal/.platform .\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe \u003ccode\u003e.platform.app.yaml\u003c/code\u003e file stays in the \u003ccode\u003edrupal\u003c/code\u003e directory so that the \u003ccode\u003edrupal\u003c/code\u003e directory becomes an application container itself.  That will let you create another directory for the static site.\u003c/p\u003e\n\u003ch3\u003e3. Add a \u003ccode\u003enetwork-storage\u003c/code\u003e service\u003c/h3\u003e\n\u003cp\u003eOpen \u003ccode\u003e.platform/services.yaml\u003c/code\u003e in your favorite text editor and add the following:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003efiles:\n    type: network-storage:1.0\n    disk: 512\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThat creates a new \u003ccode\u003enetwork-storage\u003c/code\u003e service named \u003ccode\u003efiles\u003c/code\u003e.  Files there can be shared between the two application containers.\u003c/p\u003e\n\u003ch3\u003e4. Update Drupal mounts\u003c/h3\u003e\n\u003cp\u003eOpen \u003ccode\u003edrupal/.platform.app.yaml\u003c/code\u003e in your favorite text editor and update the \u003ccode\u003emounts\u003c/code\u003e section to be as follows:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003emounts:\n    '/web/sites/default/files':\n        source: local\n        source_path: files\n    '/tmp':\n        source: local\n        source_path: tmp\n    '/private':\n        source: local\n        source_path: private\n    '/.drush':\n        source: local\n        source_path: drush\n    '/drush-backups':\n        source: local\n        source_path: drush-backups\n    '/.console':\n        source: local\n        source_path: console\n    '/content':\n        source: local\n        source_path: content\n    '/config':\n        source: local\n        source_path: config\n    '/static':\n        source: service\n        service: files\n        source_path: static\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eMost of those are simply converting the normal Drupal mounts to the new-style mount syntax.  The most important are the final three paths.  Tome will automatically run a config-export every time configuration is exported, so the \u003ccode\u003e/config\u003c/code\u003e directory must be writeable.  It will also write out  a JSON version of all content as it is created and edited to \u003ccode\u003e/content\u003c/code\u003e.  The \u003ccode\u003e/static\u003c/code\u003e directory is where you’ll instruct Tome to write out the static version of the site.\u003c/p\u003e\n\u003cp\u003eOf particular note, the \u003ccode\u003e/static\u003c/code\u003e mount uses the network storage service, not the local file system.  That will make it available to other application containers.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eNote: Because these directories are writeable, they will \u003cem\u003enot\u003c/em\u003e be tracked in Git.  That includes configuration exports, which will not be deployable via Git in this setup.\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3\u003e5. Install Drupal Tome module\u003c/h3\u003e\n\u003cp\u003eRun:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003ecd drupal\ncomposer require drupal/tome\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eto add the Tome module.  (It’s actually a suite of modules).  You’ll enable it later once the code is deployed.  Once that’s done return to the repository root directory:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003ecd ..\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e6. Set Tome export location\u003c/h3\u003e\n\u003cp\u003eModify the \u003ccode\u003edrupal/web/sites/default/settings.php\u003c/code\u003e file.  Add the following line at the location of your choice:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-php\"\u003e$settings['tome_static_directory'] = '../static/html';\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThat will set the Tome export directory to the \u003ccode\u003e/static/html\u003c/code\u003e directory, which is inside the writeable mount you created above.  Because Tome completely removes the output directory before each rebuild it needs to be in a subdirectory of the mount.\u003c/p\u003e\n\u003ch3\u003e7. Disable allowed-host checking\u003c/h3\u003e\n\u003cp\u003eIn the \u003ccode\u003edrupal/web/sites/default/settings.platformsh.php\u003c/code\u003e file, look for a comment line that reads \u003ccode\u003e// Set trusted hosts based on Platform.sh routes\u003c/code\u003e.  The code block below that configures the hosts that Drupal is allowed to requests for.  Normally it is a security feature, however, on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e Professional the domain is already mangled by the router and will always be a “safe” domain.  That makes this code block unnecessary.  (It is included in the template only for \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e Enterprise.)\u003c/p\u003e\n\u003cp\u003eThe Tome module’s export functionality, however, is incompatible with this code block as it will need to use the un-prefixed domain for the export.  It is safe to simply remove/comment out this entire block.  Alternatively, just comment out the last line that sets \u003ccode\u003e$settings['trusted_host_patterns']\u003c/code\u003e.\u003c/p\u003e\n\u003ch3\u003e8. Add a static site application to serve files\u003c/h3\u003e\n\u003cp\u003eCreate a new directory called \u003ccode\u003estatic\u003c/code\u003e, and inside it create a \u003ccode\u003e.platform.app.yaml\u003c/code\u003e file.  Give it the following contents:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e# Note that this is different than what the Drupal site is called.\nname: 'static'\n\n# The type here doesn't really matter since it's just a static site.\ntype: 'php:7.3'\n\n# This must be set, but can be set at the minimum value.\ndisk: 16\n\nmounts:\n    'static':\n        source: service\n        service: files\n        source_path: static\n\nweb:\n    locations:\n        '/':\n            root: 'static/html'\n            index: ['index.html']\n            scripts: false\n            allow: true\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThat file is all that is needed to create a second application container.  This container will be called \u003ccode\u003estatic\u003c/code\u003e, and will mount the same network storage directory as the \u003ccode\u003eapp\u003c/code\u003e container that holds the Drupal site.  It will be empty aside from that mount, which is fine as the mount is where the files will be served from.  Note that the web root is the \u003ccode\u003estatic/html\u003c/code\u003e directory, not \u003ccode\u003estatic\u003c/code\u003e itself, as Tome was configured above to write files to \u003ccode\u003estatic/html\u003c/code\u003e.\u003c/p\u003e\n\u003ch3\u003e9. Update routes\u003c/h3\u003e\n\u003cp\u003eOpen \u003ccode\u003e.platform/routes.yaml\u003c/code\u003e in your editor.  Update the route definitions to be as follows:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e\"https://drupal.{default}/\":\n    type: upstream\n    upstream: \"app:http\"\n    cache:\n        enabled: true\n\n        # Base the cache on the session cookie and custom Drupal cookies. Ignore all other cookies.\n        cookies: ['/^SS?ESS/', '/^Drupal.visitor/']\n\n\"https://{default}/\":\n    type: upstream\n    upstream: \"static:http\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e(You can also include a \u003ccode\u003ewww\u003c/code\u003e redirect route if you want, but that is unnecessary.)  This configuration creates two routes: The \u003ccode\u003edrupal.\u003c/code\u003e subdomain will be where the Drupal site lives, and it will run as any other Drupal site.  The main domain (and/or \u003ccode\u003ewww.\u003c/code\u003e subdomain if desired) will be served by the \u003ccode\u003estatic\u003c/code\u003e application.\u003c/p\u003e\n\u003cp\u003eOnce the configuration is complete and you are happy with the result, you will most likely want to come back and add HTTP caching to the \u003ccode\u003estatic\u003c/code\u003e route, including a \u003ccode\u003edefault_ttl\u003c/code\u003e.\u003c/p\u003e\n\u003ch3\u003e10. Commit and push\u003c/h3\u003e\n\u003cp\u003eCommit all of the files you just created to Git:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003egit add .\ngit commit -m \"Setting up Tome\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNow add a remote for your empty \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e project.  The Git URL can be found in your Management Console in the browser.  The command will be something along the lines of:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003egit remote add platform bzh2mp6iabike@git.eu-3.platform.sh:bzh2mp6iabike.git\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eAnd then push all of the code to the \u003ccode\u003eplatform\u003c/code\u003e remote:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003egit push -u platform master\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eIf everything is setup correctly it will push and deploy a two-application cluster, containing the Drupal container, static container, and the MariaDB and Redis services used by Drupal itself.\u003c/p\u003e\n\u003ch3\u003e11. Install Drupal and Tome\u003c/h3\u003e\n\u003cp\u003eOnce deployment is finished it will show you the domain names that are served.  Go to the \u003ccode\u003edrupal.\u003c/code\u003e domain in your browser.  Complete the Drupal installation process as normal.\u003c/p\u003e\n\u003cp\u003eOnce Drupal is installed, select “Extend” in the menu and enable the “Tome” module.  That will also enable several sub-modules.  You don’t need to create any content at this point, but if you do it will make the demonstration of Tome’s functionality more interesting.\u003c/p\u003e\n\u003ch3\u003e12. Export the site\u003c/h3\u003e\n\u003cp\u003eGo to \u003ccode\u003e/admin/config/tome/static/generate\u003c/code\u003e in your Drupal site.  The generation form will ask you for the domain to generate for; give it the unprefixed domain (which could be a dev domain or your production domain, depending on whether or not you’ve gone live yet).  Click “Submit”.\u003c/p\u003e\n\u003cp\u003eTome will generate a static version of your site as it is seen by an anonymous user.  (Which means you must allow anonymous user to see the site.)  The process takes anywhere from a few seconds to a few minutes depending on how much content you have.  As the site was only just created it should be quite fast.\u003c/p\u003e\n\u003cp\u003eNow go to the unprefixed version of your site (the domain without \u003ccode\u003edrupal.\u003c/code\u003e) in your favorite browser.  You should see the anonymous version of your site, now served entirely as static files.\u003c/p\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eIn this tutorial, you have seen how to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eCreate a multi-application project on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eUse \u003ccode\u003enetwork-storage\u003c/code\u003e to share content between sites.\u003c/li\u003e\n\u003cli\u003eConfigure an application to serve static files.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eAll of which can be applied to other configurations if needed.  Note that in the case of Tome the generation process does delete files first, so it is recommended to configure caching at the router level for the static container to minimize any disruption to the site as it is being regenerated.\u003c/p\u003e",
        "section": "Tutorials",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/compiling-a-drupal-site-with-tome/363",
        "relurl": "/t/compiling-a-drupal-site-with-tome/363"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "69e493ce38a4fc00fe39aff1404bba2c741cc215",
        "title": "Installing Drupal and Mautic together in one project",
        "description": "",
        "text": "\u003ch2\u003eGoal\u003c/h2\u003e\n\u003cp\u003eTo set up a multi-app site with both Drupal 8 and Mautic.  The process is also very similar for any other site that combines two templates.\u003c/p\u003e\n\u003ch2\u003ePreparation\u003c/h2\u003e\n\u003cp\u003eYou will need:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eA new project with no code.  You will need at least a Medium plan to go live, but you can start with a Dev plan for setup.  You will need a Medium plan and a domain configured before the Drupal Mautic module can be configured, however.\u003c/li\u003e\n\u003cli\u003eA local working Git client and Composer.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2\u003eProblems\u003c/h2\u003e\n\u003cp\u003eDrupal needs a Mautic site URL in order to connect to it.  It will do so over HTTP, not through a backend connection.  That means the domain name will be different on every branch.  Generally you would only care about Mautic tracking on production anyway, so that is not a major issue.\u003c/p\u003e\n\u003ch2\u003eSteps\u003c/h2\u003e\n\u003ch3\u003e1. Download the Drupal 8 template\u003c/h3\u003e\n\u003cp\u003eThe \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e Drupal 8 template is available on \u003ca href=\"https://github.com/platformsh-templates/drupal8\" rel=\"nofollow noopener\"\u003eGitHub\u003c/a\u003e.  Clone it to your local computer, then remove the \u003ccode\u003e.git\u003c/code\u003e directory to reset the repository.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e# Download Drupal 8\ngit clone https://github.com/platformsh-templates/drupal8.git d8-mautic\n# Remove the git repository itself.\ncd d8-mautic\nrm -rf .git\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eResetting the repository is technically optional, but the existing history is useless for you and as you will be moving a lot of files around it’s easier to not deal with Git at this point.\u003c/p\u003e\n\u003ch3\u003e2. Move Drupal to a subdirectory\u003c/h3\u003e\n\u003cp\u003eMake a new directory named \u003ccode\u003edrupal\u003c/code\u003e and move all of the existing files into it, \u003cem\u003eexcept\u003c/em\u003e for the \u003ccode\u003e.platform\u003c/code\u003e subdirectory.  Make sure to include the various other dot files.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003emkdir drupal\nmv * drupal\nmv .platform.app.yaml .env* .editorconfig .gitattributes .gitignore drupal\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e3. Add Mautic\u003c/h3\u003e\n\u003cp\u003eDownload the \u003ca href=\"https://github.com/platformsh-templates/mautic\" rel=\"nofollow noopener\"\u003eMautic template\u003c/a\u003e into the project directory and remove its \u003ccode\u003e.git\u003c/code\u003e repository as well.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003e# Download Mautic\n$ git clone https://github.com/platformsh-templates/mautic.git\n# Remove the git repository itself.\n$ cd mautic\n$ rm -rf .git\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e4. Rename applications\u003c/h3\u003e\n\u003cp\u003eThe two applications will need unique names, such as \u003ccode\u003edrupal\u003c/code\u003e and \u003ccode\u003emautic\u003c/code\u003e.  (You may use other names if you wish.)  Change the \u003ccode\u003ename\u003c/code\u003e field in each application’s \u003ccode\u003e.platform.app.yaml\u003c/code\u003e file:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003e# in drupal/.platform.app.yaml\nname: drupal\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003e# in mautic/.platform.app.yaml\nname: mautic\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNote: If you have an existing Drupal site you are modifying to include Mautic, \u003cem\u003edo not rename that application\u003c/em\u003e.  Doing so will result in data loss.\u003c/p\u003e\n\u003ch3\u003e5. Update \u003ccode\u003eroutes.yaml\u003c/code\u003e\n\u003c/h3\u003e\n\u003cp\u003eUpdate the \u003ccode\u003e.platform/routes.yaml\u003c/code\u003e file to supply different routes for each application.  The exact configuration will vary depending on your preferred domains.  For example, the following configuration will serve Drupal from \u003ccode\u003ewww.YOURSITE.com\u003c/code\u003e and Mautic from \u003ccode\u003emautic.YOURSITE.com\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003e\"https://www.{default}/\":\n    type: upstream\n    upstream: \"drupal:http\"\n    cache:\n      enabled: true\n      cookies: ['/^SS?ESS/', '/^Drupal.visitor/']\n\n\"https://{default}/\":\n    type: redirect\n    to: \"https://www.{default}/\"\n\n\"https://mautic.{default}/\":\n  type: upstream\n  upstream: \"mautic:http\"\n  cache:\n    enabled: true\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e6. Merge the \u003ccode\u003eservices.yaml\u003c/code\u003e files\u003c/h3\u003e\n\u003cp\u003eAt this point, Drupal’s original \u003ccode\u003eservices.yaml\u003c/code\u003e is in \u003ccode\u003e.platform/services.yaml\u003c/code\u003e and Mautic’s is in \u003ccode\u003emautic/.platform/services.yaml\u003c/code\u003e.  The second will not be used so its content should be merged into the main one, and then it can be removed.\u003c/p\u003e\n\u003cp\u003eBy default, Mautic and Drupal both use MariaDB; Drupal also uses Redis, and Mautic also uses RabbitMQ.  If you wish to add additional services you may do so.  The same MariaDB service can hold the database for both applications.  A typical configuration for running both applications would looks like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003edb:\n    type: mariadb:10.4\n    disk: 2048\n    configuration:\n        schemas:\n            - drupal\n            - mautic\n        endpoints:\n            drupal:\n                default_schema: drupal\n                privileges:\n                    drupal: admin\n            mautic:\n                default_schema: mautic\n                privileges:\n                    mautic: admin\n\ncache:\n    type: redis:5.0\n\nqueuerabbit:\n    type: rabbitmq:3.7\n    disk: 256\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThat includes the \u003ccode\u003ecache\u003c/code\u003e service from Drupal, the \u003ccode\u003equeuerabbit\u003c/code\u003e service from Mautic, and a single MariaDB 10.4 server to serve both databases.  It defines two databases, \u003ccode\u003edrupal\u003c/code\u003e and \u003ccode\u003emautic\u003c/code\u003e, and then creates two separate endpoints of the same name that have full access to their respective databases only.\u003c/p\u003e\n\u003cp\u003eNote: If you are adding Mautic to an existing Drupal site, you \u003cem\u003emust\u003c/em\u003e name the Drupal database \u003ccode\u003emain\u003c/code\u003e and the Drupal endpoint \u003ccode\u003emysql\u003c/code\u003e.  Doing otherwise will result in data loss.\u003c/p\u003e\n\u003cp\u003eOnce that is done, remove the now-unused Mautic \u003ccode\u003e.platform\u003c/code\u003e directory.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003erm -rf mautic/.platform\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e7. Update each application’s relationships definition.\u003c/h3\u003e\n\u003cp\u003eIn \u003ccode\u003edrupal/.platform.app.yaml\u003c/code\u003e, change the \u003ccode\u003edatabase\u003c/code\u003e relationship to point to the \u003ccode\u003edrupal\u003c/code\u003e endpoint:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003e# in drupal/.platform.app.yaml\nrelationships:\n    database: 'db:drupal'\n## Uncomment this line to enable Redis caching for Drupal.\n#    redis: 'cache:redis'\n\u003c/code\u003e\u003c/pre\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003e# in mautic/.platform.app.yaml\nrelationships:\n    database: \"db:mautic\"\n    rabbitmqqueue: \"queuerabbit:rabbitmq\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e8. Reduce disk usage OR increase plan size\u003c/h3\u003e\n\u003cp\u003eThe default templates for Drupal and Mautic, when combined, will ask for a total of about 6 GB of storage.  By default plans on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e start with 5 GB.  You may either increase the disk usage of your plan to a value higher than 6 GB, OR you can reduce the disk space requested by each application container.\u003c/p\u003e\n\u003cp\u003eFor the latter, change the \u003ccode\u003edisk\u003c/code\u003e key in both \u003ccode\u003e.platform.app.yaml\u003c/code\u003e files to \u003ccode\u003e1024\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-yaml\"\u003edisk: 1024\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThat will give each application 1 GB of disk space.  Both applications will share the disk space used for the database (2 GB in the example above).\u003c/p\u003e\n\u003ch3\u003e9. Add the Drupal Mautic module to the project\u003c/h3\u003e\n\u003cp\u003eInstall the \u003ccode\u003edrupal/mautic\u003c/code\u003e module in the Drupal instance, using Composer:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003ecd drupal\ncomposer require drupal/mautic\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eBecause of the way Composer works that will require downloading all dependencies, even though they will not be needed.  That’s fine.  When it is done go back to the project directory:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003ecd ..\n\u003c/code\u003e\u003c/pre\u003e\n\u003ch3\u003e10. Commit and deploy\u003c/h3\u003e\n\u003cp\u003eInitialize a new Git repository and commit all of the files you’ve created to it.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003egit init\ngit add .\ngit commit -m \"Add Drupal and Mautic.\"\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eNext, set a Git remote for the empty \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e project you have waiting for it, using the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e CLI.  You can find the exact command to copy and paste in the project’s setup wizard.  Then push your code to the new remote.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-bash\"\u003eplatform project:set-remote YOUR_PROJECT_ID_HERE\ngit push -u platform master\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe codebase will push to \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e, and both applications will be built and deployed.\u003c/p\u003e\n\u003ch3\u003e11. Install both applications\u003c/h3\u003e\n\u003cp\u003eOnce the deploy is complete, run through the web installer for both applications.  The environment URL for each one will be visible in the CLI output as well as in the web console.\u003c/p\u003e\n\u003cp\u003eConsult the \u003ccode\u003eREADME.md\u003c/code\u003e file for each application for steps that should be taken post-install.  They are not required for completing the integration but doing so will lead to a better experience for both applications.  You may also do any additional configuration desired for both applications either now or afterward.\u003c/p\u003e\n\u003ch3\u003e12. Enable and configure the Drupal module\u003c/h3\u003e\n\u003cp\u003eOnce logged into Drupal as the site administrator, go to \u003ccode\u003e/admin/modules\u003c/code\u003e and enable the Mautic module.\u003c/p\u003e\n\u003cp\u003eOnce the module is enabled, go to the module’s configuration page at \u003ccode\u003e/admin/config/system/mautic\u003c/code\u003e.  Check “Include Mautic Javascript Code”.\u003c/p\u003e\n\u003cp\u003eFor the Mautic URL, enter the domain name of your Mautic site followed by \u003ccode\u003e/mtc.js\u003c/code\u003e.  If you are on a development plan, it will be something similar to:\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003ehttps://mautic.master-t6dnbai-aqatptktdkxmi.us-2.platformsh.site/mtc.js\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eIf you already have a domain name configured, it will be whatever the domain name is that Mautic is served from instead.\u003c/p\u003e\n\u003cp\u003eClick “save configuration”.\u003c/p\u003e\n\u003cp\u003eThe setup is now complete.  Browse to the Drupal home page and inspect the source code to locate the Mautic tracking Javascript code.\u003c/p\u003e\n\u003ch2\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eIn this tutorial you have learned how to create a multi-application project on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e based on two separate application templates.  You’ve also seen how to add a module to Drupal and configure it with Mautic.\u003c/p\u003e\n\u003cp\u003eThe same basic process applies to any other two-template project, although the specific names and services will of course vary depending on the applications.\u003c/p\u003e\n\u003ch2\u003eExample\u003c/h2\u003e\n\u003cp\u003eAn example repository for this tutorial can be found \u003ca href=\"https://github.com/platformsh-examples/d8-mautic\" rel=\"nofollow noopener\"\u003eon GitHub\u003c/a\u003e.  Note that it is not maintained and may include out of date versions by the time you read this.\u003c/p\u003e",
        "section": "Tutorials",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/installing-drupal-and-mautic-together-in-one-project/412",
        "relurl": "/t/installing-drupal-and-mautic-together-in-one-project/412"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "81ba15cf84e22e2354d0ef5a8272e09e6d43c5fb",
        "title": "About the Activity scripts category",
        "description": "",
        "text": "\u003cp\u003eA place to share and get feedback on Activity scripts for \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eActivity scripts let you customize the \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e workflow by responding to “activities,” events within the project life-cycle.  See the \u003ca href=\"https://docs.platform.sh/administration/integrations/activity-scripts.html\"\u003edocumentation\u003c/a\u003e for more details.\u003c/p\u003e",
        "section": "Activity scripts",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/about-the-activity-scripts-category/561",
        "relurl": "/t/about-the-activity-scripts-category/561"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "283b44e7e222d1c43318e7e265c3c7e29f2b2104",
        "title": "Script that creates a Github Status providing the URL of a new deployed environnement",
        "description": "",
        "text": "\u003cp\u003eHello,\u003c/p\u003e\n\u003cp\u003ePlease find the script there to follow its update!\u003c/p\u003e\n\u003caside class=\"onebox githubblob\"\u003e\n  \u003cheader class=\"source\"\u003e\n      \u003ca href=\"https://github.com/Plopix/platformsh-activity-scripts/blob/master/github/env_url.js\" target=\"_blank\" rel=\"nofollow noopener\"\u003egithub.com\u003c/a\u003e\n  \u003c/header\u003e\n  \u003carticle class=\"onebox-body\"\u003e\n    \u003ch4\u003e\u003ca href=\"https://github.com/Plopix/platformsh-activity-scripts/blob/master/github/env_url.js\" target=\"_blank\" rel=\"nofollow noopener\"\u003ePlopix/platformsh-activity-scripts/blob/master/github/env_url.js\u003c/a\u003e\u003c/h4\u003e\n\u003cpre\u003e\u003ccode class=\"lang-js\"\u003e/**\n * Platform.sh Activity Script that creates a Github Status providing the first URL of a new deployed environnement\n *\n * Usage: Setup a project variable: env:GITHUB_AUTH with a JSON value:\n *\n * env:GITHUB_AUTH={\"owner\": \"YourLogin\", \"repository\": \"YourRepo\", \"token\": \"YourToken\"}\n *\n * Quick note: set that project variable as sensitive.\n *\n * @author    Sébastien Morel aka Plopix \u0026lt;morel.seb@gmail.com\u0026gt;\n * @license   MIT\n */\ntry {\n    var GITHUB_AUTH = activity.payload.deployment.variables.reduce(function (accumulator, variable) {\n        return (variable.name === 'GITHUB_AUTH') ? JSON.parse(variable.value) : accumulator;\n    }, false);\n\n    if (\n        typeof activity !== 'undefined' \u0026amp;\u0026amp;\n        activity.result === 'success' \u0026amp;\u0026amp;\n\u003c/code\u003e\u003c/pre\u003e\n\n  This file has been truncated. \u003ca href=\"https://github.com/Plopix/platformsh-activity-scripts/blob/master/github/env_url.js\" target=\"_blank\" rel=\"nofollow noopener\"\u003eshow original\u003c/a\u003e\n\n  \u003c/article\u003e\n  \u003cdiv class=\"onebox-metadata\"\u003e\n    \n    \n  \u003c/div\u003e\n  \u003cdiv style=\"clear: both\"\u003e\u003c/div\u003e\n\u003c/aside\u003e\n\n\u003cp\u003eDon’t hesitate to give me your feedback.\u003c/p\u003e\n\u003cp\u003eThanks\u003c/p\u003e",
        "section": "Activity scripts",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/script-that-creates-a-github-status-providing-the-url-of-a-new-deployed-environnement/577",
        "relurl": "/t/script-that-creates-a-github-status-providing-the-url-of-a-new-deployed-environnement/577"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "aa6d18602b239e1a1b3833d9eaf18c0b02281eae",
        "title": "Script to check for deprecated or newer available runtimes and services versions",
        "description": "",
        "text": "\u003cp\u003e\u003cstrong\u003eOverview\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eEvery time you redeploy an environment, the script will:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003echeck the versions of your project’s services and runtimes.\u003c/li\u003e\n\u003cli\u003ecompare those versions with the \u003ca href=\"https://docs.platform.sh/registry/images/registry.json\"\u003ePlatform.sh registry\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003esend a Slack notification about the ones which you need to upgrade.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cdiv class=\"lightbox-wrapper\"\u003e\u003ca class=\"lightbox\" href=\"https://community.platform.sh/uploads/default/original/1X/a9bfce0a3251ab3f968bd419c322cdc9948e12c4.png\" data-download-href=\"https://community.platform.sh/uploads/default/a9bfce0a3251ab3f968bd419c322cdc9948e12c4\" title=\"Capture d’écran 2020-05-29 à 16.28.02.png\"\u003e\u003cimg src=\"https://community.platform.sh/uploads/default/optimized/1X/a9bfce0a3251ab3f968bd419c322cdc9948e12c4_2_533x500.png\" alt=\"02\" data-base62-sha1=\"odFDdhlYmvhxWzNAh0T0EAveTkg\" width=\"533\" height=\"500\" srcset=\"https://community.platform.sh/uploads/default/optimized/1X/a9bfce0a3251ab3f968bd419c322cdc9948e12c4_2_533x500.png, https://community.platform.sh/uploads/default/original/1X/a9bfce0a3251ab3f968bd419c322cdc9948e12c4.png 1.5x, https://community.platform.sh/uploads/default/original/1X/a9bfce0a3251ab3f968bd419c322cdc9948e12c4.png 2x\" data-small-upload=\"https://community.platform.sh/uploads/default/optimized/1X/a9bfce0a3251ab3f968bd419c322cdc9948e12c4_2_10x10.png\"\u003e\u003cdiv class=\"meta\"\u003e\n\u003csvg class=\"fa d-icon d-icon-far-image svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#far-image\"\u003e\u003c/use\u003e\u003c/svg\u003e\u003cspan class=\"filename\"\u003eCapture d’écran 2020-05-29 à 16.28.02.png\u003c/span\u003e\u003cspan class=\"informations\"\u003e587×550 78.8 KB\u003c/span\u003e\u003csvg class=\"fa d-icon d-icon-discourse-expand svg-icon\" aria-hidden=\"true\"\u003e\u003cuse xlink:href=\"#discourse-expand\"\u003e\u003c/use\u003e\u003c/svg\u003e\n\u003c/div\u003e\u003c/a\u003e\u003c/div\u003e\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eColors\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eRed: 1 or more service is deprecated.\u003c/li\u003e\n\u003cli\u003eOrange: 1 or more service is not at the latest version.\u003c/li\u003e\n\u003cli\u003eGreen: All services are at the latest version.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eScript\u003c/strong\u003e\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e/**\n * Returns a key/value object containing all variables relevant for the activity.\n *\n * That includes project level variables, plus any variables visible for\n * the relevant environment for the activity, if any.\n *\n * Note that JSON-encoded values will show up as a string, and need to be\n * decoded with JSON.parse().\n */\nfunction variables() {\n    var vars = {};\n    activity.payload.deployment.variables.forEach(function(variable) {\n        vars[variable.name] = variable.value;\n    });\n    return vars;\n}\n\n/**\n * Sends a color-coded formatted message to Slack.\n *\n * You must first configure a Platform.sh variable named \"SLACK_URL\".\n * That is the group and channel to which the message will be sent.\n *\n * To control what events it will run on, use the --events switch in\n * the Platform.sh CLI.\n *\n * @param {string} title\n *   The title of the message block to send.\n * @param {string} message\n *   The message body to send.\n */\nfunction sendSlackMessage(title, message) {\n    if ((new Date).getDay() === 5) {\n        message += '\\r\\nCongratulations for deploying on a Friday! :calendar:';\n    }\n    var body = {\n        'attachments': [{\n            'title': title,\n            'text': message,\n            'color': color,\n        }],\n    };\n    var url = variables()['SLACK_URL'];\n    if (!url) {\n        throw new Error('You must define a SLACK_URL project variable.');\n    }\n    var resp = fetch(url,{\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n    });\n    if (!resp.ok) {\n        console.log('[LOG] Sending slack message failed: ' + resp.body.text());\n    }\n}\n\n/**\n * Compare the services and runtimes versions with the Platform.sh public registry.\n *\n * @param {json} services\n *   The services/runtimes that your project is using within the activity.payload.deployment payload.\n * @param {json} registry\n *   The Platform.sh registry available at: https://docs.platform.sh/registry/images/registry.json\n */\nfunction compareVersions(services, registry) {\n    var results = Object.keys(services).map(function(serviceName) {\n        var service = services[serviceName];\n        var s = service.type.split(':');\n        var type = s[0];\n        var version = s[1];\n        var registryService = registry[type];\n        var name = registryService.name;\n        if(!registryService) {\n            return 'Unsupported '+ type;\n        }\n        var versions = registryService.versions;\n        \n        // Check for supported versions\n        var indexOfSupported = versions.supported.indexOf(version);\n        if(indexOfSupported !== -1) {\n            var resp = 'Your ' + name + ' ' + version + ' is the most recent one.\\n';\n            if(indexOfSupported \u0026lt; (versions.supported.length - 1)) {\n                if (color == 'good') { color = 'warning' };\n                resp = 'Your ' + name + ' ' + version + ' is not the latest, you can upgrade to a newer version: ' + versions.supported[versions.supported.length - 1] + '.\\n';\n            }\n            return resp;\n        }\n\n        // Check for deprecated versions\n        var indexOfDeprecated = versions.deprecated.indexOf(version);\n        if(indexOfDeprecated !== -1) {\n            color = 'danger';\n            return 'Your ' + name + ' ' + version + ' is deprecated, please upgrade to a newer version: ' + versions.supported + '.\\n';\n        }\n        return  'Your ' + name + ' ' + version + ' is not supported.';\n    });\n    return results;\n}\n\n// @TODO: Remove the temporary fix when the official registry can be fetched entirely.\nvar res = fetch('https://master-7rqtwti-ms5ebigtfuhc6.eu-3.platformsh.site', {headers: {'content-type': 'application/json'}});\nif (!res.ok) {\n    console.log('[LOG] Failed to load the Platform.sh registry.');\n}\n\nvar color = 'good';\nvar registryPayload = res.json();\nvar message = compareVersions(activity.payload.deployment.webapps, registryPayload).join('');\nmessage += compareVersions(activity.payload.deployment.services, registryPayload).join('');\nconsole.log(message);\nvar title = activity.text;\nsendSlackMessage(title, message);\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003cstrong\u003eCaveat\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eThis script is using a temporary registry (\u003ca href=\"https://master-7rqtwti-ms5ebigtfuhc6.eu-3.platformsh.site\" rel=\"nofollow noopener\"\u003ehttps://master-7rqtwti-ms5ebigtfuhc6.eu-3.platformsh.site\u003c/a\u003e) until a fix is deployed to our Glue server. I’ll update it here when the fix is released.\u003c/p\u003e",
        "section": "Activity scripts",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/script-to-check-for-deprecated-or-newer-available-runtimes-and-services-versions/575",
        "relurl": "/t/script-to-check-for-deprecated-or-newer-available-runtimes-and-services-versions/575"
    },
    {
        "site": "community",
        "rank": 4,
        "documentId": "b04dd04d473aba6383887776cbe077d9caaedfb9",
        "title": "Post activities to a Slack room",
        "description": "",
        "text": "\u003cp\u003eHere’s a simple script to post activities to Slack.  You’ll need to create a \u003ccode\u003eSLACK_URL\u003c/code\u003e project variable, which you set to the value Slack gives you when setting up an integration on their end.\u003c/p\u003e\n\u003cp\u003eYou can customize the message format by changing the \u003ccode\u003ebody\u003c/code\u003e variable.  See \u003ca href=\"https://api.slack.com/messaging/composing/layouts\" rel=\"nofollow noopener\"\u003eSlack’s documentation\u003c/a\u003e for the various options there.\u003c/p\u003e\n\u003cp\u003eIt doesn’t filter the type of activity or the environment.  You can do that when configuring the script on \u003ca href=\"http://Platform.sh\" rel=\"nofollow noopener\"\u003ePlatform.sh\u003c/a\u003e directly.\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"lang-auto\"\u003e/**\n * Sends a color-coded formatted message to Slack.\n *\n * You must first configure a Platform.sh variable named \"SLACK_URL\".\n * That is the group and channel to which the message will be sent.\n *\n * To control what events it will run on, use the --events switch in\n * the Platform.sh CLI.\n *\n * @param {string} title\n *   The title of the message block to send.\n * @param {string} message\n *   The message body to send.\n */\nfunction sendSlackMessage(title, message) {\n\n    console.log((new Date).getDay());\n\n    if ((new Date).getDay() === 5) {\n        message += \"\\r\\nOn a Friday! :calendar:\";\n    }\n\n    var color = activity.result === 'success'\n        ? '#66c000'\n        : '#ff0000';\n\n    var body = {\n        'attachments': [{\n            \"title\": title,\n            \"text\": message,\n            \"color\": color,\n        }],\n    };\n\n    var url = variables()['SLACK_URL'];\n\n    if (!url) {\n        throw new Error('You must define a SLACK_URL project variable.');\n    }\n\n    var resp = fetch(url,{\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n    });\n\n    if (!resp.ok) {\n        console.log(\"Sending slack message failed: \" + resp.body.text());\n    }\n}\n\nfunction variables() {\n    var vars = {};\n    activity.payload.deployment.variables.forEach(function(variable) {\n        vars[variable.name] = variable.value;\n    });\n\n    return vars;\n}\n\nsendSlackMessage(activity.text, activity.log);\n\u003c/code\u003e\u003c/pre\u003e",
        "section": "Activity scripts",
        "subsections": "",
        "image": "",
        "url": "https://community.platform.sh//t/post-activities-to-a-slack-room/574",
        "relurl": "/t/post-activities-to-a-slack-room/574"
    }
]